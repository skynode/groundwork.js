[
  {
    "__docId__": 0,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/Auth.js",
    "memberof": null,
    "longname": "src/Auth.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import * as constants from './constants';\nimport Dictionary from './Dictionary';\nimport Http from './Http';\nimport merge from 'lodash-es/merge';\nimport { urlJoin } from './utils';\n\n/**\n * API Endpoints\n */\nconst NAMESPACE = 'oauth';\nconst ENDPOINT_TOKEN = 'token';\n\n/**\n * Manage oauth and user tokens for the client. Once a successful auth token has\n * been fetched it is stored in `this.config` for use in authenticated\n * requests to the API.\n */\nexport default class Auth {\n  /**\n   * Constructor\n   * @param {Dictionary} [config] - client configuration\n   * @param {Http} http - required\n   */\n  constructor(config, http) {\n    /** @type {Dictionary} */\n    this.config = (config && config instanceof Dictionary) ?\n      config : new Dictionary();\n\n    // Resource must have an Http instance\n    if (!http || http instanceof Http === false) {\n      throw new Error('Auth requires Http');\n    }\n\n    /** @type {Http} */\n    this.http = http;\n  }\n\n  /**\n   * If a response contains data, drop it into the user key in config\n   *\n   * @access private\n   * @param {Object} response\n   * @return {Object}\n   */\n  storeAuthResponse(response) {\n    if (response && response.status === 200) {\n      this.auth = merge({}, this.auth, response.data);\n    }\n    return response;\n  }\n\n  /**\n   * Make a POST to the token endpoint and pass the result to\n   * storeAuthResponse for handling. The Promise is then returned to the\n   * original caller for further chaining.\n   *\n   * @access private\n   * @param {Object} params sent to the endpoint\n   * @return {Promise}\n   */\n  requestToken(data) {\n    const url = urlJoin(NAMESPACE, ENDPOINT_TOKEN);\n    return this.http.post(url, data).then(this.storeAuthResponse.bind(this));\n  }\n\n  /**\n   * Wipe out auth settings in config, which will prevent authenticated requests\n   * until a new one is fetchd\n   *\n   * @return {Object}\n   */\n  destroyToken() {\n    this.config.del(constants.CONFIG_AUTH);\n    return this.config.set(constants.CONFIG_AUTH, {});\n  }\n\n  /**\n   * Use email / password to fetch Rex token\n   *\n   * @param {String} email\n   * @param {String} password\n   * @return {Promise}\n   */\n  fetchUsingPassword(email = '', password = '') {\n    return this.requestToken({\n      email,\n      password,\n      grant_type: 'password'\n    });\n  }\n\n  /**\n   * Use Facebook to fetch Rex token\n   *\n   * @param {String} accessToken\n   * @return {Promise}\n   */\n  fetchUsingFacebook(accessToken = '') {\n    return this.requestToken({\n      access_token: accessToken,\n      grant_type: 'facebook'\n    });\n  }\n\n  /**\n   * Use Google to fetch Rex token\n   *\n   * @param {String} accessToken\n   * @return {Promise}\n   */\n  fetchUsingGoogle(accessToken = '') {\n    return this.requestToken({\n      access_token: accessToken,\n      grant_type: 'google'\n    });\n  }\n\n  /**\n   * Convenience method to get the Facebook APP Id registered with the client\n   *\n   * @return {String}\n   */\n  get facebookAppId() {\n    return this.config.get(constants.FACEBOOK_APP_ID);\n  }\n\n  /**\n   * Return the entire authentication object\n   *\n   * @return {Object}\n   */\n  get auth() {\n    return this.config.get(constants.CONFIG_AUTH);\n  }\n\n  /**\n   * Return the authorization token\n   *\n   * @return {String}\n   */\n  get token() {\n    return this.auth[constants.AUTH_ACCESS_TOKEN];\n  }\n\n  /**\n   * Return the authorization token\n   *\n   * @return {String}\n   */\n  get tokenType() {\n    return this.auth[constants.AUTH_TOKEN_TYPE];\n  }\n\n  /**\n   * Return the gwid\n   *\n   * @return {String}\n   */\n  get gwid() {\n    return this.auth[constants.AUTH_GWID];\n  }\n\n  /**\n   * Return a string for use in an Authorization header: \"{tokenType} {token}\"\n   *\n   * @return {String}\n   */\n  get authorizationHeader() {\n    return `${ this.tokenType } ${ this.token }`;\n  }\n\n  /**\n   * Safely merge a key/val into the auth config object, used in setters\n   *\n   * @access private\n   * @param {String} key - key name\n   * @param {<any>} val - value to store, usually a string\n   * @return {undefined|Object}\n   */\n  insertAuthKey(key, val) {\n    const auth = merge({}, this.auth);\n    if (!key || !val) { return undefined; }\n    auth[key] = val;\n    this.auth = auth;\n    return this.auth;\n  }\n\n  /**\n   * Set auth config object\n   *\n   * @param {Object} obj - obj to set\n   * @return {Object}\n   */\n  set auth(obj) {\n    this.config.set(constants.CONFIG_AUTH, merge({}, obj));\n    return this.auth;\n  }\n\n  /**\n   * Set token config object\n   *\n   * @type {String}\n   */\n  set token(token) {\n    this.insertAuthKey(constants.AUTH_ACCESS_TOKEN, token);\n  }\n\n  /**\n   * Set gwid config object\n   *\n   * @type {String}\n   */\n  set gwid(gwid) {\n    this.insertAuthKey(constants.AUTH_GWID, gwid);\n  }\n\n  /**\n   * Set tokenType config object\n   *\n   * @type {String}\n   */\n  set tokenType(type) {\n    this.insertAuthKey(constants.AUTH_TOKEN_TYPE, type);\n  }\n}\n"
  },
  {
    "__docId__": 1,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "NAMESPACE",
    "memberof": "src/Auth.js",
    "longname": "src/Auth.js~NAMESPACE",
    "access": null,
    "export": false,
    "importPath": "groundwork.js/src/Auth.js",
    "importStyle": null,
    "description": "API Endpoints",
    "lineNumber": 10,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 2,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "ENDPOINT_TOKEN",
    "memberof": "src/Auth.js",
    "longname": "src/Auth.js~ENDPOINT_TOKEN",
    "access": null,
    "export": false,
    "importPath": "groundwork.js/src/Auth.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 3,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Auth",
    "memberof": "src/Auth.js",
    "longname": "src/Auth.js~Auth",
    "access": null,
    "export": true,
    "importPath": "groundwork.js/src/Auth.js",
    "importStyle": "Auth",
    "description": "Manage oauth and user tokens for the client. Once a successful auth token has\nbeen fetched it is stored in `this.config` for use in authenticated\nrequests to the API.",
    "lineNumber": 18,
    "interface": false
  },
  {
    "__docId__": 4,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/Auth.js~Auth",
    "longname": "src/Auth.js~Auth#constructor",
    "access": null,
    "description": "Constructor",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "Dictionary"
        ],
        "spread": false,
        "optional": true,
        "name": "config",
        "description": "client configuration"
      },
      {
        "nullable": null,
        "types": [
          "Http"
        ],
        "spread": false,
        "optional": false,
        "name": "http",
        "description": "required"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 5,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "config",
    "memberof": "src/Auth.js~Auth",
    "longname": "src/Auth.js~Auth#config",
    "access": null,
    "description": null,
    "lineNumber": 26,
    "type": {
      "nullable": null,
      "types": [
        "Dictionary"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 6,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "http",
    "memberof": "src/Auth.js~Auth",
    "longname": "src/Auth.js~Auth#http",
    "access": null,
    "description": null,
    "lineNumber": 35,
    "type": {
      "nullable": null,
      "types": [
        "Http"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 7,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "storeAuthResponse",
    "memberof": "src/Auth.js~Auth",
    "longname": "src/Auth.js~Auth#storeAuthResponse",
    "access": "private",
    "description": "If a response contains data, drop it into the user key in config",
    "lineNumber": 45,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "response",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 8,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "auth",
    "memberof": "src/Auth.js~Auth",
    "longname": "src/Auth.js~Auth#auth",
    "access": null,
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 9,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "requestToken",
    "memberof": "src/Auth.js~Auth",
    "longname": "src/Auth.js~Auth#requestToken",
    "access": "private",
    "description": "Make a POST to the token endpoint and pass the result to\nstoreAuthResponse for handling. The Promise is then returned to the\noriginal caller for further chaining.",
    "lineNumber": 61,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "sent to the endpoint"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 10,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "destroyToken",
    "memberof": "src/Auth.js~Auth",
    "longname": "src/Auth.js~Auth#destroyToken",
    "access": null,
    "description": "Wipe out auth settings in config, which will prevent authenticated requests\nuntil a new one is fetchd",
    "lineNumber": 72,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 11,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "fetchUsingPassword",
    "memberof": "src/Auth.js~Auth",
    "longname": "src/Auth.js~Auth#fetchUsingPassword",
    "access": null,
    "description": "Use email / password to fetch Rex token",
    "lineNumber": 84,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "email",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "password",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 12,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "fetchUsingFacebook",
    "memberof": "src/Auth.js~Auth",
    "longname": "src/Auth.js~Auth#fetchUsingFacebook",
    "access": null,
    "description": "Use Facebook to fetch Rex token",
    "lineNumber": 98,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "accessToken",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 13,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "fetchUsingGoogle",
    "memberof": "src/Auth.js~Auth",
    "longname": "src/Auth.js~Auth#fetchUsingGoogle",
    "access": null,
    "description": "Use Google to fetch Rex token",
    "lineNumber": 111,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "accessToken",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 14,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "facebookAppId",
    "memberof": "src/Auth.js~Auth",
    "longname": "src/Auth.js~Auth#facebookAppId",
    "access": null,
    "description": "Convenience method to get the Facebook APP Id registered with the client",
    "lineNumber": 123,
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 15,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "auth",
    "memberof": "src/Auth.js~Auth",
    "longname": "src/Auth.js~Auth#auth",
    "access": null,
    "description": "Return the entire authentication object",
    "lineNumber": 132,
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 16,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "token",
    "memberof": "src/Auth.js~Auth",
    "longname": "src/Auth.js~Auth#token",
    "access": null,
    "description": "Return the authorization token",
    "lineNumber": 141,
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 17,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "tokenType",
    "memberof": "src/Auth.js~Auth",
    "longname": "src/Auth.js~Auth#tokenType",
    "access": null,
    "description": "Return the authorization token",
    "lineNumber": 150,
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 18,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "gwid",
    "memberof": "src/Auth.js~Auth",
    "longname": "src/Auth.js~Auth#gwid",
    "access": null,
    "description": "Return the gwid",
    "lineNumber": 159,
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 19,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "authorizationHeader",
    "memberof": "src/Auth.js~Auth",
    "longname": "src/Auth.js~Auth#authorizationHeader",
    "access": null,
    "description": "Return a string for use in an Authorization header: \"{tokenType} {token}\"",
    "lineNumber": 168,
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "string"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 20,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "insertAuthKey",
    "memberof": "src/Auth.js~Auth",
    "longname": "src/Auth.js~Auth#insertAuthKey",
    "access": "private",
    "description": "Safely merge a key/val into the auth config object, used in setters",
    "lineNumber": 180,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "key name"
      },
      {
        "nullable": null,
        "types": [
          "<any>"
        ],
        "spread": false,
        "optional": false,
        "name": "val",
        "description": "value to store, usually a string"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined",
        "Object"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 21,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "auth",
    "memberof": "src/Auth.js~Auth",
    "longname": "src/Auth.js~Auth#auth",
    "access": null,
    "description": null,
    "lineNumber": 184,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 22,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "auth",
    "memberof": "src/Auth.js~Auth",
    "longname": "src/Auth.js~Auth#auth",
    "access": null,
    "description": "Set auth config object",
    "lineNumber": 194,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "obj to set"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 23,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "token",
    "memberof": "src/Auth.js~Auth",
    "longname": "src/Auth.js~Auth#token",
    "access": null,
    "description": "Set token config object",
    "lineNumber": 204,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    },
    "generator": false
  },
  {
    "__docId__": 24,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "gwid",
    "memberof": "src/Auth.js~Auth",
    "longname": "src/Auth.js~Auth#gwid",
    "access": null,
    "description": "Set gwid config object",
    "lineNumber": 213,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    },
    "generator": false
  },
  {
    "__docId__": 25,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "tokenType",
    "memberof": "src/Auth.js~Auth",
    "longname": "src/Auth.js~Auth#tokenType",
    "access": null,
    "description": "Set tokenType config object",
    "lineNumber": 222,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    },
    "generator": false
  },
  {
    "__docId__": 26,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/Dictionary.js",
    "memberof": null,
    "longname": "src/Dictionary.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Simple dictionary for storing configuration key/val pairs\n *\n * @example\n * let d = new Dictionary({foo: 1});\n * d.get('foo'); // returns 1\n * d.set('bar', 2); d.get('bar'); // returns 2\n */\nexport default class Dictionary {\n  /**\n   * Constructor with or without default values\n   * @param {Object} [defaults] - initial values in dictionary\n   */\n  constructor(defaults = {}) {\n    /**\n     * @type {Object}\n     */\n    this.dict = {};\n    if (defaults) {\n      this.merge(defaults);\n    }\n  }\n\n  /**\n   * Set or overwrite a value\n   * @param {string} key - name of value\n   * @param {*} val - value to store\n   * @return {Object|undefined}\n   */\n  set(key, val) {\n    if (!key || !val) {\n      return undefined;\n    }\n\n    this.dict[key] = val;\n    return this.data();\n  }\n\n  /**\n   * Get a value\n   * @param {string} key - name of value\n   * @return {*}\n   */\n  get(key) {\n    if (key && this.dict[key]) {\n      return this.dict[key];\n    }\n    return undefined;\n  }\n\n  /**\n   * Delete a value\n   * @param {string} key - name of value\n   * @return {undefined}\n   */\n  del(key) {\n    if (key && this.dict[key]) {\n      delete this.dict[key];\n      return this.data();\n    }\n    return undefined;\n  }\n\n  /**\n   * Predicate: check existence of key\n   * @param {string} key - name of value\n   * @return {boolean}\n   */\n  has(key) {\n    return !!(key && this.dict[key]);\n  }\n\n  /**\n   * Return a list of keynames\n   * @return {Array<string>}\n   */\n  keys() {\n    return Object.keys(this.dict);\n  }\n\n  /**\n   * Return a list of values\n   * @return {Array}\n   */\n  values() {\n    const ret = [];\n    const data = this.data();\n\n    for (const k in data) {\n      if (data.hasOwnProperty(k)) {\n        ret.push(this.get(k));\n      }\n    }\n\n    return ret.filter((x) => x);\n  }\n\n  /**\n   * Merge an object into the existing dictionary. This will mutate the\n   * dictionary.\n   * @return {Object}\n   */\n  merge(obj) {\n    if (!obj) {\n      return this.data();\n    }\n\n    for (const k in obj) {\n      if (obj.hasOwnProperty(k)) {\n        this.set(k, obj[k]);\n      }\n    }\n\n    return this.data();\n  }\n\n  /**\n   * Return a JSON string representation of the dictionary\n   * @return {string}\n   */\n  toString() {\n    return JSON.stringify(this.data());\n  }\n\n  /**\n   * Return the raw dictionary object\n   * @return {Object}\n   */\n  data() {\n    return this.dict;\n  }\n\n  /**\n   * Return the 'length' of the dictionary (# of keys)\n   * @return {Number}\n   */\n  length() {\n    return this.keys().length;\n  }\n}\n"
  },
  {
    "__docId__": 27,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Dictionary",
    "memberof": "src/Dictionary.js",
    "longname": "src/Dictionary.js~Dictionary",
    "access": null,
    "export": true,
    "importPath": "groundwork.js/src/Dictionary.js",
    "importStyle": "Dictionary",
    "description": "Simple dictionary for storing configuration key/val pairs",
    "examples": [
      "let d = new Dictionary({foo: 1});\nd.get('foo'); // returns 1\nd.set('bar', 2); d.get('bar'); // returns 2"
    ],
    "lineNumber": 9,
    "interface": false
  },
  {
    "__docId__": 28,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/Dictionary.js~Dictionary",
    "longname": "src/Dictionary.js~Dictionary#constructor",
    "access": null,
    "description": "Constructor with or without default values",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "defaults",
        "description": "initial values in dictionary"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 29,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "dict",
    "memberof": "src/Dictionary.js~Dictionary",
    "longname": "src/Dictionary.js~Dictionary#dict",
    "access": null,
    "description": "",
    "lineNumber": 18,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 30,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "set",
    "memberof": "src/Dictionary.js~Dictionary",
    "longname": "src/Dictionary.js~Dictionary#set",
    "access": null,
    "description": "Set or overwrite a value",
    "lineNumber": 30,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "name of value"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "val",
        "description": "value to store"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object",
        "undefined"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 31,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "get",
    "memberof": "src/Dictionary.js~Dictionary",
    "longname": "src/Dictionary.js~Dictionary#get",
    "access": null,
    "description": "Get a value",
    "lineNumber": 44,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "name of value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 32,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "del",
    "memberof": "src/Dictionary.js~Dictionary",
    "longname": "src/Dictionary.js~Dictionary#del",
    "access": null,
    "description": "Delete a value",
    "lineNumber": 56,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "name of value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 33,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "has",
    "memberof": "src/Dictionary.js~Dictionary",
    "longname": "src/Dictionary.js~Dictionary#has",
    "access": null,
    "description": "Predicate: check existence of key",
    "lineNumber": 69,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "name of value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 34,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "keys",
    "memberof": "src/Dictionary.js~Dictionary",
    "longname": "src/Dictionary.js~Dictionary#keys",
    "access": null,
    "description": "Return a list of keynames",
    "lineNumber": 77,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Array<string>"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 35,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "values",
    "memberof": "src/Dictionary.js~Dictionary",
    "longname": "src/Dictionary.js~Dictionary#values",
    "access": null,
    "description": "Return a list of values",
    "lineNumber": 85,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 36,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "merge",
    "memberof": "src/Dictionary.js~Dictionary",
    "longname": "src/Dictionary.js~Dictionary#merge",
    "access": null,
    "description": "Merge an object into the existing dictionary. This will mutate the\ndictionary.",
    "lineNumber": 103,
    "params": [
      {
        "name": "obj",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 37,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "toString",
    "memberof": "src/Dictionary.js~Dictionary",
    "longname": "src/Dictionary.js~Dictionary#toString",
    "access": null,
    "description": "Return a JSON string representation of the dictionary",
    "lineNumber": 121,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 38,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "data",
    "memberof": "src/Dictionary.js~Dictionary",
    "longname": "src/Dictionary.js~Dictionary#data",
    "access": null,
    "description": "Return the raw dictionary object",
    "lineNumber": 129,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 39,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "length",
    "memberof": "src/Dictionary.js~Dictionary",
    "longname": "src/Dictionary.js~Dictionary#length",
    "access": null,
    "description": "Return the 'length' of the dictionary (# of keys)",
    "lineNumber": 137,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 40,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/Donation.js",
    "memberof": null,
    "longname": "src/Donation.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import Payment from './Payment';\nimport schema from './schema/donation';\nimport { max, only, urlJoin } from './utils';\n\n/** @type {String} - API endpoint for resource */\nconst ENDPOINT_DONATION = 'donations';\n\n/**\n * Create and view donations\n *\n * list(opts) - get a filtered list of donations\n * create(donation) - create a new donation\n * fetch(id) - fetch a donation object\n *\n */\nexport default class Donation extends Payment {\n  /**\n   * Fetch a collection of Donation objects, filtering on gwid, subscription,\n   * quickCard and email.\n   *\n   * @param {Object} opts\n   * @param {String} [opts.gwid] - gwid to filter on\n   * @param {String} [opts.subscription] - sub id to filter on\n   * @param {String} [opts.quickCard] - quickcard id to filter on\n   * @param {String} [opts.email] - email to filter on\n   * @param {Number} [opts.page] - page number\n   * @param {Number} [opts.perPage] - donations per page\n   * @return {Promise}\n   */\n  list(opts = {}) {\n    const whitelist = ['gwid', 'subscription', 'quickCard', 'email', 'page',\n                     'perPage'];\n\n    const params = only(whitelist, opts);\n    if (params.perPage) {\n      params.perPage = max(params.perPage); // Max of 50\n    }\n\n    const url = urlJoin(this.namespace, ENDPOINT_DONATION);\n    return this.fetchCollection(url, params);\n  }\n\n  /**\n   * Fetch a single Donation object\n   *\n   * @param {String} id - donation id\n   * @return {Promise}\n   */\n  fetch(id = '') {\n    const url = urlJoin(this.namespace, ENDPOINT_DONATION, id);\n    return this.fetchCollection(url);\n  }\n\n  /**\n   * POST a donation record to the API\n   *\n   * The passed in form object will be validated. If it fails, a mock response\n   * with any errors will be sent back in a rejected Promise. This is to present\n   * the least amount of surprise to the developer.\n   *\n   * Note: All of the values in the object passed to the method should have had\n   * their types coerced already or validation will fail.\n   *\n   * @example\n   * // validation fail\n   * supporter.create({}).catch((err) => console.log(err));\n   * // => { status: 400, data: { error: { valid: false, ... } } ... }\n   *\n   * @param {Object} [donation]\n   * @return {Promise}\n   */\n  create(donation = {}) {\n    const checkDonation = this.validatePayment(donation, schema);\n\n    // Return a mock error response with validation errors\n    if (checkDonation.valid === false) {\n      const response = this.http.generateErrorResponse(checkDonation);\n      return Promise.reject(response);\n    }\n\n    const _donation = this.attachIdentity(donation);\n    const url = urlJoin(this.namespace, ENDPOINT_DONATION);\n    return this.http.post(url, _donation);\n  }\n}\n"
  },
  {
    "__docId__": 41,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "ENDPOINT_DONATION",
    "memberof": "src/Donation.js",
    "longname": "src/Donation.js~ENDPOINT_DONATION",
    "access": null,
    "export": false,
    "importPath": "groundwork.js/src/Donation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 42,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Donation",
    "memberof": "src/Donation.js",
    "longname": "src/Donation.js~Donation",
    "access": null,
    "export": true,
    "importPath": "groundwork.js/src/Donation.js",
    "importStyle": "Donation",
    "description": "Create and view donations\n\nlist(opts) - get a filtered list of donations\ncreate(donation) - create a new donation\nfetch(id) - fetch a donation object",
    "lineNumber": 16,
    "interface": false,
    "extends": [
      "src/Payment.js~Payment"
    ]
  },
  {
    "__docId__": 43,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "list",
    "memberof": "src/Donation.js~Donation",
    "longname": "src/Donation.js~Donation#list",
    "access": null,
    "description": "Fetch a collection of Donation objects, filtering on gwid, subscription,\nquickCard and email.",
    "lineNumber": 30,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "opts.gwid",
        "description": "gwid to filter on"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "opts.subscription",
        "description": "sub id to filter on"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "opts.quickCard",
        "description": "quickcard id to filter on"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "opts.email",
        "description": "email to filter on"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "opts.page",
        "description": "page number"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "opts.perPage",
        "description": "donations per page"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 44,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "fetch",
    "memberof": "src/Donation.js~Donation",
    "longname": "src/Donation.js~Donation#fetch",
    "access": null,
    "description": "Fetch a single Donation object",
    "lineNumber": 49,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "donation id"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 45,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "create",
    "memberof": "src/Donation.js~Donation",
    "longname": "src/Donation.js~Donation#create",
    "access": null,
    "description": "POST a donation record to the API\n\nThe passed in form object will be validated. If it fails, a mock response\nwith any errors will be sent back in a rejected Promise. This is to present\nthe least amount of surprise to the developer.\n\nNote: All of the values in the object passed to the method should have had\ntheir types coerced already or validation will fail.",
    "examples": [
      "// validation fail\nsupporter.create({}).catch((err) => console.log(err));\n// => { status: 400, data: { error: { valid: false, ... } } ... }"
    ],
    "lineNumber": 72,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "donation",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 46,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/Event.js",
    "memberof": null,
    "longname": "src/Event.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import Dictionary from './Dictionary';\nimport Http from './Http';\nimport SchemaUtils from './SchemaUtils';\nimport EventCategory from './EventCategory';\nimport EventInvitation from './EventInvitation';\nimport EventMessage from './EventMessage';\nimport EventTicket from './EventTicket';\nimport eventSchema from './schema/event';\nimport { mixin, only, urlJoin, validEmail } from './utils';\n\n/** @type {String} - API endpoint for resource */\nexport const NAMESPACE = 'events';\n\n/** @type {String} - API endpoint for event resource */\nexport const ENDPOINT_EVENT = 'events';\n\n/** @type {String} - API endpoint for category resource */\nexport const ENDPOINT_CATEGORY = 'categories';\n\n/** @type {String} - API endpoint for invitation resource */\nexport const ENDPOINT_INVITATION = 'invitations';\n\n/** @type {String} - API endpoint for message resource */\nexport const ENDPOINT_MESSAGE = 'messages';\n\n/** @type {String} - API endpoint for ticket resource */\nexport const ENDPOINT_TICKET = 'tickets';\n\n/** @type {String} - API endpoint for unsubscribing an email address */\nexport const ENDPOINT_HOST_UNSUBSCRIBE = 'host-unsubscribe';\n\n/**\n * An Event is a time and a place of an event. It also encompasses an event's\n * title and description.\n *\n * @example\n * const gw = new Groundwork({...});\n *\n * // List all events, while passing in an optional config\n * gw.events.list({ page: 2, perPage: 10 })\n *   .then((response) => console.log(response))\n *   .catch((err) => console.error(err));\n *\n * gw.events.fetch(<event id>)\n *   .then((response) => console.log(response))\n *   .catch((err) => console.error(err));\n *\n * // Create a new event with required properties\n * const eventProps = {\n *   address1: '641 Walnut St.',\n *   addressCity: 'Cincinnati',\n *   addressCountry: 'USA',\n *   addressPostalCode: '45202',\n *   addressStateOrProvince: 'Ohio',\n *   description: 'Come watch the Democratic and Republican candidates debate!',\n *   locationName: 'The Righteous Room',\n *   timeEnd: '2016-09-26T15:00:00',\n *   timeStart: '2016-09-26T12:00:00',\n *   title: 'Debate Watch Party at The Righteous Room'\n * };\n *\n * gw.events.create(eventProps)\n *   .then((response) => console.log(response))\n *   .catch((err) => console.error(err));\n *\n * gw.events.update({ description: 'updated description' })\n *   .then((response) => console.log(response))\n *   .catch((err) => console.error(err));\n *\n * gw.events.replace({...})\n *   .then((response) => console.log(response))\n *   .catch((err) => console.error(err));\n *\n * gw.events.delete(<event id>)\n *   .then((response) => console.log(response))\n *   .catch((err) => console.error(err));\n *\n * // If authenticated, list all tickets across all events,\n * gw.events.listAllTickets({...})\n *   .then((response) => console.log(response))\n *   .catch((err) => console.error(error))\n *\n * gw.events.unsubscribe(<email>, <invitationId>)\n * \t .then((response) => console.log(response))\n * \t .catch((err) => console.error(err))\n */\nclass Event {\n  /**\n   * @param {Dictionary} [config] - configuration dictionary\n   * @param {Http} http - Http instance\n   */\n  constructor(config, http) {\n    /** @type {Dictionary} */\n    this.config = (config && config instanceof Dictionary) ?\n      config : new Dictionary();\n\n    // Resource must have an Http instance\n    if (!http || http instanceof Http === false) {\n      throw new Error('Event requires Http');\n    }\n\n    /** @type {Http} */\n    this.http = http;\n\n    /** @type {SchemaUtils} */\n    this.schemaUtils = SchemaUtils;\n  }\n\n  /**\n   * Validate a payload against a schema. If it fails then return a tuple\n   * with a rejected Promise containing an error message.\n   *\n   * @param {Object} [payload]\n   * @param {Object} schema\n   * @return {Array}\n   */\n  validatePayload(payload = {}, schema) {\n    let out = [true];\n    const valid = this.schemaUtils.validateSchema(payload, schema);\n\n    if (valid.length > 0) {\n      const ret = this.http.generateErrorObject();\n      valid.forEach((err) => {\n        ret.msg.push(err.message);\n        ret.fields.push(this.schemaUtils.extractFieldByError(err));\n      });\n      out = [false, Promise.reject(this.http.generateErrorResponse(ret))];\n    }\n    return out;\n  }\n\n  /**\n   * If a specific function argument is missing then send back a tuple with a\n   * rejected Promise containing an error message.\n   *\n   * @param {*} id - value to check\n   * @param {String} [name] - name of argument being checked\n   * @return {Array}\n   */\n  validateId(id, name = '') {\n    let out = [true];\n\n    if (typeof id !== 'string' || id === null || id === undefined || id === false) {\n      const response = this.http.generateErrorResponse({\n        valid: false,\n        fields: [name],\n        msg: [`Invalid ID: ${name}`]\n      });\n      out = [false, Promise.reject(response)];\n    }\n\n    return out;\n  }\n\n  /**\n   * List all Events\n   *\n   * @param {Object} [opts] - options object\n   * @param {Array|String} [opts.hostGwid] -\n   *   The GWID String of the user who is hosting the event. Only events with the given\n   *   hostGwid will be returned. You may also pass multiple hostGwid's in an array\n   *   include multiple hosts in your request\n   * @param {Boolean} [opts.isDeleted] -\n   *   a Boolean of whether to only return Events that have been deleted. Defaults to\n   *   False. This option is currently only available to Admin users\n   * @param {Number} [opts.latitude] -\n   *   a numeric Float of a latitudinal geographic coordinate by which to filter results.\n   *   This parameter must be provided if performing a geographic filter\n   * @param {Number} [opts.longitude] -\n   *   a numeric Float of a longitudinal geographic coordinate by which to filter results.\n   *   This parameter must be provided if performing a geographic filter\n   * @param {Number} [opts.page] -\n   *   an Integer indicating which page of results should be returned\n   * @param {Number} [opts.perPage] -\n   *   an Integer indicating how many results should be returned per request\n   * @param {Number} [opts.radius] -\n   *   a numeric Float, given in kilometers, of the search radius by with to filter results.\n   *   This parameter must be provided if performing a geographic filter.\n   * @param {String} [opts.search] - a String search field that will query Event titles.\n   * @param {String} [opts.startsBefore] -\n   *   an ISO-8601 formatted String given in local time without a timezone designator.\n   *   Only events occuring before the given timestamp will be returned.\n   * @param {String} [opts.startsAfter] -\n   *   an ISO-8601 formatted String given in local time without a timezone designator.\n   *   Only events occuring after the given timestamp will be returned.\n   * @return {Promise}\n   */\n  list(opts = {}) {\n    const _opts = only(['hostGwid', 'isDeleted', 'latitude', 'longitude', 'page',\n                        'perPage', 'radius', 'search', 'startsBefore',\n                        'startsAfter'], opts);\n\n    const url = urlJoin(NAMESPACE, ENDPOINT_EVENT);\n    return this.http.get(url, { params: _opts });\n  }\n\n  /**\n   * Get a specific Event, by id\n   *\n   * @param  {String} eventId - id of event\n   * @return {Promise}\n   */\n  fetch(eventId) {\n    const [ev, ep] = this.validateId(eventId, 'eventId');\n    if (!ev) { return ep; }\n\n    const url = urlJoin(NAMESPACE, ENDPOINT_EVENT, eventId);\n    return this.http.get(url);\n  }\n\n  /**\n   * Create an Event\n   *\n   * The provided address will be geocoded to discover timezone information. If the\n   * geocode fails, the request will fail and the Event will not be created.\n   *\n   * @param  {Object} [event] - event object\n   * @return {Promise}\n   */\n  create(event = {}) {\n    const [eventv, eventp] = this.validatePayload(event, eventSchema);\n    if (!eventv) { return eventp; }\n\n    const url = urlJoin(NAMESPACE, ENDPOINT_EVENT);\n    return this.http.post(url, event);\n  }\n\n  /**\n   * Update an existing Event, by id\n   *\n   * Only the fields that are passed will be updated.\n   *\n   * If the address field is modified in full or in part, it will be re-geocoded to\n   * update timezone information. If the geocode fails, the request will fail and the\n   * Event will not be modified.\n   *\n   * @param  {String} eventId - id of event\n   * @param  {Object} [event] - fields to update\n   * @return {Promise}\n   */\n  update(eventId, event = {}) {\n    const [ev, ep] = this.validateId(eventId, 'eventId');\n    if (!ev) { return ep; }\n\n    const url = urlJoin(NAMESPACE, ENDPOINT_EVENT, eventId);\n    return this.http.patch(url, event);\n  }\n\n  /**\n   * Replace an existing Event, by id\n   *\n   * All fields are updated. If an optional field is not provided, it will be overwritten\n   * as blank unless otherwise noted.\n   *\n   * If the address field is modified in full or in part, it will be re-geocoded to\n   * update timezone information. If the geocode fails, the request will fail and the\n   * Event will not be modified.\n   *\n   * @param  {String} eventId - id of event\n   * @param  {Object} [event] - fields to update\n   * @return {Promise}\n   */\n  replace(eventId, event = {}) {\n    const [ev, ep] = this.validateId(eventId, 'eventId');\n    if (!ev) { return ep; }\n\n    const [eventv, eventp] = this.validatePayload(event, eventSchema);\n    if (!eventv) { return eventp; }\n\n    const url = urlJoin(NAMESPACE, ENDPOINT_EVENT, eventId);\n    return this.http.put(url, event);\n  }\n\n  /**\n   * Delete a specific Event, by id\n   *\n   * If there are Tickets associated with any Categories under that event, the request\n   * will fail.\n   *\n   * @param  {String} eventId - id of event\n   * @return {Promise}\n   */\n  del(eventId) {\n    const [ev, ep] = this.validateId(eventId, 'eventId');\n    if (!ev) { return ep; }\n\n    const url = urlJoin(NAMESPACE, ENDPOINT_EVENT, eventId);\n    return this.http.delete(url);\n  }\n\n  /**\n   * Get a list of all Tickets. When called by an authenticated user, it will return all\n   * Tickets that have that user as that `purchaserGwid`. When called by an Admin, it\n   * will return all tickets. Both responses are filterable with the optional query\n   * paramters.\n   *\n   * @param {Object} [opts] - options object\n   * @param {Boolean} [opts.isRedeemed] -\n   *   a Boolean representing whether the ticket has been redeemed. Only tickets with\n   *   the given redemption status will be returned.\n   * @param {Number} [opts.page] -\n   *   an Integer indicating which page of results should be returned\n   * @param {Number} [opts.perPage] -\n   *   an Integer indicating how many results should be returned per request\n   * @param {String} [opts.purchaserGwid] -\n   *   is the GWID String of the user who purchased the tickets. Only tickets with the\n   *   given purchaser will be returned.\n   * @param {String} [opts.startsBefore] -\n   *   an ISO-8601 formatted String given in local time without a timezone designator.\n   *   Only tickets in categories occurring before the given timestamp will be returned\n   * @param {String} [opts.startsAfter] -\n   *   an ISO-8601 formatted String given in local time without a timezone designator.\n   *   Only tickets in categories occurring after the given timestamp will be returned.\n   * @return {Promise}\n   */\n  listAllTickets(opts = {}) {\n    const _opts = only(['isRedeemed', 'page', 'perPage', 'purchaserGwid',\n                        'startsBefore', 'startsAfter'], opts);\n\n    const url = urlJoin(NAMESPACE, ENDPOINT_TICKET);\n    return this.http.get(url, { params: _opts });\n  }\n\n  /**\n   * Unsubscribe an email address from all communication from a specific Event host.\n   *\n   * @param  {String} email - email address that wishes to unsubscribe\n   * @param  {Object} [opts] - unsubscribe options\n   * @param  {Object} [opts.invitationId] -\n   *   UUID String unique identifier of the Invitation that triggered the\n   *   unsubscribe request\n   * @param  {Object} [opts.messageId] -\n   *   UUID String unique identifier of the Message that triggered the\n   *   unsubscribe request\n   * @return {[type]}\n   */\n  unsubscribe(email, opts = {}) {\n    const valid = validEmail(email) && (typeof opts === 'object');\n\n    if (!valid) {\n      const response = this.http.generateErrorResponse({\n        valid: false,\n        fields: ['email', 'opts'],\n        msg: [`Valid \\`email\\` and \\`opts\\` are required. Passed email (${email}).\n               and opts (${opts})`]\n      });\n\n      return Promise.reject(response);\n    }\n\n    const { invitationId, messageId } = opts;\n\n    // Only allow users to use one type of ID to unsubscribe, not both\n    if (invitationId && messageId) {\n      const response = this.http.generateErrorResponse({\n        valid: false,\n        fields: ['invitationId', 'messageId'],\n        msg: [`Must unsubscribe via \\`invitationId\\` or \\`messageId\\`, not both.`]\n      });\n\n      return Promise.reject(response);\n    }\n\n    const url = urlJoin(NAMESPACE, ENDPOINT_HOST_UNSUBSCRIBE);\n    return this.http.get(url, { params: { email, invitationId, messageId } });\n  }\n}\n\nmixin(\n  Event,\n  EventCategory,\n  EventInvitation,\n  EventMessage,\n  EventTicket\n);\n\nexport default Event;\n"
  },
  {
    "__docId__": 47,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "NAMESPACE",
    "memberof": "src/Event.js",
    "longname": "src/Event.js~NAMESPACE",
    "access": null,
    "export": true,
    "importPath": "groundwork.js/src/Event.js",
    "importStyle": "{NAMESPACE}",
    "description": null,
    "lineNumber": 12,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 48,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "ENDPOINT_EVENT",
    "memberof": "src/Event.js",
    "longname": "src/Event.js~ENDPOINT_EVENT",
    "access": null,
    "export": true,
    "importPath": "groundwork.js/src/Event.js",
    "importStyle": "{ENDPOINT_EVENT}",
    "description": null,
    "lineNumber": 15,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 49,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "ENDPOINT_CATEGORY",
    "memberof": "src/Event.js",
    "longname": "src/Event.js~ENDPOINT_CATEGORY",
    "access": null,
    "export": true,
    "importPath": "groundwork.js/src/Event.js",
    "importStyle": "{ENDPOINT_CATEGORY}",
    "description": null,
    "lineNumber": 18,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 50,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "ENDPOINT_INVITATION",
    "memberof": "src/Event.js",
    "longname": "src/Event.js~ENDPOINT_INVITATION",
    "access": null,
    "export": true,
    "importPath": "groundwork.js/src/Event.js",
    "importStyle": "{ENDPOINT_INVITATION}",
    "description": null,
    "lineNumber": 21,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 51,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "ENDPOINT_MESSAGE",
    "memberof": "src/Event.js",
    "longname": "src/Event.js~ENDPOINT_MESSAGE",
    "access": null,
    "export": true,
    "importPath": "groundwork.js/src/Event.js",
    "importStyle": "{ENDPOINT_MESSAGE}",
    "description": null,
    "lineNumber": 24,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 52,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "ENDPOINT_TICKET",
    "memberof": "src/Event.js",
    "longname": "src/Event.js~ENDPOINT_TICKET",
    "access": null,
    "export": true,
    "importPath": "groundwork.js/src/Event.js",
    "importStyle": "{ENDPOINT_TICKET}",
    "description": null,
    "lineNumber": 27,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 53,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "ENDPOINT_HOST_UNSUBSCRIBE",
    "memberof": "src/Event.js",
    "longname": "src/Event.js~ENDPOINT_HOST_UNSUBSCRIBE",
    "access": null,
    "export": true,
    "importPath": "groundwork.js/src/Event.js",
    "importStyle": "{ENDPOINT_HOST_UNSUBSCRIBE}",
    "description": null,
    "lineNumber": 30,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 54,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Event",
    "memberof": "src/Event.js",
    "longname": "src/Event.js~Event",
    "access": null,
    "export": true,
    "importPath": "groundwork.js/src/Event.js",
    "importStyle": "Event",
    "description": "An Event is a time and a place of an event. It also encompasses an event's\ntitle and description.",
    "examples": [
      "const gw = new Groundwork({...});\n\n// List all events, while passing in an optional config\ngw.events.list({ page: 2, perPage: 10 })\n  .then((response) => console.log(response))\n  .catch((err) => console.error(err));\n\ngw.events.fetch(<event id>)\n  .then((response) => console.log(response))\n  .catch((err) => console.error(err));\n\n// Create a new event with required properties\nconst eventProps = {\n  address1: '641 Walnut St.',\n  addressCity: 'Cincinnati',\n  addressCountry: 'USA',\n  addressPostalCode: '45202',\n  addressStateOrProvince: 'Ohio',\n  description: 'Come watch the Democratic and Republican candidates debate!',\n  locationName: 'The Righteous Room',\n  timeEnd: '2016-09-26T15:00:00',\n  timeStart: '2016-09-26T12:00:00',\n  title: 'Debate Watch Party at The Righteous Room'\n};\n\ngw.events.create(eventProps)\n  .then((response) => console.log(response))\n  .catch((err) => console.error(err));\n\ngw.events.update({ description: 'updated description' })\n  .then((response) => console.log(response))\n  .catch((err) => console.error(err));\n\ngw.events.replace({...})\n  .then((response) => console.log(response))\n  .catch((err) => console.error(err));\n\ngw.events.delete(<event id>)\n  .then((response) => console.log(response))\n  .catch((err) => console.error(err));\n\n// If authenticated, list all tickets across all events,\ngw.events.listAllTickets({...})\n  .then((response) => console.log(response))\n  .catch((err) => console.error(error))\n\ngw.events.unsubscribe(<email>, <invitationId>)\n\t .then((response) => console.log(response))\n\t .catch((err) => console.error(err))"
    ],
    "lineNumber": 87,
    "interface": false
  },
  {
    "__docId__": 55,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/Event.js~Event",
    "longname": "src/Event.js~Event#constructor",
    "access": null,
    "description": "",
    "lineNumber": 92,
    "params": [
      {
        "nullable": null,
        "types": [
          "Dictionary"
        ],
        "spread": false,
        "optional": true,
        "name": "config",
        "description": "configuration dictionary"
      },
      {
        "nullable": null,
        "types": [
          "Http"
        ],
        "spread": false,
        "optional": false,
        "name": "http",
        "description": "Http instance"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 56,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "config",
    "memberof": "src/Event.js~Event",
    "longname": "src/Event.js~Event#config",
    "access": null,
    "description": null,
    "lineNumber": 94,
    "type": {
      "nullable": null,
      "types": [
        "Dictionary"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 57,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "http",
    "memberof": "src/Event.js~Event",
    "longname": "src/Event.js~Event#http",
    "access": null,
    "description": null,
    "lineNumber": 103,
    "type": {
      "nullable": null,
      "types": [
        "Http"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 58,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "schemaUtils",
    "memberof": "src/Event.js~Event",
    "longname": "src/Event.js~Event#schemaUtils",
    "access": null,
    "description": null,
    "lineNumber": 106,
    "type": {
      "nullable": null,
      "types": [
        "SchemaUtils"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 59,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "validatePayload",
    "memberof": "src/Event.js~Event",
    "longname": "src/Event.js~Event#validatePayload",
    "access": null,
    "description": "Validate a payload against a schema. If it fails then return a tuple\nwith a rejected Promise containing an error message.",
    "lineNumber": 117,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "payload",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "schema",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 60,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "validateId",
    "memberof": "src/Event.js~Event",
    "longname": "src/Event.js~Event#validateId",
    "access": null,
    "description": "If a specific function argument is missing then send back a tuple with a\nrejected Promise containing an error message.",
    "lineNumber": 140,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "value to check"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "name",
        "description": "name of argument being checked"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 61,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "list",
    "memberof": "src/Event.js~Event",
    "longname": "src/Event.js~Event#list",
    "access": null,
    "description": "List all Events",
    "lineNumber": 188,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "opts",
        "description": "options object"
      },
      {
        "nullable": null,
        "types": [
          "Array",
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "opts.hostGwid",
        "description": "The GWID String of the user who is hosting the event. Only events with the given\n  hostGwid will be returned. You may also pass multiple hostGwid's in an array\n  include multiple hosts in your request"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "opts.isDeleted",
        "description": "a Boolean of whether to only return Events that have been deleted. Defaults to\n  False. This option is currently only available to Admin users"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "opts.latitude",
        "description": "a numeric Float of a latitudinal geographic coordinate by which to filter results.\n  This parameter must be provided if performing a geographic filter"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "opts.longitude",
        "description": "a numeric Float of a longitudinal geographic coordinate by which to filter results.\n  This parameter must be provided if performing a geographic filter"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "opts.page",
        "description": "an Integer indicating which page of results should be returned"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "opts.perPage",
        "description": "an Integer indicating how many results should be returned per request"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "opts.radius",
        "description": "a numeric Float, given in kilometers, of the search radius by with to filter results.\n  This parameter must be provided if performing a geographic filter."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "opts.search",
        "description": "a String search field that will query Event titles."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "opts.startsBefore",
        "description": "an ISO-8601 formatted String given in local time without a timezone designator.\n  Only events occuring before the given timestamp will be returned."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "opts.startsAfter",
        "description": "an ISO-8601 formatted String given in local time without a timezone designator.\n  Only events occuring after the given timestamp will be returned."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 62,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "fetch",
    "memberof": "src/Event.js~Event",
    "longname": "src/Event.js~Event#fetch",
    "access": null,
    "description": "Get a specific Event, by id",
    "lineNumber": 203,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "eventId",
        "description": "id of event"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 63,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "create",
    "memberof": "src/Event.js~Event",
    "longname": "src/Event.js~Event#create",
    "access": null,
    "description": "Create an Event\n\nThe provided address will be geocoded to discover timezone information. If the\ngeocode fails, the request will fail and the Event will not be created.",
    "lineNumber": 220,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "event",
        "description": "event object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 64,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "update",
    "memberof": "src/Event.js~Event",
    "longname": "src/Event.js~Event#update",
    "access": null,
    "description": "Update an existing Event, by id\n\nOnly the fields that are passed will be updated.\n\nIf the address field is modified in full or in part, it will be re-geocoded to\nupdate timezone information. If the geocode fails, the request will fail and the\nEvent will not be modified.",
    "lineNumber": 241,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "eventId",
        "description": "id of event"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "event",
        "description": "fields to update"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 65,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "replace",
    "memberof": "src/Event.js~Event",
    "longname": "src/Event.js~Event#replace",
    "access": null,
    "description": "Replace an existing Event, by id\n\nAll fields are updated. If an optional field is not provided, it will be overwritten\nas blank unless otherwise noted.\n\nIf the address field is modified in full or in part, it will be re-geocoded to\nupdate timezone information. If the geocode fails, the request will fail and the\nEvent will not be modified.",
    "lineNumber": 263,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "eventId",
        "description": "id of event"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "event",
        "description": "fields to update"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 66,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "del",
    "memberof": "src/Event.js~Event",
    "longname": "src/Event.js~Event#del",
    "access": null,
    "description": "Delete a specific Event, by id\n\nIf there are Tickets associated with any Categories under that event, the request\nwill fail.",
    "lineNumber": 283,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "eventId",
        "description": "id of event"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 67,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "listAllTickets",
    "memberof": "src/Event.js~Event",
    "longname": "src/Event.js~Event#listAllTickets",
    "access": null,
    "description": "Get a list of all Tickets. When called by an authenticated user, it will return all\nTickets that have that user as that `purchaserGwid`. When called by an Admin, it\nwill return all tickets. Both responses are filterable with the optional query\nparamters.",
    "lineNumber": 316,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "opts",
        "description": "options object"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "opts.isRedeemed",
        "description": "a Boolean representing whether the ticket has been redeemed. Only tickets with\n  the given redemption status will be returned."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "opts.page",
        "description": "an Integer indicating which page of results should be returned"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "opts.perPage",
        "description": "an Integer indicating how many results should be returned per request"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "opts.purchaserGwid",
        "description": "is the GWID String of the user who purchased the tickets. Only tickets with the\n  given purchaser will be returned."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "opts.startsBefore",
        "description": "an ISO-8601 formatted String given in local time without a timezone designator.\n  Only tickets in categories occurring before the given timestamp will be returned"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "opts.startsAfter",
        "description": "an ISO-8601 formatted String given in local time without a timezone designator.\n  Only tickets in categories occurring after the given timestamp will be returned."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 68,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "unsubscribe",
    "memberof": "src/Event.js~Event",
    "longname": "src/Event.js~Event#unsubscribe",
    "access": null,
    "description": "Unsubscribe an email address from all communication from a specific Event host.",
    "lineNumber": 337,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "email",
        "description": "email address that wishes to unsubscribe"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "opts",
        "description": "unsubscribe options"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "opts.invitationId",
        "description": "UUID String unique identifier of the Invitation that triggered the\n  unsubscribe request"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "opts.messageId",
        "description": "UUID String unique identifier of the Message that triggered the\n  unsubscribe request"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 69,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/EventCategory.js",
    "memberof": null,
    "longname": "src/EventCategory.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { only, urlJoin } from './utils';\nimport { NAMESPACE, ENDPOINT_EVENT, ENDPOINT_CATEGORY } from './Event';\nimport eventCategorySchema from './schema/eventCategory';\n\n/**\n * An EventCategory is a sub-object of an Event. It describes a block of time within\n * an Event.\n *\n * @example\n * const gw = new Groundwork({...});\n *\n * // List all categories, while passing in an optional config\n * gw.events.listCategories({ page: 2, perPage: 10 })\n *   .then((response) => console.log(response))\n *   .catch((err) => console.error(err));\n *\n * gw.events.fetchCategory(<event id>, <category id>)\n *   .then((response) => console.log(response))\n *   .catch((err) => console.error(err));\n *\n * // Create a new category with required properties\n * const categoryProps = {\n *   description: 'Reserved for our most active supporters',\n *   quantityTotal: 10,\n *   timeEnd: '2016-09-26T15:00:00',\n *   timeStart: '2016-09-26T13:00:00',\n *   title: 'VIP'\n * };\n *\n * gw.events.createCategory(<event id>, categoryProps)\n *   .then((response) => console.log(response))\n *   .catch((err) => console.error(err));\n *\n * gw.events.updateCategory(<event id>, <category id>, { description: 'new description' })\n *   .then((response) => console.log(response))\n *   .catch((err) => console.error(err));\n *\n * gw.events.replaceCategory(<event id>, <category id>, {...})\n *   .then((response) => console.log(response))\n *   .catch((err) => console.error(err));\n *\n * gw.events.delCategory(<event id>, <category id>)\n *   .then((response) => console.log(response))\n *   .catch((err) => console.error(err));\n */\nexport default class EventCategory {\n  /**\n   * List all Categories on an Event\n   *\n   * @param {String} eventId - id of event\n   * @param {Object} [opts] - options object\n   * @param {Number} [opts.page] -\n   *   an Integer indicating which page of results should be returned\n   * @param {Number} [opts.perPage] -\n   *   an Integer indicating how many results should be returned per request\n   * @param {String} [opts.startsBefore] -\n   *   an ISO-8601 formatted String given in local time without a timezone designator.\n   *   Only events occuring before the given timestamp will be returned.\n   * @param {String} [opts.startsAfter] -\n   *   an ISO-8601 formatted String given in local time without a timezone designator.\n   *   Only events occuring after the given timestamp will be returned.\n   * @return {Promise}\n   */\n  listCategories(eventId, opts = {}) {\n    const [ev, ep] = this.validateId(eventId, 'eventId');\n    if (!ev) { return ep; }\n\n    const _opts = only(['page', 'perPage', 'startsBefore', 'startsAfter'], opts);\n    const url = urlJoin(NAMESPACE, ENDPOINT_EVENT, eventId,\n                                   ENDPOINT_CATEGORY);\n\n    return this.http.get(url, { params: _opts });\n  }\n\n  /**\n   * Get a specific Category, by id\n   *\n   * @param  {String} eventId - id of event\n   * @param  {String} categoryId - id of category\n   * @return {Promise}\n   */\n  fetchCategory(eventId, categoryId) {\n    const [ev, ep] = this.validateId(eventId, 'eventId');\n    if (!ev) { return ep; }\n\n    const [cv, cp] = this.validateId(categoryId, 'categoryId');\n    if (!cv) { return cp; }\n\n    const url = urlJoin(NAMESPACE, ENDPOINT_EVENT, eventId,\n                                   ENDPOINT_CATEGORY, categoryId);\n    return this.http.get(url);\n  }\n\n  /**\n   * Create a Category on an Event\n   *\n   * @param  {String} eventId - id of event\n   * @param  {Object} [category] - category object\n   * @return {Promise}\n   */\n  createCategory(eventId, category = {}) {\n    const [ev, ep] = this.validateId(eventId, 'eventId');\n    if (!ev) { return ep; }\n\n    const [categoryv, categoryp] = this.validatePayload(category, eventCategorySchema);\n    if (!categoryv) { return categoryp; }\n\n    const url = urlJoin(NAMESPACE, ENDPOINT_EVENT, eventId,\n                                   ENDPOINT_CATEGORY);\n\n    return this.http.post(url, category);\n  }\n\n  /**\n   * Update an existing Category, by id\n   *\n   * Only the fields that are passed will be updated.\n   *\n   * @param  {String} eventId - id of event\n   * @param  {String} categoryId - id of category\n   * @param  {Object} [category] - category object\n   * @return {Profile}\n   */\n  updateCategory(eventId, categoryId, category = {}) {\n    const [ev, ep] = this.validateId(eventId, 'eventId');\n    if (!ev) { return ep; }\n\n    const [cv, cp] = this.validateId(categoryId, 'categoryId');\n    if (!cv) { return cp; }\n\n    const url = urlJoin(NAMESPACE, ENDPOINT_EVENT, eventId,\n                                   ENDPOINT_CATEGORY, categoryId);\n\n    return this.http.patch(url, category);\n  }\n\n  /**\n   * Replace an existing Category, by id\n   *\n   * All fields are updated. If an optional field is not provided, it will be\n   * overwritted as blank.\n   *\n   * @param  {String} eventId - id of event\n   * @param  {String} categoryId - id of category\n   * @param  {Object} [category] - category object\n   * @return {Promise}\n   */\n  replaceCategory(eventId, categoryId, category = {}) {\n    const [ev, ep] = this.validateId(eventId, 'eventId');\n    if (!ev) { return ep; }\n\n    const [cv, cp] = this.validateId(categoryId, 'categoryId');\n    if (!cv) { return cp; }\n\n    const [categoryv, categoryp] = this.validatePayload(category, eventCategorySchema);\n    if (!categoryv) { return categoryp; }\n\n    const url = urlJoin(NAMESPACE, ENDPOINT_EVENT, eventId,\n                                   ENDPOINT_CATEGORY, categoryId);\n\n    return this.http.put(url, category);\n  }\n\n  /**\n   * Delete a specific Category, by id\n   *\n   * If there are Tickets associated with that Category, the request will fail.\n   *\n   * @param  {String} eventId - id of event\n   * @param  {String} categoryId - id of category\n   * @return {Promise}\n   */\n  delCategory(eventId, categoryId) {\n    const [ev, ep] = this.validateId(eventId, 'eventId');\n    if (!ev) { return ep; }\n\n    const [cv, cp] = this.validateId(categoryId, 'categoryId');\n    if (!cv) { return cp; }\n\n    const url = urlJoin(NAMESPACE, ENDPOINT_EVENT, eventId,\n                                   ENDPOINT_CATEGORY, categoryId);\n    return this.http.delete(url);\n  }\n}\n"
  },
  {
    "__docId__": 70,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "EventCategory",
    "memberof": "src/EventCategory.js",
    "longname": "src/EventCategory.js~EventCategory",
    "access": null,
    "export": true,
    "importPath": "groundwork.js/src/EventCategory.js",
    "importStyle": "EventCategory",
    "description": "An EventCategory is a sub-object of an Event. It describes a block of time within\nan Event.",
    "examples": [
      "const gw = new Groundwork({...});\n\n// List all categories, while passing in an optional config\ngw.events.listCategories({ page: 2, perPage: 10 })\n  .then((response) => console.log(response))\n  .catch((err) => console.error(err));\n\ngw.events.fetchCategory(<event id>, <category id>)\n  .then((response) => console.log(response))\n  .catch((err) => console.error(err));\n\n// Create a new category with required properties\nconst categoryProps = {\n  description: 'Reserved for our most active supporters',\n  quantityTotal: 10,\n  timeEnd: '2016-09-26T15:00:00',\n  timeStart: '2016-09-26T13:00:00',\n  title: 'VIP'\n};\n\ngw.events.createCategory(<event id>, categoryProps)\n  .then((response) => console.log(response))\n  .catch((err) => console.error(err));\n\ngw.events.updateCategory(<event id>, <category id>, { description: 'new description' })\n  .then((response) => console.log(response))\n  .catch((err) => console.error(err));\n\ngw.events.replaceCategory(<event id>, <category id>, {...})\n  .then((response) => console.log(response))\n  .catch((err) => console.error(err));\n\ngw.events.delCategory(<event id>, <category id>)\n  .then((response) => console.log(response))\n  .catch((err) => console.error(err));"
    ],
    "lineNumber": 46,
    "interface": false
  },
  {
    "__docId__": 71,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "listCategories",
    "memberof": "src/EventCategory.js~EventCategory",
    "longname": "src/EventCategory.js~EventCategory#listCategories",
    "access": null,
    "description": "List all Categories on an Event",
    "lineNumber": 64,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "eventId",
        "description": "id of event"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "opts",
        "description": "options object"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "opts.page",
        "description": "an Integer indicating which page of results should be returned"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "opts.perPage",
        "description": "an Integer indicating how many results should be returned per request"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "opts.startsBefore",
        "description": "an ISO-8601 formatted String given in local time without a timezone designator.\n  Only events occuring before the given timestamp will be returned."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "opts.startsAfter",
        "description": "an ISO-8601 formatted String given in local time without a timezone designator.\n  Only events occuring after the given timestamp will be returned."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 72,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "fetchCategory",
    "memberof": "src/EventCategory.js~EventCategory",
    "longname": "src/EventCategory.js~EventCategory#fetchCategory",
    "access": null,
    "description": "Get a specific Category, by id",
    "lineNumber": 82,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "eventId",
        "description": "id of event"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "categoryId",
        "description": "id of category"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 73,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "createCategory",
    "memberof": "src/EventCategory.js~EventCategory",
    "longname": "src/EventCategory.js~EventCategory#createCategory",
    "access": null,
    "description": "Create a Category on an Event",
    "lineNumber": 101,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "eventId",
        "description": "id of event"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "category",
        "description": "category object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 74,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "updateCategory",
    "memberof": "src/EventCategory.js~EventCategory",
    "longname": "src/EventCategory.js~EventCategory#updateCategory",
    "access": null,
    "description": "Update an existing Category, by id\n\nOnly the fields that are passed will be updated.",
    "lineNumber": 124,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "eventId",
        "description": "id of event"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "categoryId",
        "description": "id of category"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "category",
        "description": "category object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Profile"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 75,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "replaceCategory",
    "memberof": "src/EventCategory.js~EventCategory",
    "longname": "src/EventCategory.js~EventCategory#replaceCategory",
    "access": null,
    "description": "Replace an existing Category, by id\n\nAll fields are updated. If an optional field is not provided, it will be\noverwritted as blank.",
    "lineNumber": 148,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "eventId",
        "description": "id of event"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "categoryId",
        "description": "id of category"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "category",
        "description": "category object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 76,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "delCategory",
    "memberof": "src/EventCategory.js~EventCategory",
    "longname": "src/EventCategory.js~EventCategory#delCategory",
    "access": null,
    "description": "Delete a specific Category, by id\n\nIf there are Tickets associated with that Category, the request will fail.",
    "lineNumber": 173,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "eventId",
        "description": "id of event"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "categoryId",
        "description": "id of category"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 77,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/EventInvitation.js",
    "memberof": null,
    "longname": "src/EventInvitation.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { only, urlJoin } from './utils';\nimport { NAMESPACE, ENDPOINT_EVENT, ENDPOINT_INVITATION } from './Event';\nimport eventInvitationSchema from './schema/eventInvitation';\n\n/** @type {Array} - Status options for Invitation RSVP's */\nconst STATUSES = ['declined', 'pending'];\n\n/**\n * An EventInvitation is an email correspondence used to inform people of an event.\n *\n * @example\n * const gw = new Groundwork({...});\n *\n * // List all invitations, while passing in an optional config\n * gw.events.listInvitations({ status: 'pending', page: 2, perPage: 10 })\n *   .then((response) => console.log(response))\n *   .catch((err) => console.error(err));\n *\n * gw.events.fetchInvitation(<event id>, <invitation id>)\n *   .then((response) => console.log(response))\n *   .catch((err) => console.error(err));\n *\n * gw.events.createInvitation(<event id>, {...})\n *   .then((response) => console.log(response))\n *   .catch((err) => console.error(err));\n *\n * //\n * gw.events.updateInvitationStatus(<event id>, <invitation id>, <status>)\n *   .then((response) => console.log(response))\n *   .catch((err) => console.error(err));\n *\n * gw.events.delInvitation(<event id>, <invitation id>)\n *   .then((response) => console.log(response))\n *   .catch((err) => console.error(err));\n */\nexport default class EventInvitation {\n\n  /**\n   * If the status of an invitation is neither `declined` nor `pending` then send back a\n   * tuple with a rejected Promise containing an error message.\n   *\n   * @param {String} status - status of the invitation\n   * @return {Array}\n   */\n  validateStatus(status) {\n    let out = [true];\n\n    const valid = STATUSES.some(s => s === status);\n\n    if (!valid) {\n      const response = this.http.generateErrorResponse({\n        valid: false,\n        fields: ['status'],\n        msg: [`Invalid status: ${status}. Options are \\`declined\\` or \\`pending\\``]\n      });\n      out = [false, Promise.reject(response)];\n    }\n\n    return out;\n  }\n\n  /**\n   * List all invitations on an Event\n   *\n   * @param  {String} eventId - id of event\n   * @param  {Object} [opts] - options object\n   * @param {Number} [opts.page] -\n   *   an Integer indicating which page of results should be returned\n   * @param {Number} [opts.perPage] -\n   *   an Integer indicating how many results should be returned per request\n   * @param  {String} [opts.status] -\n   *   the status by which you wish to filter. It may be accepted, declined, or pending\n   * @return {Promise}\n   */\n  listInvitations(eventId, opts = {}) {\n    const [ev, ep] = this.validateId(eventId, 'eventId');\n    if (!ev) { return ep; }\n\n    const _opts = only(['page', 'perPage', 'status'], opts);\n    const url = urlJoin(NAMESPACE, ENDPOINT_EVENT, eventId,\n                                   ENDPOINT_INVITATION);\n\n    return this.http.get(url, { params: _opts });\n  }\n\n  /**\n   * Get a specific Invitation, by id\n   *\n   * @param  {String} eventId - id of event\n   * @param  {String} invitationId - id of invitation\n   * @return {Promise}\n   */\n  fetchInvitation(eventId, invitationId) {\n    const [ev, ep] = this.validateId(eventId, 'eventId');\n    if (!ev) { return ep; }\n\n    const [iv, ip] = this.validateId(invitationId, 'invitationId');\n    if (!iv) { return ip; }\n\n    const url = urlJoin(NAMESPACE, ENDPOINT_EVENT, eventId,\n                                   ENDPOINT_INVITATION, invitationId);\n    return this.http.get(url);\n  }\n\n  /**\n   * Create a new Invitation\n   *\n   * @param  {String} eventId - id of event\n   * @param  {Object[]} [invitations] - array of invitation objects\n   * @return {Promise}\n   */\n  createInvitation(eventId, invitations = []) {\n    const [ev, ep] = this.validateId(eventId, 'eventId');\n    if (!ev) { return ep; }\n\n    const [iv, ip] = this.validatePayload(invitations, eventInvitationSchema);\n    if (!iv) { return ip; }\n\n    const url = urlJoin(NAMESPACE, ENDPOINT_EVENT, eventId,\n                                   ENDPOINT_INVITATION);\n\n    return this.http.post(url, invitations);\n  }\n\n  /**\n   * Update the status of an Invitation, by id\n   *\n   * @param  {String} eventId - id of event\n   * @param  {String} invitationId - id of invitation\n   * @param  {String} status -\n   *   current RSVP status of the invitation. It may be `declined`, or `pending`\n   * @return {Promise}\n   */\n  updateInvitationStatus(eventId, invitationId, status) {\n    const [ev, ep] = this.validateId(eventId, 'eventId');\n    if (!ev) { return ep; }\n\n    const [iv, ip] = this.validateId(invitationId, 'invitationId');\n    if (!iv) { return ip; }\n\n    const [sv, sp] = this.validateStatus(status);\n    if (!sv) { return sp; }\n\n    const url = urlJoin(NAMESPACE, ENDPOINT_EVENT, eventId,\n                                   ENDPOINT_INVITATION, invitationId);\n\n    return this.http.patch(url, { status });\n  }\n\n  /**\n   * Delete a specific Invitation, by id\n   *\n   * @param  {String} eventId - id of event\n   * @param  {String} invitationId - id of invitation\n   * @return {Promise}\n   */\n  delInvitation(eventId, invitationId) {\n    const [ev, ep] = this.validateId(eventId, 'eventId');\n    if (!ev) { return ep; }\n\n    const [iv, ip] = this.validateId(invitationId, 'invitationId');\n    if (!iv) { return ip; }\n\n    const url = urlJoin(NAMESPACE, ENDPOINT_EVENT, eventId,\n                                   ENDPOINT_INVITATION, invitationId);\n    return this.http.delete(url);\n  }\n\n}\n"
  },
  {
    "__docId__": 78,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "STATUSES",
    "memberof": "src/EventInvitation.js",
    "longname": "src/EventInvitation.js~STATUSES",
    "access": null,
    "export": false,
    "importPath": "groundwork.js/src/EventInvitation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "type": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 79,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "EventInvitation",
    "memberof": "src/EventInvitation.js",
    "longname": "src/EventInvitation.js~EventInvitation",
    "access": null,
    "export": true,
    "importPath": "groundwork.js/src/EventInvitation.js",
    "importStyle": "EventInvitation",
    "description": "An EventInvitation is an email correspondence used to inform people of an event.",
    "examples": [
      "const gw = new Groundwork({...});\n\n// List all invitations, while passing in an optional config\ngw.events.listInvitations({ status: 'pending', page: 2, perPage: 10 })\n  .then((response) => console.log(response))\n  .catch((err) => console.error(err));\n\ngw.events.fetchInvitation(<event id>, <invitation id>)\n  .then((response) => console.log(response))\n  .catch((err) => console.error(err));\n\ngw.events.createInvitation(<event id>, {...})\n  .then((response) => console.log(response))\n  .catch((err) => console.error(err));\n\n//\ngw.events.updateInvitationStatus(<event id>, <invitation id>, <status>)\n  .then((response) => console.log(response))\n  .catch((err) => console.error(err));\n\ngw.events.delInvitation(<event id>, <invitation id>)\n  .then((response) => console.log(response))\n  .catch((err) => console.error(err));"
    ],
    "lineNumber": 36,
    "interface": false
  },
  {
    "__docId__": 80,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "validateStatus",
    "memberof": "src/EventInvitation.js~EventInvitation",
    "longname": "src/EventInvitation.js~EventInvitation#validateStatus",
    "access": null,
    "description": "If the status of an invitation is neither `declined` nor `pending` then send back a\ntuple with a rejected Promise containing an error message.",
    "lineNumber": 45,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "status",
        "description": "status of the invitation"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 81,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "listInvitations",
    "memberof": "src/EventInvitation.js~EventInvitation",
    "longname": "src/EventInvitation.js~EventInvitation#listInvitations",
    "access": null,
    "description": "List all invitations on an Event",
    "lineNumber": 75,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "eventId",
        "description": "id of event"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "opts",
        "description": "options object"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "opts.page",
        "description": "an Integer indicating which page of results should be returned"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "opts.perPage",
        "description": "an Integer indicating how many results should be returned per request"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "opts.status",
        "description": "the status by which you wish to filter. It may be accepted, declined, or pending"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 82,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "fetchInvitation",
    "memberof": "src/EventInvitation.js~EventInvitation",
    "longname": "src/EventInvitation.js~EventInvitation#fetchInvitation",
    "access": null,
    "description": "Get a specific Invitation, by id",
    "lineNumber": 93,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "eventId",
        "description": "id of event"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "invitationId",
        "description": "id of invitation"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 83,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "createInvitation",
    "memberof": "src/EventInvitation.js~EventInvitation",
    "longname": "src/EventInvitation.js~EventInvitation#createInvitation",
    "access": null,
    "description": "Create a new Invitation",
    "lineNumber": 112,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "eventId",
        "description": "id of event"
      },
      {
        "nullable": null,
        "types": [
          "Object[]"
        ],
        "spread": false,
        "optional": true,
        "name": "invitations",
        "description": "array of invitation objects"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 84,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "updateInvitationStatus",
    "memberof": "src/EventInvitation.js~EventInvitation",
    "longname": "src/EventInvitation.js~EventInvitation#updateInvitationStatus",
    "access": null,
    "description": "Update the status of an Invitation, by id",
    "lineNumber": 134,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "eventId",
        "description": "id of event"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "invitationId",
        "description": "id of invitation"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "status",
        "description": "current RSVP status of the invitation. It may be `declined`, or `pending`"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 85,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "delInvitation",
    "memberof": "src/EventInvitation.js~EventInvitation",
    "longname": "src/EventInvitation.js~EventInvitation#delInvitation",
    "access": null,
    "description": "Delete a specific Invitation, by id",
    "lineNumber": 157,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "eventId",
        "description": "id of event"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "invitationId",
        "description": "id of invitation"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 86,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/EventMessage.js",
    "memberof": null,
    "longname": "src/EventMessage.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { only, urlJoin } from './utils';\nimport { NAMESPACE, ENDPOINT_EVENT, ENDPOINT_MESSAGE } from './Event';\nimport eventMessageSchema from './schema/eventMessage';\n\n/**\n * Send a Message to a subset of people associated with an eventId.\n *\n * @example\n * const gw = new Groundwork({...});\n *\n * // List all messages, while passing in an optional config\n * gw.events.listMessages({ page: 2, perPage: 10 })\n *   .then((response) => console.log(response))\n *   .catch((err) => console.error(err));\n *\n * gw.events.fetchMessage(<event id>, <message id>)\n *   .then((response) => console.log(response))\n *   .catch((err) => console.error(err));\n *\n * // Create a new message with required properties\n * const messageProps = {\n *   message: 'Excited to see you at my event!',\n *   recipientTypes: [\n *   \t 'attendees_redeemed',\n *   \t 'attendees_not_redeemed',\n *   \t 'invitees_pending',\n *   \t 'invitees_declined'\n *   ],\n *   subject: 'Cant wait to see you!',\n *   template: 'my_template',\n *   title: '1 more day!'\n * };\n *\n * gw.events.createMessage(<event id>, messageProps)\n *   .then((response) => console.log(response))\n *   .catch((err) => console.error(err));\n *\n * gw.events.delMessage(<event id>, <message id>)\n *   .then((response) => console.log(response))\n *   .catch((err) => console.error(err));\n */\nexport default class EventMessage {\n\n  /**\n   * List all Messages on an Event\n   *\n   * @param {String} eventId - id of event\n   * @param {Object} [opts] - options object\n   * @param {Number} [opts.page] -\n   *   an Integer indicating which page of results should be returned\n   * @param {Number} [opts.perPage] -\n   *   an Integer indicating how many results should be returned per request\n   * @return {Promise}\n   */\n  listMessages(eventId, opts = {}) {\n    const [ev, ep] = this.validateId(eventId, 'eventId');\n    if (!ev) { return ep; }\n\n    const _opts = only(['page', 'perPage'], opts);\n    const url = urlJoin(NAMESPACE, ENDPOINT_EVENT, eventId,\n                                   ENDPOINT_MESSAGE);\n\n    return this.http.get(url, { params: _opts });\n  }\n\n  /**\n   * Get a specific Message, by id\n   *\n   * @param  {String} eventId - id of event\n   * @param  {String} messageId - id of message\n   * @return {Promise}\n   */\n  fetchMessage(eventId, messageId) {\n    const [ev, ep] = this.validateId(eventId, 'eventId');\n    if (!ev) { return ep; }\n\n    const [mv, mp] = this.validateId(messageId, 'messageId');\n    if (!mv) { return mp; }\n\n    const url = urlJoin(NAMESPACE, ENDPOINT_EVENT, eventId,\n                                   ENDPOINT_MESSAGE, messageId);\n    return this.http.get(url);\n  }\n\n  /**\n   * Create a Message on an Event\n   *\n   * @param  {String} eventId - id of event\n   * @param  {Object} [message] - message object\n   * @return {Promise}\n   */\n  createMessage(eventId, message = {}) {\n    const [ev, ep] = this.validateId(eventId, 'eventId');\n    if (!ev) { return ep; }\n\n    const [mv, mp] = this.validatePayload(message, eventMessageSchema);\n    if (!mv) { return mp; }\n\n    const url = urlJoin(NAMESPACE, ENDPOINT_EVENT, eventId,\n                                   ENDPOINT_MESSAGE);\n\n    return this.http.post(url, message);\n  }\n\n  /**\n   * Delete a specific Message, by id\n   *\n   * @param  {String} eventId - id of event\n   * @param  {String} messageId - id of message\n   * @return {Promise}\n   */\n  delMessage(eventId, messageId) {\n    const [ev, ep] = this.validateId(eventId, 'eventId');\n    if (!ev) { return ep; }\n\n    const [mv, mp] = this.validateId(messageId, 'messageId');\n    if (!mv) { return mp; }\n\n    const url = urlJoin(NAMESPACE, ENDPOINT_EVENT, eventId,\n                                   ENDPOINT_MESSAGE, messageId);\n    return this.http.delete(url);\n  }\n\n}\n"
  },
  {
    "__docId__": 87,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "EventMessage",
    "memberof": "src/EventMessage.js",
    "longname": "src/EventMessage.js~EventMessage",
    "access": null,
    "export": true,
    "importPath": "groundwork.js/src/EventMessage.js",
    "importStyle": "EventMessage",
    "description": "Send a Message to a subset of people associated with an eventId.",
    "examples": [
      "const gw = new Groundwork({...});\n\n// List all messages, while passing in an optional config\ngw.events.listMessages({ page: 2, perPage: 10 })\n  .then((response) => console.log(response))\n  .catch((err) => console.error(err));\n\ngw.events.fetchMessage(<event id>, <message id>)\n  .then((response) => console.log(response))\n  .catch((err) => console.error(err));\n\n// Create a new message with required properties\nconst messageProps = {\n  message: 'Excited to see you at my event!',\n  recipientTypes: [\n  \t 'attendees_redeemed',\n  \t 'attendees_not_redeemed',\n  \t 'invitees_pending',\n  \t 'invitees_declined'\n  ],\n  subject: 'Cant wait to see you!',\n  template: 'my_template',\n  title: '1 more day!'\n};\n\ngw.events.createMessage(<event id>, messageProps)\n  .then((response) => console.log(response))\n  .catch((err) => console.error(err));\n\ngw.events.delMessage(<event id>, <message id>)\n  .then((response) => console.log(response))\n  .catch((err) => console.error(err));"
    ],
    "lineNumber": 42,
    "interface": false
  },
  {
    "__docId__": 88,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "listMessages",
    "memberof": "src/EventMessage.js~EventMessage",
    "longname": "src/EventMessage.js~EventMessage#listMessages",
    "access": null,
    "description": "List all Messages on an Event",
    "lineNumber": 55,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "eventId",
        "description": "id of event"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "opts",
        "description": "options object"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "opts.page",
        "description": "an Integer indicating which page of results should be returned"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "opts.perPage",
        "description": "an Integer indicating how many results should be returned per request"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 89,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "fetchMessage",
    "memberof": "src/EventMessage.js~EventMessage",
    "longname": "src/EventMessage.js~EventMessage#fetchMessage",
    "access": null,
    "description": "Get a specific Message, by id",
    "lineNumber": 73,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "eventId",
        "description": "id of event"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "messageId",
        "description": "id of message"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 90,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "createMessage",
    "memberof": "src/EventMessage.js~EventMessage",
    "longname": "src/EventMessage.js~EventMessage#createMessage",
    "access": null,
    "description": "Create a Message on an Event",
    "lineNumber": 92,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "eventId",
        "description": "id of event"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "message",
        "description": "message object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 91,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "delMessage",
    "memberof": "src/EventMessage.js~EventMessage",
    "longname": "src/EventMessage.js~EventMessage#delMessage",
    "access": null,
    "description": "Delete a specific Message, by id",
    "lineNumber": 112,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "eventId",
        "description": "id of event"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "messageId",
        "description": "id of message"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 92,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/EventTicket.js",
    "memberof": null,
    "longname": "src/EventTicket.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { only, urlJoin } from './utils';\nimport { NAMESPACE, ENDPOINT_EVENT, ENDPOINT_CATEGORY, ENDPOINT_TICKET } from './Event';\nimport eventTicketSchema from './schema/eventTicket';\n\n/**\n * An EventTicket represents participation in an EventCategory.\n *\n * @example\n * const gw = new Groundwork({...});\n *\n * // List all tickets, while passing in an optional config\n * gw.events.listTickets({ page: 2, perPage: 10 })\n *   .then((response) => console.log(response))\n *   .catch((err) => console.error(err));\n *\n * gw.events.fetchTicket(<event id>, <category id>, <ticket id>)\n *   .then((response) => console.log(response))\n *   .catch((err) => console.error(err));\n *\n * gw.events.createTicket(<event id>, <category id>)\n *   .then((response) => console.log(response))\n *   .catch((err) => console.error(err));\n *\n * gw.events.updateTicket(<event id>, <category id>, <ticket id>, {...})\n *   .then((response) => console.log(response))\n *   .catch((err) => console.error(err));\n *\n * gw.events.replaceTicket(<event id>, <category id>, <ticket id>, {...})\n *   .then((response) => console.log(response))\n *   .catch((err) => console.error(err));\n *\n * gw.events.deleteTicket(<event id>, <category id>, <ticket id>)\n *   .then((response) => console.log(response))\n *   .catch((err) => console.error(err));\n */\nexport default class EventTicket {\n  /**\n   * List all Tickets on a Category\n   *\n   * @param {String} eventId - id of event\n   * @param {String} categoryId - id of category\n   * @param {Object} [opts] - options object\n   * @param {Boolean} [opts.isRedeemed] -\n   *   a Boolean representing whether the ticket has been redeemed. Only tickets with\n   *   the given redemption status will be returned.\n   * @param {Number} [opts.page] -\n   *   an Integer indicating which page of results should be returned\n   * @param {Number} [opts.perPage] -\n   *   an Integer indicating how many results should be returned per request\n   * @param {String} [opts.purchaserGwid] -\n   *   is the GWID String of the user who purchased the tickets. Only tickets with the\n   *   given purchaser will be returned.\n   * @return {Promise}\n   */\n  listTickets(eventId, categoryId, opts = {}) {\n    const [ev, ep] = this.validateId(eventId, 'eventId');\n    if (!ev) { return ep; }\n\n    const [cv, cp] = this.validateId(categoryId, 'categoryId');\n    if (!cv) { return cp; }\n\n    const _opts = only(['isRedeemed', 'page', 'perPage', 'purchaserGwid'], opts);\n\n    const url = urlJoin(NAMESPACE, ENDPOINT_EVENT, eventId,\n                                   ENDPOINT_CATEGORY, categoryId,\n                                   ENDPOINT_TICKET);\n\n    return this.http.get(url, { params: _opts });\n  }\n\n  /**\n   * Get a specific Ticket, by id\n   *\n   * @param  {String} eventId - id of event\n   * @param  {String} categoryId - id of category\n   * @param  {String} ticketId - id of ticket\n   * @return {[type]}\n   */\n  fetchTicket(eventId, categoryId, ticketId) {\n    const [ev, ep] = this.validateId(eventId, 'eventId');\n    if (!ev) { return ep; }\n\n    const [cv, cp] = this.validateId(categoryId, 'categoryId');\n    if (!cv) { return cp; }\n\n    const [tv, tp] = this.validateId(ticketId, 'ticketId');\n    if (!tv) { return tp; }\n\n    const url = urlJoin(NAMESPACE, ENDPOINT_EVENT, eventId,\n                                   ENDPOINT_CATEGORY, categoryId,\n                                   ENDPOINT_TICKET, ticketId);\n    return this.http.get(url);\n  }\n\n  /**\n   * Create a Ticket\n   *\n   * @param  {String} eventId - id of event\n   * @param  {String} categoryId - id of category\n   * @param  {Object} [ticket] - ticket object\n   * @return {Promise}\n   */\n  createTicket(eventId, categoryId, ticket = {}) {\n    const [ev, ep] = this.validateId(eventId, 'eventId');\n    if (!ev) { return ep; }\n\n    const [cv, cp] = this.validateId(categoryId, 'categoryId');\n    if (!cv) { return cp; }\n\n    const [ticketv, ticketp] = this.validatePayload(ticket, eventTicketSchema);\n    if (!ticketv) { return ticketp; }\n\n    const url = urlJoin(NAMESPACE, ENDPOINT_EVENT, eventId,\n                                   ENDPOINT_CATEGORY, categoryId,\n                                   ENDPOINT_TICKET);\n\n    return this.http.post(url, ticket);\n  }\n\n  /**\n   * Update an existing Ticket, by id\n   *\n   * Only the fields that are passed will be updated.\n   *\n   * @param  {String} eventId - id of event\n   * @param  {String} categoryId - id of category\n   * @param  {String} ticketId - id of ticket\n   * @param  {Object} [ticket] - ticket object\n   * @return {Promise}\n   */\n  updateTicket(eventId, categoryId, ticketId, ticket = {}) {\n    const [ev, ep] = this.validateId(eventId, 'eventId');\n    if (!ev) { return ep; }\n\n    const [cv, cp] = this.validateId(categoryId, 'categoryId');\n    if (!cv) { return cp; }\n\n    const [tv, tp] = this.validateId(ticketId, 'ticketId');\n    if (!tv) { return tp; }\n\n    const [ticketv, ticketp] = this.validatePayload(ticket, eventTicketSchema);\n    if (!ticketv) { return ticketp; }\n\n    const url = urlJoin(NAMESPACE, ENDPOINT_EVENT, eventId,\n                                   ENDPOINT_CATEGORY, categoryId,\n                                   ENDPOINT_TICKET, ticketId);\n\n    return this.http.patch(url, ticket);\n  }\n\n  /**\n   * Replace an existing Ticket, by id\n   *\n   * All fields are updated. If an optional field is not provided, it will be\n   * overwritten as blank.\n   *\n   * @param  {String} eventId - id of event\n   * @param  {String} categoryId - id of category\n   * @param  {String} ticketId - id of ticket\n   * @param  {Object} [ticket] - ticket object\n   * @return {Promise}\n   */\n  replaceTicket(eventId, categoryId, ticketId, ticket = {}) {\n    const [ev, ep] = this.validateId(eventId, 'eventId');\n    if (!ev) { return ep; }\n\n    const [cv, cp] = this.validateId(categoryId, 'categoryId');\n    if (!cv) { return cp; }\n\n    const [tv, tp] = this.validateId(ticketId, 'ticketId');\n    if (!tv) { return tp; }\n\n    const [ticketv, ticketp] = this.validatePayload(ticket, eventTicketSchema);\n    if (!ticketv) { return ticketp; }\n\n    const url = urlJoin(NAMESPACE, ENDPOINT_EVENT, eventId,\n                                   ENDPOINT_CATEGORY, categoryId,\n                                   ENDPOINT_TICKET, ticketId);\n\n    return this.http.put(url, ticket);\n  }\n\n  /**\n   * Delete a specific Ticket, by id\n   *\n   * @param  {String} eventId - id of event\n   * @param  {String} categoryId - id of category\n   * @param  {String} ticketId - id of ticket\n   * @return {Promise}\n   */\n  delTicket(eventId, categoryId, ticketId) {\n    const [ev, ep] = this.validateId(eventId, 'eventId');\n    if (!ev) { return ep; }\n\n    const [cv, cp] = this.validateId(categoryId, 'categoryId');\n    if (!cv) { return cp; }\n\n    const [tv, tp] = this.validateId(ticketId, 'ticketId');\n    if (!tv) { return tp; }\n\n    const url = urlJoin(NAMESPACE, ENDPOINT_EVENT, eventId,\n                                   ENDPOINT_CATEGORY, categoryId,\n                                   ENDPOINT_TICKET, ticketId);\n    return this.http.delete(url);\n  }\n}\n"
  },
  {
    "__docId__": 93,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "EventTicket",
    "memberof": "src/EventTicket.js",
    "longname": "src/EventTicket.js~EventTicket",
    "access": null,
    "export": true,
    "importPath": "groundwork.js/src/EventTicket.js",
    "importStyle": "EventTicket",
    "description": "An EventTicket represents participation in an EventCategory.",
    "examples": [
      "const gw = new Groundwork({...});\n\n// List all tickets, while passing in an optional config\ngw.events.listTickets({ page: 2, perPage: 10 })\n  .then((response) => console.log(response))\n  .catch((err) => console.error(err));\n\ngw.events.fetchTicket(<event id>, <category id>, <ticket id>)\n  .then((response) => console.log(response))\n  .catch((err) => console.error(err));\n\ngw.events.createTicket(<event id>, <category id>)\n  .then((response) => console.log(response))\n  .catch((err) => console.error(err));\n\ngw.events.updateTicket(<event id>, <category id>, <ticket id>, {...})\n  .then((response) => console.log(response))\n  .catch((err) => console.error(err));\n\ngw.events.replaceTicket(<event id>, <category id>, <ticket id>, {...})\n  .then((response) => console.log(response))\n  .catch((err) => console.error(err));\n\ngw.events.deleteTicket(<event id>, <category id>, <ticket id>)\n  .then((response) => console.log(response))\n  .catch((err) => console.error(err));"
    ],
    "lineNumber": 36,
    "interface": false
  },
  {
    "__docId__": 94,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "listTickets",
    "memberof": "src/EventTicket.js~EventTicket",
    "longname": "src/EventTicket.js~EventTicket#listTickets",
    "access": null,
    "description": "List all Tickets on a Category",
    "lineNumber": 55,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "eventId",
        "description": "id of event"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "categoryId",
        "description": "id of category"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "opts",
        "description": "options object"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "opts.isRedeemed",
        "description": "a Boolean representing whether the ticket has been redeemed. Only tickets with\n  the given redemption status will be returned."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "opts.page",
        "description": "an Integer indicating which page of results should be returned"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "opts.perPage",
        "description": "an Integer indicating how many results should be returned per request"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "opts.purchaserGwid",
        "description": "is the GWID String of the user who purchased the tickets. Only tickets with the\n  given purchaser will be returned."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 95,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "fetchTicket",
    "memberof": "src/EventTicket.js~EventTicket",
    "longname": "src/EventTicket.js~EventTicket#fetchTicket",
    "access": null,
    "description": "Get a specific Ticket, by id",
    "lineNumber": 79,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "eventId",
        "description": "id of event"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "categoryId",
        "description": "id of category"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "ticketId",
        "description": "id of ticket"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 96,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "createTicket",
    "memberof": "src/EventTicket.js~EventTicket",
    "longname": "src/EventTicket.js~EventTicket#createTicket",
    "access": null,
    "description": "Create a Ticket",
    "lineNumber": 103,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "eventId",
        "description": "id of event"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "categoryId",
        "description": "id of category"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "ticket",
        "description": "ticket object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 97,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "updateTicket",
    "memberof": "src/EventTicket.js~EventTicket",
    "longname": "src/EventTicket.js~EventTicket#updateTicket",
    "access": null,
    "description": "Update an existing Ticket, by id\n\nOnly the fields that are passed will be updated.",
    "lineNumber": 131,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "eventId",
        "description": "id of event"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "categoryId",
        "description": "id of category"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "ticketId",
        "description": "id of ticket"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "ticket",
        "description": "ticket object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 98,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "replaceTicket",
    "memberof": "src/EventTicket.js~EventTicket",
    "longname": "src/EventTicket.js~EventTicket#replaceTicket",
    "access": null,
    "description": "Replace an existing Ticket, by id\n\nAll fields are updated. If an optional field is not provided, it will be\noverwritten as blank.",
    "lineNumber": 163,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "eventId",
        "description": "id of event"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "categoryId",
        "description": "id of category"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "ticketId",
        "description": "id of ticket"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "ticket",
        "description": "ticket object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 99,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "delTicket",
    "memberof": "src/EventTicket.js~EventTicket",
    "longname": "src/EventTicket.js~EventTicket#delTicket",
    "access": null,
    "description": "Delete a specific Ticket, by id",
    "lineNumber": 191,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "eventId",
        "description": "id of event"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "categoryId",
        "description": "id of category"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "ticketId",
        "description": "id of ticket"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 100,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/Groundwork.js",
    "memberof": null,
    "longname": "src/Groundwork.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/*global __LOG__, TAG*/\n/*eslint-disable no-param-reassign*/\n\nimport * as constants from './constants';\nimport Auth from './Auth';\nimport Dictionary from './Dictionary';\nimport Donation from './Donation';\nimport Event from './Event';\nimport Http from './Http';\nimport Profile from './Profile';\nimport Quickcard from './Quickcard';\nimport Subscription from './Subscription';\nimport Supporter from './Supporter';\nimport { deprecate, isApiVersion } from './utils';\n\n/**\n * Map of resource modules to attach to Groundwork instances\n */\nconst RESOURCES = {\n  auth: Auth,\n  donations: Donation,\n  events: Event,\n  profiles: Profile,\n  quickcards: Quickcard,\n  subscriptions: Subscription,\n  supporters: Supporter\n};\n\n/**\n * Default configuration for client\n */\nconst DEFAULTS = {\n  [constants.API_URL]: constants.DEFAULT_API_URL,\n  [constants.OAUTH_CLIENT_ID]: '',\n  [constants.FACEBOOK_APP_ID]: '',\n  [constants.CONFIG_AUTH]: {}\n};\n\n/**\n * Groundwork Client Library\n *\n * @desc\n * For backwards compatability apiKey is aliased to oauth_client_id within the\n * config dictionary. The clientId getter/setters remain next to the same\n * getters/setters for apiKey. This allows code written for older versions of\n * groundwork.js to continue to use oauth_client_id to configure an instance while\n * new code is encouraged to use apiKey.\n *\n * @example\n * let gw = new Groundwork({'apiKey': '1234'});\n */\nexport default class Groundwork {\n  /**\n   * Constructor\n   * @param {Object} config - client configuration\n   */\n  constructor(config = {}) {\n    // display a deprecation warning for oauth_client_id in DEV only\n    deprecate(config.oauth_client_id,\n              'oauth_client_id is deprecated, please use apiKey instead');\n\n    // display a deprecation warning for api_url in DEV only\n    deprecate(config.api_url,\n              'api_url is deprecated, please use apiUrl instead');\n\n    // alias apiKey to OAUTH_CLIENT_ID\n    if (config.apiKey) {\n      config[constants.OAUTH_CLIENT_ID] = config.apiKey;\n      delete config.apiKey;\n    }\n\n    // alias apiUrl to API_URL\n    if (config.apiUrl) {\n      config[constants.API_URL] = config.apiUrl;\n      delete config.apiUrl;\n    }\n\n    /** @type {Dictionary} */\n    this.config = new Dictionary(DEFAULTS);\n    this.config.merge(config);\n\n    /** @type {Http} */\n    this.http = new Http(this.config);\n\n    // Attach resource modules and pass in config\n    for (const resource in RESOURCES) {\n      if (RESOURCES.hasOwnProperty(resource)) {\n        this[resource] = new RESOURCES[resource](this.config, this.http);\n      }\n    }\n  }\n\n  /**\n   * Getters / Setters\n   */\n\n  /**\n   * Get the version # of this build as deteremined by Webpack\n   * @return {String}\n   */\n  get version() {\n    return TAG;\n  }\n\n  /**\n   * Get OAUTH_CLIENT_ID\n   * @deprecated use apiKey instead\n   * @return {*}\n   */\n  get clientId() {\n    deprecate(true, 'clientId is deprecated, please use apiKey instead');\n    return this.config.get(constants.OAUTH_CLIENT_ID);\n  }\n\n  /**\n   * Mutate OAUTH_CLIENT_ID within an instance of Groundwork\n   * @deprecated use apiKey instead\n   * @type {String}\n   */\n  set clientId(id) {\n    deprecate(true, 'clientId is deprecated, please use apiKey instead');\n    this.config.set(constants.OAUTH_CLIENT_ID, id);\n  }\n\n  /**\n   * Get apiKey, alias for OAUTH_CLIENT_ID\n   * @return {*}\n   */\n  get apiKey() {\n    return this.config.get(constants.OAUTH_CLIENT_ID);\n  }\n\n  /**\n   * Mutate apiKey within an instance of Groundwork\n   * Alias for OAUTH_CLIENT_ID\n   * @type {String}\n   */\n  set apiKey(id) {\n    this.config.set(constants.OAUTH_CLIENT_ID, id);\n  }\n\n  /**\n   * Get API_URL\n   * @return {*}\n   */\n  get apiUrl() {\n    return this.config.get(constants.API_URL);\n  }\n\n  /**\n   * Mutate API_URL within an instance of Groundwork\n   * @type {String}\n   */\n  set apiUrl(url) {\n    this.config.set(constants.API_URL, url);\n  }\n\n  /**\n   * Get API_VERSION\n   * @return {*}\n   */\n  get apiVersion() {\n    return this.config.get(constants.API_VERSION);\n  }\n\n  /**\n   * Mutate API_VERSION within an instance of Groundwork\n   * @type {String}\n   */\n  set apiVersion(version) {\n    if (!isApiVersion(version)) {\n      throw new Error(`apiVersion must be formatted in either YYYY-MM-DD or with\nan optinal integer like 2028-03-23:12`);\n    } else {\n      this.config.set(constants.API_VERSION, version);\n    }\n  }\n}\n"
  },
  {
    "__docId__": 101,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "RESOURCES",
    "memberof": "src/Groundwork.js",
    "longname": "src/Groundwork.js~RESOURCES",
    "access": null,
    "export": false,
    "importPath": "groundwork.js/src/Groundwork.js",
    "importStyle": null,
    "description": "Map of resource modules to attach to Groundwork instances",
    "lineNumber": 19,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 102,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "DEFAULTS",
    "memberof": "src/Groundwork.js",
    "longname": "src/Groundwork.js~DEFAULTS",
    "access": null,
    "export": false,
    "importPath": "groundwork.js/src/Groundwork.js",
    "importStyle": null,
    "description": "Default configuration for client",
    "lineNumber": 32,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 103,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Groundwork",
    "memberof": "src/Groundwork.js",
    "longname": "src/Groundwork.js~Groundwork",
    "access": null,
    "export": true,
    "importPath": "groundwork.js/src/Groundwork.js",
    "importStyle": "Groundwork",
    "description": "For backwards compatability apiKey is aliased to oauth_client_id within the\nconfig dictionary. The clientId getter/setters remain next to the same\ngetters/setters for apiKey. This allows code written for older versions of\ngroundwork.js to continue to use oauth_client_id to configure an instance while\nnew code is encouraged to use apiKey.",
    "examples": [
      "let gw = new Groundwork({'apiKey': '1234'});"
    ],
    "lineNumber": 52,
    "interface": false
  },
  {
    "__docId__": 104,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/Groundwork.js~Groundwork",
    "longname": "src/Groundwork.js~Groundwork#constructor",
    "access": null,
    "description": "Constructor",
    "lineNumber": 57,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": "client configuration"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 105,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "config",
    "memberof": "src/Groundwork.js~Groundwork",
    "longname": "src/Groundwork.js~Groundwork#config",
    "access": null,
    "description": null,
    "lineNumber": 79,
    "type": {
      "nullable": null,
      "types": [
        "Dictionary"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 106,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "http",
    "memberof": "src/Groundwork.js~Groundwork",
    "longname": "src/Groundwork.js~Groundwork#http",
    "access": null,
    "description": null,
    "lineNumber": 83,
    "type": {
      "nullable": null,
      "types": [
        "Http"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 107,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "version",
    "memberof": "src/Groundwork.js~Groundwork",
    "longname": "src/Groundwork.js~Groundwork#version",
    "access": null,
    "description": "Get the version # of this build as deteremined by Webpack",
    "lineNumber": 101,
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 108,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "clientId",
    "memberof": "src/Groundwork.js~Groundwork",
    "longname": "src/Groundwork.js~Groundwork#clientId",
    "access": null,
    "description": "Get OAUTH_CLIENT_ID",
    "lineNumber": 110,
    "deprecated": "use apiKey instead",
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 109,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "clientId",
    "memberof": "src/Groundwork.js~Groundwork",
    "longname": "src/Groundwork.js~Groundwork#clientId",
    "access": null,
    "description": "Mutate OAUTH_CLIENT_ID within an instance of Groundwork",
    "lineNumber": 120,
    "deprecated": "use apiKey instead",
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    },
    "generator": false
  },
  {
    "__docId__": 110,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "apiKey",
    "memberof": "src/Groundwork.js~Groundwork",
    "longname": "src/Groundwork.js~Groundwork#apiKey",
    "access": null,
    "description": "Get apiKey, alias for OAUTH_CLIENT_ID",
    "lineNumber": 129,
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 111,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "apiKey",
    "memberof": "src/Groundwork.js~Groundwork",
    "longname": "src/Groundwork.js~Groundwork#apiKey",
    "access": null,
    "description": "Mutate apiKey within an instance of Groundwork\nAlias for OAUTH_CLIENT_ID",
    "lineNumber": 138,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    },
    "generator": false
  },
  {
    "__docId__": 112,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "apiUrl",
    "memberof": "src/Groundwork.js~Groundwork",
    "longname": "src/Groundwork.js~Groundwork#apiUrl",
    "access": null,
    "description": "Get API_URL",
    "lineNumber": 146,
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 113,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "apiUrl",
    "memberof": "src/Groundwork.js~Groundwork",
    "longname": "src/Groundwork.js~Groundwork#apiUrl",
    "access": null,
    "description": "Mutate API_URL within an instance of Groundwork",
    "lineNumber": 154,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    },
    "generator": false
  },
  {
    "__docId__": 114,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "apiVersion",
    "memberof": "src/Groundwork.js~Groundwork",
    "longname": "src/Groundwork.js~Groundwork#apiVersion",
    "access": null,
    "description": "Get API_VERSION",
    "lineNumber": 162,
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 115,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "apiVersion",
    "memberof": "src/Groundwork.js~Groundwork",
    "longname": "src/Groundwork.js~Groundwork#apiVersion",
    "access": null,
    "description": "Mutate API_VERSION within an instance of Groundwork",
    "lineNumber": 170,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    },
    "generator": false
  },
  {
    "__docId__": 116,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/Http.js",
    "memberof": null,
    "longname": "src/Http.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/*global TAG, __LOG__, btoa*/\n\nimport * as constants from './constants';\nimport Dictionary from './Dictionary';\nimport axios from 'axios';\nimport merge from 'lodash-es/merge';\nimport { urlJoin, isEmpty } from './utils';\n\n/** @type {String} */\nconst API_VERSION_HEADER = 'gw-api-version';\n\n/** @type {String} */\nconst CLIENT_HEADER = 'gw-js-client';\n\n/** @type {Function} */\nconst CLIENT_VERSION = (TAG) ? TAG.replace(/[\\s]*/g, '') : 'None';\n\n// Template for XHR responses\n/** @type {Object} */\nconst GENERIC_RESPONSE = Object.freeze({\n  config: {},\n  data: {},\n  headers: {},\n  status: 0,\n  statusText: ''\n});\n\n/**\n * Core AJAX handling with the API\n *\n * @desc\n * Under the hood XHR is handled via Axios - https://github.com/mzabriskie/axios\n * which provides a simple Promise-based interface for JSON communication via\n * XHR.\n *\n * Http also manages custom headers needed by The Groundwork API. `gw-version`\n * is added to all requests. If the client has received an auth token, the\n * appropriate `Authorization` header will be sent as well.\n *\n * All HTTP verb methods (get, put, post, delete) return a Promise for handling\n * success and error states.\n *\n * @example\n * let http = new Http();\n * // make a GET request to `/foo`\n * http.get('foo').then((response) => {\n *    console.log(response)\n *  ).catch((err) => {\n *    console.log(error);\n * });\n *\n */\nexport default class Http {\n  /**\n   * Constructor\n   * @param {Dictionary} config - client configuration\n   */\n  constructor(config) {\n    /** @type {Dictionary} */\n    this.config = (config && config instanceof Dictionary) ?\n      config : new Dictionary();\n\n    /** @type {Object} */\n    this.genericResponse = GENERIC_RESPONSE;\n\n    this.setupRequestInterceptors();\n  }\n\n  /**\n   * Create a mock Axios response, used in error messages returned from\n   * Promises that don't make it to the server (validation errors, etc.)\n   *\n   * @param {Object} [mock] - object to merge into genericResponse\n   * @return {Object}\n   */\n  generateMockResponse(mock = {}) {\n    return merge({}, this.genericResponse, mock);\n  }\n\n  /**\n   * Generate a 400 response. This is usually used to throw an error in a\n   * consistent format without hitting the API, such a schema validation error\n   *\n   * @param {Object} error - error object to return\n   * @param {Number} [code] - http code for error\n   * @param {String} [status] - error status message\n   * @return {Object}\n   */\n  generateErrorResponse(error = {}, code = 400, status = 'Invalid Data') {\n    return this.generateMockResponse({\n      status: code,\n      statusText: status,\n      data: {\n        error\n      }\n    });\n  }\n\n  /**\n   * Return a standardizes object to use in validation error messages\n   *\n   * @return {Object}\n   */\n  generateErrorObject() {\n    return {\n      valid: false,\n      fields: [],\n      msg: []\n    };\n  }\n\n  /**\n   * Predicate: checks presence of AUTH_ACCESS_TOKEN\n   *\n   * @return {Boolean}\n   */\n  hasAuthToken() {\n    const auth = this.config.get(constants.CONFIG_AUTH);\n    if (!auth) { return false; }\n    return !!auth[constants.AUTH_ACCESS_TOKEN];\n  }\n\n  /**\n   * Create a string auth token for use in Authorization headers\n   *\n   * @return {String|undefined}\n   */\n  generateAuthorizationHeader() {\n    const a = this.config.get(constants.CONFIG_AUTH);\n    if (isEmpty(a)) {\n      if (__LOG__) {\n        console.warn('No authorization token is set!'); // eslint-disable-line\n      }\n      return undefined;\n    }\n    return `${ a[constants.AUTH_TOKEN_TYPE] }\\ ${ a[constants.AUTH_ACCESS_TOKEN] }`;\n  }\n\n  /**\n   * Generate a basic auth token for use in Authorization headers\n   *\n   * @return {String|undefined}\n   */\n  generateBasicAuthHeader() {\n    const id = this.config.get(constants.OAUTH_CLIENT_ID);\n    if (!id) {\n      if (__LOG__) {\n        console.warn('No oauth_client_id is set!'); // eslint-disable-line\n      }\n      return undefined;\n    }\n    return `Basic ${ btoa(id + ':') }`; // eslint-disable-line\n  }\n\n  /**\n   * Generate an object of default headers\n   *\n   * Note: the `Authorization` header can be omit from a request by passing\n   * a `noauth` property in the requestConfig object.\n   *\n   * @example\n   * let http = new Http(new Dictionary({auth: authObject}));\n   * http.get('foo', { noauth: true }); // will not send Authorization header\n   *\n   * @param {Object} [requestConfig] - request config object\n   * @return {Object}\n   */\n  defaultHeaders(requestConfig = {}) {\n    const apiVersion = this.config.get(constants.API_VERSION);\n    const headers = {\n      [CLIENT_HEADER]: `js-${ CLIENT_VERSION }`\n    };\n\n    // Attach an API Version header\n    if (apiVersion) {\n      headers[API_VERSION_HEADER] = apiVersion;\n    }\n\n    // Add Authorization header if config.noauth is falsy & auth is truthy\n    if (!requestConfig.noauth && this.hasAuthToken()) {\n      headers.Authorization = this.generateAuthorizationHeader();\n    }\n\n    // Add Basic Auth header if config.noauth is truthy OR auth is falsy\n    if (!this.hasAuthToken() || requestConfig.noauth) {\n      headers.Authorization = this.generateBasicAuthHeader();\n    }\n\n    return headers;\n  }\n\n  /**\n   * Attach interceptors to requests/responses to do PRE/POST processing, such\n   * as attaching client headers and massaging messages\n   *\n   * @access private\n   * @return {void}\n   */\n  setupRequestInterceptors() {\n    const defaults = this.defaultHeaders.bind(this);\n    axios.interceptors.request.use((config) => {\n      const headers = (config.headers) ?\n            merge(config.headers, defaults(config)) :\n            defaults(config);\n\n      config.headers = headers; // eslint-disable-line\n      return config;\n    }, (error) => {\n      // Do something with request error\n      if (__LOG__) {\n        console.error('REQUEST_ERROR', error); // eslint-disable-line\n      }\n      return Promise.reject(error);\n    });\n  }\n\n  /**\n   * Ensure the api_url is prepended to all requests\n   * @param {String} url\n   * @return {String}\n   */\n  assembleUrl(url) {\n    return urlJoin(this.config.get(constants.API_URL), url);\n  }\n\n  /**\n   * GET\n   * @param {String} url\n   * @param {Object} [opts] - optional configuration for request\n   * @return {Promise}\n   */\n  get(url, opts = {}) {\n    return axios.get(this.assembleUrl(url), opts);\n  }\n\n  /**\n   * POST\n   * @param {String} url\n   * @param {Object} data - payload sent to services\n   * @param {Object} [opts] - optional configuration for request\n   * @return {Promise}\n   */\n  post(url, data, opts = {}) {\n    return axios.post(this.assembleUrl(url), data, opts);\n  }\n\n  /**\n   * PUT\n   * @param {String} url\n   * @param {Object} data - payload sent to services\n   * @param {Object} [opts] - optional configuration for request\n   * @return {Promise}\n   */\n  put(url, data, opts = {}) {\n    return axios.put(this.assembleUrl(url), data, opts);\n  }\n\n  /**\n   * PATCH\n   * @param {String} url\n   * @param {Object} data - payload sent to services\n   * @param {Object} [opts] - optional configuration for request\n   * @return {Promise}\n   */\n  patch(url, data, opts = {}) {\n    return axios.patch(this.assembleUrl(url), data, opts);\n  }\n\n  /**\n   * DELETE\n   * @param {String} url\n   * @param {Object} [opts] - optional configuration for request\n   * @return {Promise}\n   */\n  delete(url, opts = {}) {\n    return axios.delete(this.assembleUrl(url), opts);\n  }\n}\n"
  },
  {
    "__docId__": 117,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "API_VERSION_HEADER",
    "memberof": "src/Http.js",
    "longname": "src/Http.js~API_VERSION_HEADER",
    "access": null,
    "export": false,
    "importPath": "groundwork.js/src/Http.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 118,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "CLIENT_HEADER",
    "memberof": "src/Http.js",
    "longname": "src/Http.js~CLIENT_HEADER",
    "access": null,
    "export": false,
    "importPath": "groundwork.js/src/Http.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 119,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "CLIENT_VERSION",
    "memberof": "src/Http.js",
    "longname": "src/Http.js~CLIENT_VERSION",
    "access": null,
    "export": false,
    "importPath": "groundwork.js/src/Http.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "type": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 120,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "GENERIC_RESPONSE",
    "memberof": "src/Http.js",
    "longname": "src/Http.js~GENERIC_RESPONSE",
    "access": null,
    "export": false,
    "importPath": "groundwork.js/src/Http.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 20,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 121,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Http",
    "memberof": "src/Http.js",
    "longname": "src/Http.js~Http",
    "access": null,
    "export": true,
    "importPath": "groundwork.js/src/Http.js",
    "importStyle": "Http",
    "description": "Under the hood XHR is handled via Axios - https://github.com/mzabriskie/axios\nwhich provides a simple Promise-based interface for JSON communication via\nXHR.\n\nHttp also manages custom headers needed by The Groundwork API. `gw-version`\nis added to all requests. If the client has received an auth token, the\nappropriate `Authorization` header will be sent as well.\n\nAll HTTP verb methods (get, put, post, delete) return a Promise for handling\nsuccess and error states.",
    "examples": [
      "let http = new Http();\n// make a GET request to `/foo`\nhttp.get('foo').then((response) => {\n   console.log(response)\n ).catch((err) => {\n   console.log(error);\n});"
    ],
    "lineNumber": 53,
    "interface": false
  },
  {
    "__docId__": 122,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/Http.js~Http",
    "longname": "src/Http.js~Http#constructor",
    "access": null,
    "description": "Constructor",
    "lineNumber": 58,
    "params": [
      {
        "nullable": null,
        "types": [
          "Dictionary"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": "client configuration"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 123,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "config",
    "memberof": "src/Http.js~Http",
    "longname": "src/Http.js~Http#config",
    "access": null,
    "description": null,
    "lineNumber": 60,
    "type": {
      "nullable": null,
      "types": [
        "Dictionary"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 124,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "genericResponse",
    "memberof": "src/Http.js~Http",
    "longname": "src/Http.js~Http#genericResponse",
    "access": null,
    "description": null,
    "lineNumber": 64,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 125,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "generateMockResponse",
    "memberof": "src/Http.js~Http",
    "longname": "src/Http.js~Http#generateMockResponse",
    "access": null,
    "description": "Create a mock Axios response, used in error messages returned from\nPromises that don't make it to the server (validation errors, etc.)",
    "lineNumber": 76,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "mock",
        "description": "object to merge into genericResponse"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 126,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "generateErrorResponse",
    "memberof": "src/Http.js~Http",
    "longname": "src/Http.js~Http#generateErrorResponse",
    "access": null,
    "description": "Generate a 400 response. This is usually used to throw an error in a\nconsistent format without hitting the API, such a schema validation error",
    "lineNumber": 89,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "error",
        "description": "error object to return"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "code",
        "description": "http code for error"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "status",
        "description": "error status message"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 127,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "generateErrorObject",
    "memberof": "src/Http.js~Http",
    "longname": "src/Http.js~Http#generateErrorObject",
    "access": null,
    "description": "Return a standardizes object to use in validation error messages",
    "lineNumber": 104,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 128,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "hasAuthToken",
    "memberof": "src/Http.js~Http",
    "longname": "src/Http.js~Http#hasAuthToken",
    "access": null,
    "description": "Predicate: checks presence of AUTH_ACCESS_TOKEN",
    "lineNumber": 117,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 129,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "generateAuthorizationHeader",
    "memberof": "src/Http.js~Http",
    "longname": "src/Http.js~Http#generateAuthorizationHeader",
    "access": null,
    "description": "Create a string auth token for use in Authorization headers",
    "lineNumber": 128,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "String",
        "undefined"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 130,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "generateBasicAuthHeader",
    "memberof": "src/Http.js~Http",
    "longname": "src/Http.js~Http#generateBasicAuthHeader",
    "access": null,
    "description": "Generate a basic auth token for use in Authorization headers",
    "lineNumber": 144,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "String",
        "undefined"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 131,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "defaultHeaders",
    "memberof": "src/Http.js~Http",
    "longname": "src/Http.js~Http#defaultHeaders",
    "access": null,
    "description": "Generate an object of default headers\n\nNote: the `Authorization` header can be omit from a request by passing\na `noauth` property in the requestConfig object.",
    "examples": [
      "let http = new Http(new Dictionary({auth: authObject}));\nhttp.get('foo', { noauth: true }); // will not send Authorization header"
    ],
    "lineNumber": 168,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "requestConfig",
        "description": "request config object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 132,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setupRequestInterceptors",
    "memberof": "src/Http.js~Http",
    "longname": "src/Http.js~Http#setupRequestInterceptors",
    "access": "private",
    "description": "Attach interceptors to requests/responses to do PRE/POST processing, such\nas attaching client headers and massaging messages",
    "lineNumber": 199,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 133,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "assembleUrl",
    "memberof": "src/Http.js~Http",
    "longname": "src/Http.js~Http#assembleUrl",
    "access": null,
    "description": "Ensure the api_url is prepended to all requests",
    "lineNumber": 222,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 134,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "get",
    "memberof": "src/Http.js~Http",
    "longname": "src/Http.js~Http#get",
    "access": null,
    "description": "GET",
    "lineNumber": 232,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "opts",
        "description": "optional configuration for request"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 135,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "post",
    "memberof": "src/Http.js~Http",
    "longname": "src/Http.js~Http#post",
    "access": null,
    "description": "POST",
    "lineNumber": 243,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "payload sent to services"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "opts",
        "description": "optional configuration for request"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 136,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "put",
    "memberof": "src/Http.js~Http",
    "longname": "src/Http.js~Http#put",
    "access": null,
    "description": "PUT",
    "lineNumber": 254,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "payload sent to services"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "opts",
        "description": "optional configuration for request"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 137,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "patch",
    "memberof": "src/Http.js~Http",
    "longname": "src/Http.js~Http#patch",
    "access": null,
    "description": "PATCH",
    "lineNumber": 265,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "payload sent to services"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "opts",
        "description": "optional configuration for request"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 138,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "delete",
    "memberof": "src/Http.js~Http",
    "longname": "src/Http.js~Http#delete",
    "access": null,
    "description": "DELETE",
    "lineNumber": 275,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "opts",
        "description": "optional configuration for request"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 139,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/Payment.js",
    "memberof": null,
    "longname": "src/Payment.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import CreditCard from 'credit-card';\nimport currencyFormatter from 'currency-formatter';\nimport numeral from 'numeral';\n\nimport Http from './Http';\nimport Dictionary from './Dictionary';\nimport SchemaUtils from './SchemaUtils';\nimport { isEmpty, has, urlJoin } from './utils';\nimport * as constants from './constants';\n\nimport cloneDeep from 'lodash-es/cloneDeep';\nimport forEach from 'lodash-es/forEach';\nimport merge from 'lodash-es/merge';\n\n/** @type {String} - API endpoint for resource */\nconst NAMESPACE = 'payments';\n\n/** @type {Object} - used to map validation errors to fields */\nconst CC_MAP = Object.freeze({\n  validCardNumber: 'ccNum',\n  validExpiryMonth: 'ccExpMonth',\n  validExpiryYear: 'ccExpYear',\n  validCvv: 'ccCvc',\n  isExpired: 'expiration'\n});\n\nexport default class Payment {\n  /**\n   * @param {Dictionary} [config] - configuration dictionary\n   * @param {Http} http\n   */\n  constructor(config, http) {\n    /** @type {Dictionary} */\n    this.config = (config && config instanceof Dictionary) ?\n      config : new Dictionary();\n\n    // Resource must have an Http instance\n    if (!http || http instanceof Http === false) {\n      throw new Error('Payment requires Http');\n    }\n\n    /** @type {Http} */\n    this.http = http;\n\n    /** @type {String} */\n    this.namespace = NAMESPACE;\n\n    /** @type {SchemaUtils} */\n    this.schemaUtils = SchemaUtils;\n  }\n\n  /**\n   * If a specific function argument is missing then send back a tuple with a\n   * rejected Promise containing an error message.\n   *\n   * @param {*} arg - value to check\n   * @param {String} name - name of argument being checked\n   * @return {Array}\n   */\n  validateArg(arg, name = '') {\n    let out = [true];\n\n    if (arg === null || arg === undefined || arg === false) {\n      const response = this.http.generateErrorResponse({\n        valid: false,\n        fields: [name],\n        msg: [`Missing Argument: ${name}`]\n      });\n      out = [false, Promise.reject(response)];\n    }\n\n    return out;\n  }\n\n  /**\n   * Return a validation object with Booleans for each item of the card\n   *\n   * @param {Object} [payment] - payment object\n   * @return {Object}\n   */\n  validateCreditCard(payment = {}) {\n    const { ccNum, ccExpMonth, ccExpYear, ccCvc } = payment;\n    const card = {\n      cardType: CreditCard.determineCardType(ccNum),\n      number: ccNum,\n      expiryMonth: String(ccExpMonth),\n      expiryYear: String(ccExpYear),\n      cvv: String(ccCvc)\n    };\n    return CreditCard.validate(card);\n  }\n\n  /**\n   * If no ID is present, then send back a tuple with a rejected Promise with an\n   * error message\n   *\n   * @param {String} id\n   * @return {Array}\n   */\n  validateId(id = '') {\n    let out = [true];\n\n    if (id.length === 0) {\n      const response = this.http.generateErrorResponse({\n        valid: false,\n        fields: ['id'],\n        msg: ['Missing ID']\n      });\n      out = [false, Promise.reject(response)];\n    }\n    return out;\n  }\n\n  /**\n   * If code is not a valid country code for currencies then return an updated\n   * errors object we can give back to the user\n   *\n   * @param {String} code\n   * @param {Object} errors\n   * @return {Object}\n   */\n  validateCurrencyCode(code, errors) {\n    const errs = cloneDeep(errors);\n    const upCode = String(code).toUpperCase();\n    const codeCheck = currencyFormatter.findCurrency(upCode);\n\n    if (!codeCheck || codeCheck.code !== upCode) {\n      errs.msg.push('currency is not a valid ISO-4217 country code');\n      errs.fields.push('currency');\n    }\n\n    return errs;\n  }\n\n  /**\n   * If no interval is present, or its not set to 'weekly' or 'monthly'\n   * then send back a tuple with a rejected Promise with an error message\n   *\n   * @param {String} interval\n   * @return {Array}\n   */\n  validateInterval(interval) {\n    let out = [true];\n\n    // Slightly complex check is complex\n    const test = (t) => {\n      if (!t) { return false; }\n      if (t === 'weekly' || t === 'monthly') { return false; }\n      return true;\n    };\n\n    if (test(interval)) {\n      const response = this.http.generateErrorResponse({\n        valid: false,\n        fields: ['interval'],\n        msg: ['Interval must be weekly or monthly']\n      });\n      out = [false, Promise.reject(response)];\n    }\n    return out;\n  }\n\n  /**\n   * Validate the payment against the schema. If it fails then return a tuple\n   * with a rejected Promise containing an error message\n   *\n   * @param {Object} payment\n   * @param {Object} schema\n   * @return {Array}\n   */\n  validateSchema(payment, schema) {\n    let out = [true];\n\n    const valid = this.schemaUtils.validateSchema(this.attachIdentity(payment),\n                                                schema);\n    if (valid.length > 0) {\n      const ret = this.http.generateErrorObject();\n      valid.forEach((err) => {\n        ret.msg.push(err.message);\n        ret.fields.push(this.schemaUtils.extractFieldByError(err));\n      });\n      out = [false, Promise.reject(this.http.generateErrorResponse(ret))];\n    }\n    return out;\n  }\n\n  /**\n   * Generate a standardized validation message for payment object. The\n   * payment object should already have its types coerced before being\n   * passed into this function.\n   *\n   * @param {Object} payment\n   * @param {Object} [schema]\n   * @return {Object}\n   */\n  validatePayment(payment, schema) {\n    let ret = this.http.generateErrorObject();\n    const _schema = schema || this.schema;\n    const validSchema = this.schemaUtils.validateSchema(payment, _schema);\n\n    // Bail out on empty form\n    if (!payment || isEmpty(payment)) {\n      ret.msg = ['Required fields missing'];\n      ret.fields = this.schema.required;\n      return ret;\n    }\n\n    // Loop through schema errors and build up\n    if (validSchema.length > 0) {\n      validSchema.forEach((err) => {\n        ret.msg.push(err.message);\n        ret.fields.push(this.schemaUtils.extractFieldByError(err));\n      });\n    }\n\n    // Check the CC\n    ret = this.validateCCPayment(payment, ret);\n\n    // Check currency code if it exists\n    if (has(payment, 'currency')) {\n      ret = this.validateCurrencyCode(payment.currency, ret);\n    }\n\n    if (ret.fields.length === 0) {\n      ret.valid = true;\n    }\n    return ret;\n  }\n\n  /**\n   * Build up validation errors related to Credit Cards\n   *\n   * @access private\n   * @param {Object} payment\n   * @param {Object} errors - http error object\n   * @return {Object}\n   */\n  validateCCPayment(payment, errors) {\n    const ret = cloneDeep(errors);\n    const validCard = this.validateCreditCard(payment);\n    delete validCard.customValidation; // Un-used\n\n    forEach(validCard, (val, key) => {\n      if (!val && key !== 'isExpired') {\n        const field = CC_MAP[key];\n        ret.msg.push(`${ field } is invalid`);\n        ret.fields.push(field);\n      }\n    });\n\n    if (validCard.isExpired) {\n      ret.msg.push('Credit card expired');\n      ret.fields.push(CC_MAP.isExpired);\n    }\n\n    return ret;\n  }\n\n  /**\n   * Remove all currency symbols and punctuation from amount (except for\n   * decimal)\n   *\n   * @example\n   * removeCurrencyFormatting('$1,123.33'); // => '1123.33'\n   *\n   * @param {String} [amount] - currency amount\n   * @return {String}\n   */\n  removeCurrencyFormatting(amount = '') {\n    let _amount = amount;\n    if (typeof _amount !== 'string') {\n      _amount = String(_amount);\n    }\n    return numeral(_amount).format('0.00');\n  }\n\n  /**\n   * Remove any currency formatting and return as an Integer. This is\n   * specifically for dealing with non-divisible currencies such as Yen\n   * which cannot be divided into 'cents'. Also, this will round up\n   * (see example)\n   *\n   * @example\n   * toIndivisible('-¥12,300') // => 12300\n   * toIndivisible('-¥12,300.55') // => 12301\n   *\n   * @param {String} [amount]\n   * @return {Number}\n   */\n  toIndivisible(amount = '') {\n    return Math.abs(Number(this.removeCurrencyFormatting(amount)).toFixed(0));\n  }\n\n  /**\n   * Convert a currency amount into a 'cents' value\n   *\n   * !! Note: expects amount to be an amount divisible by 100, such as dollars\n   * or euros. If using a non-divisible amount such as Yen then do not use\n   * this function and use toIndivisible\n   *\n   * @example\n   * toCents('$12.04') // => 1204\n   * toCents(1000) // => 100000\n   *\n   * @param {String} amount - string representation of value\n   * @return {Number}\n   */\n  toCents(amount = '') {\n    const amt = this.removeCurrencyFormatting(amount);\n    const abs = Math.abs(Number(amt).toFixed(2));\n    return (abs <= 0) ? Number(String(abs).replace(/\\D/g, '')) : abs * 100;\n  }\n\n  /**\n   * Format the amount from API in cents  based on the ISO-4217 country\n   * code provided\n   *\n   * @param {Number} [cents] - amount from API in cents\n   * @param {String} code\n   * @return {String}\n   */\n  formatCurrency(cents = 0, code) {\n    const { decimalDigits } = currencyFormatter.findCurrency(code);\n    const amount = Number(cents) / Math.pow(10, decimalDigits);\n    return currencyFormatter.format(amount, { code });\n  }\n\n  /**\n   * If a GWID is present then attach to the request. This is immutable,\n   * a new object is returned (we don't mutate the original payment)\n   *\n   * @param {Object} [payment]\n   * @return {Object}\n   */\n  attachIdentity(payment = {}) {\n    const fields = {};\n    const auth = this.config.get(constants.CONFIG_AUTH);\n    if (has(auth, 'gwid')) {\n      fields.gwid = auth.gwid;\n    }\n    return merge({}, payment, fields);\n  }\n\n  /**\n   * Interface to Http::get\n   *\n   * @access private\n   * @param {String} url\n   * @param {Object} params\n   * @return {Promise}\n   */\n  fetchCollection(url = '', params = {}) {\n    return this.http.get(url, { params });\n  }\n\n  /**\n   * GET the health status of the Donations service. Passing in features: true\n   * will get the status of the service AND its available features\n   *\n   * @param {Object} opts\n   * @param {Boolean} [opts.features] - get features status\n   * @return {Proimise}\n   */\n  health(opts = {}) {\n    const { features } = opts;\n    const urlBase = urlJoin(this.namespace, 'health');\n    const url = (features) ? urlJoin(urlBase, 'features') : urlBase;\n    return this.http.get(url);\n  }\n}\n"
  },
  {
    "__docId__": 140,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "NAMESPACE",
    "memberof": "src/Payment.js",
    "longname": "src/Payment.js~NAMESPACE",
    "access": null,
    "export": false,
    "importPath": "groundwork.js/src/Payment.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 141,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "CC_MAP",
    "memberof": "src/Payment.js",
    "longname": "src/Payment.js~CC_MAP",
    "access": null,
    "export": false,
    "importPath": "groundwork.js/src/Payment.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 142,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Payment",
    "memberof": "src/Payment.js",
    "longname": "src/Payment.js~Payment",
    "access": null,
    "export": true,
    "importPath": "groundwork.js/src/Payment.js",
    "importStyle": "Payment",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 143,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/Payment.js~Payment",
    "longname": "src/Payment.js~Payment#constructor",
    "access": null,
    "description": "",
    "lineNumber": 32,
    "params": [
      {
        "nullable": null,
        "types": [
          "Dictionary"
        ],
        "spread": false,
        "optional": true,
        "name": "config",
        "description": "configuration dictionary"
      },
      {
        "nullable": null,
        "types": [
          "Http"
        ],
        "spread": false,
        "optional": false,
        "name": "http",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 144,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "config",
    "memberof": "src/Payment.js~Payment",
    "longname": "src/Payment.js~Payment#config",
    "access": null,
    "description": null,
    "lineNumber": 34,
    "type": {
      "nullable": null,
      "types": [
        "Dictionary"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 145,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "http",
    "memberof": "src/Payment.js~Payment",
    "longname": "src/Payment.js~Payment#http",
    "access": null,
    "description": null,
    "lineNumber": 43,
    "type": {
      "nullable": null,
      "types": [
        "Http"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 146,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "namespace",
    "memberof": "src/Payment.js~Payment",
    "longname": "src/Payment.js~Payment#namespace",
    "access": null,
    "description": null,
    "lineNumber": 46,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 147,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "schemaUtils",
    "memberof": "src/Payment.js~Payment",
    "longname": "src/Payment.js~Payment#schemaUtils",
    "access": null,
    "description": null,
    "lineNumber": 49,
    "type": {
      "nullable": null,
      "types": [
        "SchemaUtils"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 148,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "validateArg",
    "memberof": "src/Payment.js~Payment",
    "longname": "src/Payment.js~Payment#validateArg",
    "access": null,
    "description": "If a specific function argument is missing then send back a tuple with a\nrejected Promise containing an error message.",
    "lineNumber": 60,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "arg",
        "description": "value to check"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "name of argument being checked"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 149,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "validateCreditCard",
    "memberof": "src/Payment.js~Payment",
    "longname": "src/Payment.js~Payment#validateCreditCard",
    "access": null,
    "description": "Return a validation object with Booleans for each item of the card",
    "lineNumber": 81,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "payment",
        "description": "payment object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 150,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "validateId",
    "memberof": "src/Payment.js~Payment",
    "longname": "src/Payment.js~Payment#validateId",
    "access": null,
    "description": "If no ID is present, then send back a tuple with a rejected Promise with an\nerror message",
    "lineNumber": 100,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 151,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "validateCurrencyCode",
    "memberof": "src/Payment.js~Payment",
    "longname": "src/Payment.js~Payment#validateCurrencyCode",
    "access": null,
    "description": "If code is not a valid country code for currencies then return an updated\nerrors object we can give back to the user",
    "lineNumber": 122,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "code",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "errors",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 152,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "validateInterval",
    "memberof": "src/Payment.js~Payment",
    "longname": "src/Payment.js~Payment#validateInterval",
    "access": null,
    "description": "If no interval is present, or its not set to 'weekly' or 'monthly'\nthen send back a tuple with a rejected Promise with an error message",
    "lineNumber": 142,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "interval",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 153,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "validateSchema",
    "memberof": "src/Payment.js~Payment",
    "longname": "src/Payment.js~Payment#validateSchema",
    "access": null,
    "description": "Validate the payment against the schema. If it fails then return a tuple\nwith a rejected Promise containing an error message",
    "lineNumber": 171,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "payment",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "schema",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 154,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "validatePayment",
    "memberof": "src/Payment.js~Payment",
    "longname": "src/Payment.js~Payment#validatePayment",
    "access": null,
    "description": "Generate a standardized validation message for payment object. The\npayment object should already have its types coerced before being\npassed into this function.",
    "lineNumber": 196,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "payment",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "schema",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 155,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "validateCCPayment",
    "memberof": "src/Payment.js~Payment",
    "longname": "src/Payment.js~Payment#validateCCPayment",
    "access": "private",
    "description": "Build up validation errors related to Credit Cards",
    "lineNumber": 238,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "payment",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "errors",
        "description": "http error object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 156,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "removeCurrencyFormatting",
    "memberof": "src/Payment.js~Payment",
    "longname": "src/Payment.js~Payment#removeCurrencyFormatting",
    "access": null,
    "description": "Remove all currency symbols and punctuation from amount (except for\ndecimal)",
    "examples": [
      "removeCurrencyFormatting('$1,123.33'); // => '1123.33'"
    ],
    "lineNumber": 269,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "amount",
        "description": "currency amount"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 157,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "toIndivisible",
    "memberof": "src/Payment.js~Payment",
    "longname": "src/Payment.js~Payment#toIndivisible",
    "access": null,
    "description": "Remove any currency formatting and return as an Integer. This is\nspecifically for dealing with non-divisible currencies such as Yen\nwhich cannot be divided into 'cents'. Also, this will round up\n(see example)",
    "examples": [
      "toIndivisible('-¥12,300') // => 12300\ntoIndivisible('-¥12,300.55') // => 12301"
    ],
    "lineNumber": 290,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "amount",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 158,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "toCents",
    "memberof": "src/Payment.js~Payment",
    "longname": "src/Payment.js~Payment#toCents",
    "access": null,
    "description": "Convert a currency amount into a 'cents' value\n\n!! Note: expects amount to be an amount divisible by 100, such as dollars\nor euros. If using a non-divisible amount such as Yen then do not use\nthis function and use toIndivisible",
    "examples": [
      "toCents('$12.04') // => 1204\ntoCents(1000) // => 100000"
    ],
    "lineNumber": 308,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "amount",
        "description": "string representation of value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 159,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "formatCurrency",
    "memberof": "src/Payment.js~Payment",
    "longname": "src/Payment.js~Payment#formatCurrency",
    "access": null,
    "description": "Format the amount from API in cents  based on the ISO-4217 country\ncode provided",
    "lineNumber": 322,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "cents",
        "description": "amount from API in cents"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "code",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 160,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "attachIdentity",
    "memberof": "src/Payment.js~Payment",
    "longname": "src/Payment.js~Payment#attachIdentity",
    "access": null,
    "description": "If a GWID is present then attach to the request. This is immutable,\na new object is returned (we don't mutate the original payment)",
    "lineNumber": 335,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "payment",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 161,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "fetchCollection",
    "memberof": "src/Payment.js~Payment",
    "longname": "src/Payment.js~Payment#fetchCollection",
    "access": "private",
    "description": "Interface to Http::get",
    "lineNumber": 352,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 162,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "health",
    "memberof": "src/Payment.js~Payment",
    "longname": "src/Payment.js~Payment#health",
    "access": null,
    "description": "GET the health status of the Donations service. Passing in features: true\nwill get the status of the service AND its available features",
    "lineNumber": 364,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "opts.features",
        "description": "get features status"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Proimise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 163,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/Profile.js",
    "memberof": null,
    "longname": "src/Profile.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import Dictionary from './Dictionary';\nimport Http from './Http';\nimport SchemaUtils from './SchemaUtils';\nimport schema from './schema/profile';\nimport { urlJoin } from './utils';\n\nimport cloneDeep from 'lodash-es/cloneDeep';\n\n/** @type {String} - API endpoint for resource */\nconst NAMESPACE = 'the-claw';\n\n/** @type {String} - API endpoint for profile resource */\nconst ENDPOINT_PROFILE = 'profiles';\n\n/** @type {String} - API endpoint for password reset */\nconst ENDPOINT_PASSWORD_RESET = 'password_resets';\n\nexport default class Profile {\n  /**\n   * @param {Dictionary} [config] - configuration dictionary\n   * @param {Http} http\n   */\n  constructor(config, http) {\n    /** @type {Dictionary} */\n    this.config = (config && config instanceof Dictionary) ?\n      config : new Dictionary();\n\n    // Resource must have an Http instance\n    if (!http || http instanceof Http === false) {\n      throw new Error('Profile requires Http');\n    }\n\n    /** @type {Http} */\n    this.http = http;\n\n    /** @type {String} */\n    this.schema = schema;\n\n    /** @type {SchemaUtils} */\n    this.schemaUtils = SchemaUtils;\n  }\n\n  /**\n   * Validate payload object and return object with validation status and any\n   * errors that crop up\n   *\n   * @example\n   *\n   * validateProfile({foo: 1, source: 'foo', email: 'bar'});\n   * // => { valid: false, fields: ['email'], msg: ['Invalid email address']}\n   *\n   *\n   * validateProfile({source: 'foo', email: 'bar@baz.biz'});\n   * // => { valid: true, fields: [], msg: [] }\n   *\n   * @param {Object} [profile={}] - profile object\n   * @param {Object} [_schema=this.schema] - JSON schema for profile\n   * @return {Object}\n   */\n  validateProfile(profile = {}, _schema = this.schema) {\n    let out = [true];\n    const valid = this.schemaUtils.validateSchema(profile, _schema);\n\n    if (valid.length > 0) {\n      const ret = this.http.generateErrorObject();\n      valid.forEach((err) => {\n        ret.msg.push(err.message);\n        ret.fields.push(this.schemaUtils.extractFieldByError(err));\n      });\n      out = [false, Promise.reject(this.http.generateErrorResponse(ret))];\n    }\n    return out;\n  }\n\n  /**\n   * Fetch a single Profile object\n   *\n   * @param {String} [gwid=''] - profile gwid\n   * @return {Promise}\n   */\n  fetch(gwid = '') {\n    const url = urlJoin(NAMESPACE, ENDPOINT_PROFILE, gwid);\n    return this.http.get(url);\n  }\n\n  /**\n   * POST a Profile record to the API\n   *\n   * The passed in form object will be validated. If it fails, a mock response\n   * with any errors will be sent back in a rejected Promise. This is to present\n   * the least amount of surprise to the developer.\n   *\n   * @example\n   * // validation fail\n   * profile.create({}).catch((err) => console.log(err));\n   * // => { status: 400, data: { error: { valid: false, ... } } ... }\n   *\n   * @param {Object} [profile={}] - profile object\n   * @return {Promise}\n   */\n  create(profile = {}) {\n    // Return a mock error response with validation errors\n    const [cf, cp] = this.validateProfile(profile);\n    if (!cf) { return cp; }\n\n    const url = urlJoin(NAMESPACE, ENDPOINT_PROFILE);\n    return this.http.post(url, profile);\n  }\n\n  /**\n   * PUT a Profile record to the API\n   *\n   * The passed in form object will be validated. If it fails, a mock response\n   * with any errors will be sent back in a rejected Promise. This is to present\n   * the least amount of surprise to the developer.\n   *\n   * @example\n   * // validation fail\n   * profile.update({}).catch((err) => console.log(err));\n   * // => { status: 400, data: { error: { valid: false, ... } } ... }\n   *\n   * @param {String} [gwid=''] - gwid of profile to update\n   * @param {Object} [profile={}] - fields to update\n   * @return {Promise}\n   */\n  update(gwid = '', profile = {}) {\n    // Return a mock error response with validation errors\n    const putSchema = cloneDeep(this.schema);\n    delete putSchema.required; // No required fields in PUTs\n    const [cf, cp] = this.validateProfile(profile, putSchema);\n    if (!cf) { return cp; }\n\n    const url = urlJoin(NAMESPACE, ENDPOINT_PROFILE, gwid);\n    return this.http.put(url, profile);\n  }\n\n  /**\n   * Trigger a password reset for an email\n   *\n   * Email will be sent to the requested address with a reset link containing\n   * a token\n   *\n   * @param {String} [email=''] - profile email\n   * @return {Promise}\n   */\n  requestResetToken(email = '') {\n    const url = urlJoin(NAMESPACE, ENDPOINT_PASSWORD_RESET, '');\n    return this.http.post(url, { email });\n  }\n\n  /**\n   * PUT the new password and token to the API\n   *\n   * @param {String} [token=''] - reset token\n   * @param {String} [password=''] - new password\n   * @return {Promise}\n   */\n  resetPassword(token = '', password = '') {\n    const url = urlJoin(NAMESPACE, ENDPOINT_PASSWORD_RESET, token);\n    return this.http.put(url, { token, password });\n  }\n\n}\n"
  },
  {
    "__docId__": 164,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "NAMESPACE",
    "memberof": "src/Profile.js",
    "longname": "src/Profile.js~NAMESPACE",
    "access": null,
    "export": false,
    "importPath": "groundwork.js/src/Profile.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 165,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "ENDPOINT_PROFILE",
    "memberof": "src/Profile.js",
    "longname": "src/Profile.js~ENDPOINT_PROFILE",
    "access": null,
    "export": false,
    "importPath": "groundwork.js/src/Profile.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 166,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "ENDPOINT_PASSWORD_RESET",
    "memberof": "src/Profile.js",
    "longname": "src/Profile.js~ENDPOINT_PASSWORD_RESET",
    "access": null,
    "export": false,
    "importPath": "groundwork.js/src/Profile.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 167,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Profile",
    "memberof": "src/Profile.js",
    "longname": "src/Profile.js~Profile",
    "access": null,
    "export": true,
    "importPath": "groundwork.js/src/Profile.js",
    "importStyle": "Profile",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 168,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/Profile.js~Profile",
    "longname": "src/Profile.js~Profile#constructor",
    "access": null,
    "description": "",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "Dictionary"
        ],
        "spread": false,
        "optional": true,
        "name": "config",
        "description": "configuration dictionary"
      },
      {
        "nullable": null,
        "types": [
          "Http"
        ],
        "spread": false,
        "optional": false,
        "name": "http",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 169,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "config",
    "memberof": "src/Profile.js~Profile",
    "longname": "src/Profile.js~Profile#config",
    "access": null,
    "description": null,
    "lineNumber": 25,
    "type": {
      "nullable": null,
      "types": [
        "Dictionary"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 170,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "http",
    "memberof": "src/Profile.js~Profile",
    "longname": "src/Profile.js~Profile#http",
    "access": null,
    "description": null,
    "lineNumber": 34,
    "type": {
      "nullable": null,
      "types": [
        "Http"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 171,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "schema",
    "memberof": "src/Profile.js~Profile",
    "longname": "src/Profile.js~Profile#schema",
    "access": null,
    "description": null,
    "lineNumber": 37,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 172,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "schemaUtils",
    "memberof": "src/Profile.js~Profile",
    "longname": "src/Profile.js~Profile#schemaUtils",
    "access": null,
    "description": null,
    "lineNumber": 40,
    "type": {
      "nullable": null,
      "types": [
        "SchemaUtils"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 173,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "validateProfile",
    "memberof": "src/Profile.js~Profile",
    "longname": "src/Profile.js~Profile#validateProfile",
    "access": null,
    "description": "Validate payload object and return object with validation status and any\nerrors that crop up",
    "examples": [
      "\nvalidateProfile({foo: 1, source: 'foo', email: 'bar'});\n// => { valid: false, fields: ['email'], msg: ['Invalid email address']}\n\n\nvalidateProfile({source: 'foo', email: 'bar@baz.biz'});\n// => { valid: true, fields: [], msg: [] }"
    ],
    "lineNumber": 60,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "profile",
        "description": "profile object"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "this.schema",
        "defaultRaw": "this.schema",
        "name": "_schema",
        "description": "JSON schema for profile"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 174,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "fetch",
    "memberof": "src/Profile.js~Profile",
    "longname": "src/Profile.js~Profile#fetch",
    "access": null,
    "description": "Fetch a single Profile object",
    "lineNumber": 81,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "gwid",
        "description": "profile gwid"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 175,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "create",
    "memberof": "src/Profile.js~Profile",
    "longname": "src/Profile.js~Profile#create",
    "access": null,
    "description": "POST a Profile record to the API\n\nThe passed in form object will be validated. If it fails, a mock response\nwith any errors will be sent back in a rejected Promise. This is to present\nthe least amount of surprise to the developer.",
    "examples": [
      "// validation fail\nprofile.create({}).catch((err) => console.log(err));\n// => { status: 400, data: { error: { valid: false, ... } } ... }"
    ],
    "lineNumber": 101,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "profile",
        "description": "profile object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 176,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "update",
    "memberof": "src/Profile.js~Profile",
    "longname": "src/Profile.js~Profile#update",
    "access": null,
    "description": "PUT a Profile record to the API\n\nThe passed in form object will be validated. If it fails, a mock response\nwith any errors will be sent back in a rejected Promise. This is to present\nthe least amount of surprise to the developer.",
    "examples": [
      "// validation fail\nprofile.update({}).catch((err) => console.log(err));\n// => { status: 400, data: { error: { valid: false, ... } } ... }"
    ],
    "lineNumber": 126,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "gwid",
        "description": "gwid of profile to update"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "profile",
        "description": "fields to update"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 177,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "requestResetToken",
    "memberof": "src/Profile.js~Profile",
    "longname": "src/Profile.js~Profile#requestResetToken",
    "access": null,
    "description": "Trigger a password reset for an email\n\nEmail will be sent to the requested address with a reset link containing\na token",
    "lineNumber": 146,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "email",
        "description": "profile email"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 178,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "resetPassword",
    "memberof": "src/Profile.js~Profile",
    "longname": "src/Profile.js~Profile#resetPassword",
    "access": null,
    "description": "PUT the new password and token to the API",
    "lineNumber": 158,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "token",
        "description": "reset token"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "password",
        "description": "new password"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 179,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/Quickcard.js",
    "memberof": null,
    "longname": "src/Quickcard.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import Payment from './Payment';\nimport schema from './schema/quickcard';\nimport schemaPay from './schema/quickcardPay';\nimport { urlJoin, has, only, epoch, max } from './utils';\n\n/** @type {String} - API endpoint for resource */\nconst ENDPOINT_QUICKCARD = 'quickcards';\n\n/**\n * Create and view quickcards\n *\n * list(opts) - get a filtered list of quickcards\n * create(quickcard) - create a new quickcard\n * fetch(id) - fetch a quickcard object\n *\n */\nexport default class Quickcard extends Payment {\n  /**\n   * Fetch a collection of Quickcard objects for a specific gwid. We try\n   * to enforce the inclusion of a gwid if one is present in CONFIG_AUTH\n   *\n   * @param {Object} opts\n   * @param {String} opts.gwid - gwid is required\n   * @param {String} [opts.email] - filter on email\n   * @param {Number} [opts.page] - page number\n   * @param {Number} [opts.perPage] - quickcards per page\n   * @return {Promise}\n   */\n  list(opts = {}) {\n    const params = only(['gwid', 'email', 'page', 'perPage'],\n                     this.attachIdentity(opts));\n\n    // Allow opts to Override the gwid from config\n    if (has(opts, 'gwid')) { params.gwid = opts.gwid; }\n\n    // Max 50 p/page\n    if (has(opts, 'perPage')) { params.perPage = max(opts.perPage); }\n\n    // Failsafe to force gwid property into place no matter what\n    if (!has(params, 'gwid')) { params.gwid = undefined; }\n\n    const url = urlJoin(this.namespace, ENDPOINT_QUICKCARD);\n    return this.fetchCollection(url, params);\n  }\n\n  /**\n   * Fetch a list of all donations made for a quickcard\n   *\n   * @param {String} id - quickcard id\n   * @return {Promise}\n   */\n  listDonations(id = '') {\n    // Must have an id\n    const [idv, idp] = this.validateId(id);\n    if (!idv) { return idp; }\n\n    const url = urlJoin(this.namespace, ENDPOINT_QUICKCARD, id, 'donations');\n    return this.fetchCollection(url);\n  }\n\n  /**\n   * Fetch a single Quickcard object\n   *\n   * @param {String} id - quickcard id\n   * @return {Promise}\n   */\n  fetch(id = '') {\n    // Must have an id\n    const [idv, idp] = this.validateId(id);\n    if (!idv) { return idp; }\n\n    const url = urlJoin(this.namespace, ENDPOINT_QUICKCARD, id);\n    return this.fetchCollection(url);\n  }\n\n  /**\n   * POST a quickcard record to the API\n   *\n   * User must be authed / have a gwid\n   *\n   * The passed in form object will be validated. If it fails, a mock response\n   * with any errors will be sent back in a rejected Promise. This is to present\n   * the least amount of surprise to the developer.\n   *\n   * Note: All of the values in the object passed to the method should have had\n   * their types coerced already or validation will fail.\n   *\n   * @example\n   * // validation fail\n   * donation.create({}).catch((err) => console.log(err));\n   * // => { status: 400, data: { error: { valid: false, ... } } ... }\n   *\n   * @param {Object} [quickcard]\n   * @return {Promise}\n   */\n  create(quickcard = {}) {\n    const _quickcard = this.attachIdentity(quickcard);\n    const checkQuickcard = this.validatePayment(_quickcard, schema);\n\n    // Return a mock error response with validation errors\n    if (checkQuickcard.valid === false) {\n      const response = this.http.generateErrorResponse(checkQuickcard);\n      return Promise.reject(response);\n    }\n\n    const url = urlJoin(this.namespace, ENDPOINT_QUICKCARD);\n    return this.http.post(url, _quickcard);\n  }\n\n  /**\n   * Delete (cancel) a quickcard\n   *\n   * Note: Quickcards can be cancelled on a date in the future by passing\n   * additional arguments.\n   *\n   * @example\n   * // Cancel quickcard abc123 today\n   * del('abc123');\n   *\n   * // Set a cancellation date of Oct 13, 2015 for quickcard abc123\n   * del('abc123', 2015, 10, 13)\n   *\n   * @param {String} id - quickcard id\n   * @param {...time<number>} [time] - year, month, day for a specific epoch\n   * @return {Promise}\n   */\n  del(id = '', ...time) {\n    const date = epoch.apply(null, time);\n\n    // Must have an id\n    const [idv, idp] = this.validateId(id);\n    if (!idv) { return idp; }\n\n    const url = urlJoin(this.namespace, ENDPOINT_QUICKCARD, id);\n    return this.http.put(url, { deleted: date });\n  }\n\n  /**\n   * Make a Quick Donate Payment - The Quick Donate endpoint can only be used if\n   * two conditions are met. First, the request needs to come from an\n   * authenticated user. Second, that authenticated user must have a stored and\n   * active Card object.\n   *\n   * @param {String} id - QuickCard id\n   * @param {Object} payment - payment object for QuickCard\n   * @return {Promise}\n   */\n  pay(id, payment = {}) {\n    // Must have an id\n    const [idv, idp] = this.validateId(id);\n    if (!idv) { return idp; }\n\n    const _payment = this.attachIdentity(payment);\n\n    // Validate payment and reject if errors\n    const [pv, pp] = this.validateSchema(_payment, schemaPay);\n    if (!pv) { return pp; }\n\n    const url = urlJoin(this.namespace,\n                        ENDPOINT_QUICKCARD,\n                        id,\n                        'donations');\n\n    return this.http.post(url, _payment);\n  }\n}\n"
  },
  {
    "__docId__": 180,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "ENDPOINT_QUICKCARD",
    "memberof": "src/Quickcard.js",
    "longname": "src/Quickcard.js~ENDPOINT_QUICKCARD",
    "access": null,
    "export": false,
    "importPath": "groundwork.js/src/Quickcard.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 181,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Quickcard",
    "memberof": "src/Quickcard.js",
    "longname": "src/Quickcard.js~Quickcard",
    "access": null,
    "export": true,
    "importPath": "groundwork.js/src/Quickcard.js",
    "importStyle": "Quickcard",
    "description": "Create and view quickcards\n\nlist(opts) - get a filtered list of quickcards\ncreate(quickcard) - create a new quickcard\nfetch(id) - fetch a quickcard object",
    "lineNumber": 17,
    "interface": false,
    "extends": [
      "src/Payment.js~Payment"
    ]
  },
  {
    "__docId__": 182,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "list",
    "memberof": "src/Quickcard.js~Quickcard",
    "longname": "src/Quickcard.js~Quickcard#list",
    "access": null,
    "description": "Fetch a collection of Quickcard objects for a specific gwid. We try\nto enforce the inclusion of a gwid if one is present in CONFIG_AUTH",
    "lineNumber": 29,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.gwid",
        "description": "gwid is required"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "opts.email",
        "description": "filter on email"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "opts.page",
        "description": "page number"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "opts.perPage",
        "description": "quickcards per page"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 183,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "listDonations",
    "memberof": "src/Quickcard.js~Quickcard",
    "longname": "src/Quickcard.js~Quickcard#listDonations",
    "access": null,
    "description": "Fetch a list of all donations made for a quickcard",
    "lineNumber": 52,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "quickcard id"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 184,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "fetch",
    "memberof": "src/Quickcard.js~Quickcard",
    "longname": "src/Quickcard.js~Quickcard#fetch",
    "access": null,
    "description": "Fetch a single Quickcard object",
    "lineNumber": 67,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "quickcard id"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 185,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "create",
    "memberof": "src/Quickcard.js~Quickcard",
    "longname": "src/Quickcard.js~Quickcard#create",
    "access": null,
    "description": "POST a quickcard record to the API\n\nUser must be authed / have a gwid\n\nThe passed in form object will be validated. If it fails, a mock response\nwith any errors will be sent back in a rejected Promise. This is to present\nthe least amount of surprise to the developer.\n\nNote: All of the values in the object passed to the method should have had\ntheir types coerced already or validation will fail.",
    "examples": [
      "// validation fail\ndonation.create({}).catch((err) => console.log(err));\n// => { status: 400, data: { error: { valid: false, ... } } ... }"
    ],
    "lineNumber": 96,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "quickcard",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 186,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "del",
    "memberof": "src/Quickcard.js~Quickcard",
    "longname": "src/Quickcard.js~Quickcard#del",
    "access": null,
    "description": "Delete (cancel) a quickcard\n\nNote: Quickcards can be cancelled on a date in the future by passing\nadditional arguments.",
    "examples": [
      "// Cancel quickcard abc123 today\ndel('abc123');\n\n// Set a cancellation date of Oct 13, 2015 for quickcard abc123\ndel('abc123', 2015, 10, 13)"
    ],
    "lineNumber": 127,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "quickcard id"
      },
      {
        "nullable": null,
        "types": [
          "...time<number>"
        ],
        "spread": true,
        "optional": true,
        "name": "time",
        "description": "year, month, day for a specific epoch"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 187,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "pay",
    "memberof": "src/Quickcard.js~Quickcard",
    "longname": "src/Quickcard.js~Quickcard#pay",
    "access": null,
    "description": "Make a Quick Donate Payment - The Quick Donate endpoint can only be used if\ntwo conditions are met. First, the request needs to come from an\nauthenticated user. Second, that authenticated user must have a stored and\nactive Card object.",
    "lineNumber": 148,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "QuickCard id"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "payment",
        "description": "payment object for QuickCard"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 188,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/SchemaUtils.js",
    "memberof": null,
    "longname": "src/SchemaUtils.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import tv4 from 'tv4';\n\n/**\n * JSON Schema functions\n */\nexport default class SchemaUtils {\n  /**\n   * Validate the payment object with JSON-Schema\n   *\n   * Look at /schema/donation.js to see the required fields for a donation\n   * object.\n   *\n   * @param {Object} target - object to validate\n   * @param {Object} [schema] - JSON schema object\n   * @return {Array<object>}\n   */\n  static validateSchema(target, schema) {\n    let ret = [];\n    const validate = tv4.validateMultiple(target, schema);\n\n    if (!validate.valid) {\n      ret = validate.errors;\n    }\n\n    return ret;\n  }\n\n  /**\n   * Find the correct field name of the invalid item based on error\n   * codes\n   *\n   * @param {Object} err - Schema Validation error object\n   * @return {String}\n   */\n  static extractFieldByError(err) {\n    switch (err.code) {\n      case 0: // type error\n        return err.dataPath.replace('/', '');\n\n      case 302: // required missing\n        return err.params.key;\n\n      default: // default\n        return err.schemaPath;\n    }\n  }\n}\n"
  },
  {
    "__docId__": 189,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "SchemaUtils",
    "memberof": "src/SchemaUtils.js",
    "longname": "src/SchemaUtils.js~SchemaUtils",
    "access": null,
    "export": true,
    "importPath": "groundwork.js/src/SchemaUtils.js",
    "importStyle": "SchemaUtils",
    "description": "JSON Schema functions",
    "lineNumber": 6,
    "interface": false
  },
  {
    "__docId__": 190,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "validateSchema",
    "memberof": "src/SchemaUtils.js~SchemaUtils",
    "longname": "src/SchemaUtils.js~SchemaUtils.validateSchema",
    "access": null,
    "description": "Validate the payment object with JSON-Schema\n\nLook at /schema/donation.js to see the required fields for a donation\nobject.",
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "object to validate"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "schema",
        "description": "JSON schema object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<object>"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 191,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "extractFieldByError",
    "memberof": "src/SchemaUtils.js~SchemaUtils",
    "longname": "src/SchemaUtils.js~SchemaUtils.extractFieldByError",
    "access": null,
    "description": "Find the correct field name of the invalid item based on error\ncodes",
    "lineNumber": 35,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "err",
        "description": "Schema Validation error object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 192,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/Subscription.js",
    "memberof": null,
    "longname": "src/Subscription.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import Payment from './Payment';\nimport schema from './schema/donation';\nimport { urlJoin, has, only, epoch, max } from './utils';\n\n/** @type {String} - API endpoint for resource */\nconst ENDPOINT_SUBSCRIPTION = 'subscriptions';\n\n/**\n * Create and view subscriptions\n *\n * list(opts) - get a filtered list of subscriptions\n * create(subscription) - create a new subscription\n * fetch(id) - fetch a subscription object\n *\n */\nexport default class Subscription extends Payment {\n  /**\n   * Fetch a collection of Subscription objects for a specific gwid. We try\n   * to enforce the inclusion of a gwid if one is present in CONFIG_AUTH\n   *\n   * @param {Object} opts\n   * @param {String} opts.gwid - gwid is required\n   * @param {String} [opts.email] - filter on email\n   * @param {Number} [opts.page] - page number\n   * @param {Number} [opts.perPage] - subscriptions per page\n   * @return {Promise}\n   */\n  list(opts = {}) {\n    const params = only(['gwid', 'email', 'page', 'perPage'],\n                     this.attachIdentity(opts));\n\n    // Allow opts to override the gwid from config\n    if (has(opts, 'gwid')) { params.gwid = opts.gwid; }\n\n    // Max 50 p/page\n    if (has(opts, 'perPage')) { params.perPage = max(opts.perPage); }\n\n    // Failsafe to force gwid property into place no matter what\n    if (!has(params, 'gwid')) { params.gwid = undefined; }\n\n    const url = urlJoin(this.namespace, ENDPOINT_SUBSCRIPTION);\n    return this.fetchCollection(url, params);\n  }\n\n  /**\n   * Fetch a list of all donations made for a subscription\n   *\n   * @param {String} id - subscription id\n   * @return {Promise}\n   */\n  listDonations(id = '') {\n    // Must have an id\n    const [idv, idp] = this.validateId(id);\n    if (!idv) { return idp; }\n\n    const url = urlJoin(this.namespace, ENDPOINT_SUBSCRIPTION, id, 'donations');\n    return this.fetchCollection(url);\n  }\n\n  /**\n   * Fetch a single Subscription object\n   *\n   * @param {String} id - subscription id\n   * @return {Promise}\n   */\n  fetch(id = '') {\n    // Must have an id\n    const [idv, idp] = this.validateId(id);\n    if (!idv) { return idp; }\n\n    const url = urlJoin(this.namespace, ENDPOINT_SUBSCRIPTION, id);\n    return this.fetchCollection(url);\n  }\n\n  /**\n   * POST a subscription record to the API\n   *\n   * The passed in form object will be validated. If it fails, a mock response\n   * with any errors will be sent back in a rejected Promise. This is to present\n   * the least amount of surprise to the developer.\n   *\n   * Note: All of the values in the object passed to the method should have had\n   * their types coerced already or validation will fail.\n   *\n   * @example\n   * // validation fail\n   * supporter.create({}).catch((err) => console.log(err));\n   * // => { status: 400, data: { error: { valid: false, ... } } ... }\n   *\n   * @param {Object} [subscription]\n   * @return {Promise}\n   */\n  create(subscription = {}) {\n    // Make sure the interval is correct if its set\n    const [intervalv, intervalp] = this.validateInterval(subscription.interval);\n    if (!intervalv) { return intervalp; }\n\n    const checkSubscription = this.validatePayment(subscription, schema);\n\n    // Return a mock error response with validation errors\n    if (checkSubscription.valid === false) {\n      const response = this.http.generateErrorResponse(checkSubscription);\n      return Promise.reject(response);\n    }\n\n    const _subscription = this.attachIdentity(subscription);\n    const url = urlJoin(this.namespace, ENDPOINT_SUBSCRIPTION);\n    return this.http.post(url, _subscription);\n  }\n\n  /**\n   * Delete (cancel) a subscription\n   *\n   * Note: Subscriptions can be cancelled on a date in the future by passing\n   * additional arguments. Only Subscriptions created with a GWID can be\n   * cancelled through the API, and only the user that owns the Subscription\n   * can cancel it.\n   *\n   * @example\n   * // Cancel subscription abc123 today\n   * del('abc123');\n   *\n   * // Set a cancellation date of Oct 13, 2015 for subscription abc123\n   * del('abc123', 2015, 10, 13)\n   *\n   * @param {String} id - subscription id\n   * @param {...time<number>} [time] - year, month, day for a specific epoch\n   * @return {Promise}\n   */\n  del(id = '', ...time) {\n    // Must have an id\n    const [idv, idp] = this.validateId(id);\n    if (!idv) { return idp; }\n\n    const date = epoch.apply(null, time);\n    const url = urlJoin(this.namespace, ENDPOINT_SUBSCRIPTION, id);\n    return this.http.put(url, { cancelled: date });\n  }\n\n  /**\n   * Update the amount of a subscription. Return error of the amount is not set.\n   *\n   * @param {String} id - subscription id\n   * @param {Number} amount - new amount of subscription\n   * @return {Promise}\n   */\n  updateAmount(id, amount) {\n    // Must have an id\n    const newAmount = Number(amount);\n    const [idv, idp] = this.validateId(id);\n    if (!idv) { return idp; }\n\n    const [amountv, amountp] = this.validateArg(amount, 'amount');\n    if (!amountv) { return amountp; }\n\n    const url = urlJoin(this.namespace, ENDPOINT_SUBSCRIPTION, id);\n    return this.http.put(url, { amount: newAmount });\n  }\n}\n"
  },
  {
    "__docId__": 193,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "ENDPOINT_SUBSCRIPTION",
    "memberof": "src/Subscription.js",
    "longname": "src/Subscription.js~ENDPOINT_SUBSCRIPTION",
    "access": null,
    "export": false,
    "importPath": "groundwork.js/src/Subscription.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 194,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Subscription",
    "memberof": "src/Subscription.js",
    "longname": "src/Subscription.js~Subscription",
    "access": null,
    "export": true,
    "importPath": "groundwork.js/src/Subscription.js",
    "importStyle": "Subscription",
    "description": "Create and view subscriptions\n\nlist(opts) - get a filtered list of subscriptions\ncreate(subscription) - create a new subscription\nfetch(id) - fetch a subscription object",
    "lineNumber": 16,
    "interface": false,
    "extends": [
      "src/Payment.js~Payment"
    ]
  },
  {
    "__docId__": 195,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "list",
    "memberof": "src/Subscription.js~Subscription",
    "longname": "src/Subscription.js~Subscription#list",
    "access": null,
    "description": "Fetch a collection of Subscription objects for a specific gwid. We try\nto enforce the inclusion of a gwid if one is present in CONFIG_AUTH",
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "opts.gwid",
        "description": "gwid is required"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "opts.email",
        "description": "filter on email"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "opts.page",
        "description": "page number"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "opts.perPage",
        "description": "subscriptions per page"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 196,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "listDonations",
    "memberof": "src/Subscription.js~Subscription",
    "longname": "src/Subscription.js~Subscription#listDonations",
    "access": null,
    "description": "Fetch a list of all donations made for a subscription",
    "lineNumber": 51,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "subscription id"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 197,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "fetch",
    "memberof": "src/Subscription.js~Subscription",
    "longname": "src/Subscription.js~Subscription#fetch",
    "access": null,
    "description": "Fetch a single Subscription object",
    "lineNumber": 66,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "subscription id"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 198,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "create",
    "memberof": "src/Subscription.js~Subscription",
    "longname": "src/Subscription.js~Subscription#create",
    "access": null,
    "description": "POST a subscription record to the API\n\nThe passed in form object will be validated. If it fails, a mock response\nwith any errors will be sent back in a rejected Promise. This is to present\nthe least amount of surprise to the developer.\n\nNote: All of the values in the object passed to the method should have had\ntheir types coerced already or validation will fail.",
    "examples": [
      "// validation fail\nsupporter.create({}).catch((err) => console.log(err));\n// => { status: 400, data: { error: { valid: false, ... } } ... }"
    ],
    "lineNumber": 93,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "subscription",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 199,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "del",
    "memberof": "src/Subscription.js~Subscription",
    "longname": "src/Subscription.js~Subscription#del",
    "access": null,
    "description": "Delete (cancel) a subscription\n\nNote: Subscriptions can be cancelled on a date in the future by passing\nadditional arguments. Only Subscriptions created with a GWID can be\ncancelled through the API, and only the user that owns the Subscription\ncan cancel it.",
    "examples": [
      "// Cancel subscription abc123 today\ndel('abc123');\n\n// Set a cancellation date of Oct 13, 2015 for subscription abc123\ndel('abc123', 2015, 10, 13)"
    ],
    "lineNumber": 130,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "subscription id"
      },
      {
        "nullable": null,
        "types": [
          "...time<number>"
        ],
        "spread": true,
        "optional": true,
        "name": "time",
        "description": "year, month, day for a specific epoch"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 200,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "updateAmount",
    "memberof": "src/Subscription.js~Subscription",
    "longname": "src/Subscription.js~Subscription#updateAmount",
    "access": null,
    "description": "Update the amount of a subscription. Return error of the amount is not set.",
    "lineNumber": 147,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "subscription id"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "amount",
        "description": "new amount of subscription"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 201,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/Supporter.js",
    "memberof": null,
    "longname": "src/Supporter.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import Http from './Http';\nimport Dictionary from './Dictionary';\nimport SchemaUtils from './SchemaUtils';\nimport { urlJoin, only } from './utils';\n\nimport schema from './schema/supporter';\n\n/** @type {String} - Top level endpoint */\nconst NAMESPACE = 'bucket';\n\n/** @type {String} - API endpoints for resource */\nconst ENDPOINT_SUPPORTERS = 'supporters';\n\n/**\n * Manage Supporter endpoint. Supporter POSTs are validated before a request\n * is made to the API.\n */\nexport default class Supporter {\n  /**\n   * @param {Dictionary} [config] - configuration dictionary\n   * @param {Http} http\n   */\n  constructor(config, http) {\n    /** @type {Dictionary} */\n    this.config = (config && config instanceof Dictionary) ?\n      config : new Dictionary();\n\n    // Resource must have an Http instance\n    if (!http || http instanceof Http === false) {\n      throw new Error('Supporter requires Http');\n    }\n\n    /** @type {Http} */\n    this.http = http;\n\n    /** @type {Object} */\n    this.schema = schema;\n\n    /** @type {SchemaUtils} */\n    this.schemaUtils = SchemaUtils;\n  }\n\n  /**\n   * Validate payload object and return object with validation status and any\n   * errors that crop up\n   *\n   * @example\n   *\n   * validateForm({foo: 1, source: 'foo', email: 'bar'});\n   * // => { valid: false, fields: ['email'], msg: ['Invalid email address']}\n   *\n   *\n   * validateForm({source: 'foo', email: 'bar@baz.biz'});\n   * // => { valid: true, fields: [], msg: [] }\n   *\n   * @param {Object} form\n   * @return {Object}\n   */\n  validateForm(form = {}) {\n    let out = [true];\n    const valid = this.schemaUtils.validateSchema(form, this.schema);\n\n    if (valid.length > 0) {\n      const ret = this.http.generateErrorObject();\n      valid.forEach((err) => {\n        ret.msg.push(err.message);\n        ret.fields.push(this.schemaUtils.extractFieldByError(err));\n      });\n      out = [false, Promise.reject(this.http.generateErrorResponse(ret))];\n    }\n    return out;\n  }\n\n  /**\n   * POST a supporter record to the API\n   *\n   * The passed in form object will be validated. If it fails, a mock response\n   * with any errors will be sent back in a rejected Promise. This is to present\n   * the least amount of surprise to the developer.\n   *\n   * @example\n   * // validation fail\n   * supporter.create({}).catch((err) => console.log(err));\n   * // => { status: 400, data: { error: { valid: false, ... } } ... }\n   *\n   * @param {Object} form\n   * @return {Promise}\n   */\n  create(form = {}) {\n    // Return a mock error response with validation errors\n    const [cf, cp] = this.validateForm(form);\n    if (!cf) { return cp; }\n\n    const url = urlJoin(NAMESPACE);\n    return this.http.post(url, form);\n  }\n\n  /**\n   * Fetch a collection of Supporter objects.\n   * Pagination information can be sent as well. Opts are whitelisted\n   * to only the fields listed.\n   *\n   * @param {Object} opts\n   * @param {Number} [opts.page] - page number\n   * @param {Number} [opts.perPage] - donations per page\n   * @return {Promise}\n   */\n  list(opts = {}) {\n    const _opts = only(['page', 'perPage'], opts);\n    return this.http.get(urlJoin(NAMESPACE, ENDPOINT_SUPPORTERS),\n                         { params: _opts });\n  }\n}\n"
  },
  {
    "__docId__": 202,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "NAMESPACE",
    "memberof": "src/Supporter.js",
    "longname": "src/Supporter.js~NAMESPACE",
    "access": null,
    "export": false,
    "importPath": "groundwork.js/src/Supporter.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 203,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "ENDPOINT_SUPPORTERS",
    "memberof": "src/Supporter.js",
    "longname": "src/Supporter.js~ENDPOINT_SUPPORTERS",
    "access": null,
    "export": false,
    "importPath": "groundwork.js/src/Supporter.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 204,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Supporter",
    "memberof": "src/Supporter.js",
    "longname": "src/Supporter.js~Supporter",
    "access": null,
    "export": true,
    "importPath": "groundwork.js/src/Supporter.js",
    "importStyle": "Supporter",
    "description": "Manage Supporter endpoint. Supporter POSTs are validated before a request\nis made to the API.",
    "lineNumber": 18,
    "interface": false
  },
  {
    "__docId__": 205,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/Supporter.js~Supporter",
    "longname": "src/Supporter.js~Supporter#constructor",
    "access": null,
    "description": "",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "Dictionary"
        ],
        "spread": false,
        "optional": true,
        "name": "config",
        "description": "configuration dictionary"
      },
      {
        "nullable": null,
        "types": [
          "Http"
        ],
        "spread": false,
        "optional": false,
        "name": "http",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 206,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "config",
    "memberof": "src/Supporter.js~Supporter",
    "longname": "src/Supporter.js~Supporter#config",
    "access": null,
    "description": null,
    "lineNumber": 25,
    "type": {
      "nullable": null,
      "types": [
        "Dictionary"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 207,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "http",
    "memberof": "src/Supporter.js~Supporter",
    "longname": "src/Supporter.js~Supporter#http",
    "access": null,
    "description": null,
    "lineNumber": 34,
    "type": {
      "nullable": null,
      "types": [
        "Http"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 208,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "schema",
    "memberof": "src/Supporter.js~Supporter",
    "longname": "src/Supporter.js~Supporter#schema",
    "access": null,
    "description": null,
    "lineNumber": 37,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 209,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "schemaUtils",
    "memberof": "src/Supporter.js~Supporter",
    "longname": "src/Supporter.js~Supporter#schemaUtils",
    "access": null,
    "description": null,
    "lineNumber": 40,
    "type": {
      "nullable": null,
      "types": [
        "SchemaUtils"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 210,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "validateForm",
    "memberof": "src/Supporter.js~Supporter",
    "longname": "src/Supporter.js~Supporter#validateForm",
    "access": null,
    "description": "Validate payload object and return object with validation status and any\nerrors that crop up",
    "examples": [
      "\nvalidateForm({foo: 1, source: 'foo', email: 'bar'});\n// => { valid: false, fields: ['email'], msg: ['Invalid email address']}\n\n\nvalidateForm({source: 'foo', email: 'bar@baz.biz'});\n// => { valid: true, fields: [], msg: [] }"
    ],
    "lineNumber": 59,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "form",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 211,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "create",
    "memberof": "src/Supporter.js~Supporter",
    "longname": "src/Supporter.js~Supporter#create",
    "access": null,
    "description": "POST a supporter record to the API\n\nThe passed in form object will be validated. If it fails, a mock response\nwith any errors will be sent back in a rejected Promise. This is to present\nthe least amount of surprise to the developer.",
    "examples": [
      "// validation fail\nsupporter.create({}).catch((err) => console.log(err));\n// => { status: 400, data: { error: { valid: false, ... } } ... }"
    ],
    "lineNumber": 89,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "form",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 212,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "list",
    "memberof": "src/Supporter.js~Supporter",
    "longname": "src/Supporter.js~Supporter#list",
    "access": null,
    "description": "Fetch a collection of Supporter objects.\nPagination information can be sent as well. Opts are whitelisted\nto only the fields listed.",
    "lineNumber": 108,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "opts.page",
        "description": "page number"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "opts.perPage",
        "description": "donations per page"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 213,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/constants.js",
    "memberof": null,
    "longname": "src/constants.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Constants: Mostly keys for various objects within the library\n */\n\n/**\n * Auth Key\n * @type {String}\n */\nconst AUTH_ACCESS_TOKEN = 'accessToken';\n\n/**\n * Auth Key\n * @type {String}\n */\nconst AUTH_GWID = 'gwid';\n\n/**\n * Auth Key\n * @type {String}\n */\nconst AUTH_TOKEN_TYPE = 'tokenType';\n\n/**\n * Config Key\n * @type {String}\n */\nconst API_URL = 'api_url';\n\n/**\n * Config Key\n * @type {String}\n */\nconst API_VERSION = 'api_version';\n\n/**\n * Config Key\n * @type {String}\n */\nconst CONFIG_AUTH = 'auth';\n\n/**\n * Config Key\n * @type {String}\n */\nconst FACEBOOK_APP_ID = 'facebook_app_id';\n\n/**\n * Config Key\n * @type {String}\n */\nconst OAUTH_CLIENT_ID = 'oauth_client_id';\n\n/** @type {String} */\nconst DEFAULT_API_URL = 'https://api.thegroundwork.com';\n\n/** @type {RegExp} */\nconst RE_API_VERSION = /^\\d{4}[-]\\d{2}[-]\\d{2}(:\\d+)?$/gm;\n\nexport {\n  API_URL,\n  API_VERSION,\n  AUTH_ACCESS_TOKEN,\n  AUTH_GWID,\n  AUTH_TOKEN_TYPE,\n  CONFIG_AUTH,\n  DEFAULT_API_URL,\n  FACEBOOK_APP_ID,\n  OAUTH_CLIENT_ID,\n  RE_API_VERSION\n};\n"
  },
  {
    "__docId__": 214,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "API_URL",
    "memberof": "src/constants.js",
    "longname": "src/constants.js~API_URL",
    "access": null,
    "export": true,
    "importPath": "groundwork.js/src/constants.js",
    "importStyle": "{API_URL}",
    "description": "Config Key",
    "lineNumber": 27,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 215,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "API_VERSION",
    "memberof": "src/constants.js",
    "longname": "src/constants.js~API_VERSION",
    "access": null,
    "export": true,
    "importPath": "groundwork.js/src/constants.js",
    "importStyle": "{API_VERSION}",
    "description": "Config Key",
    "lineNumber": 33,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 216,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "AUTH_ACCESS_TOKEN",
    "memberof": "src/constants.js",
    "longname": "src/constants.js~AUTH_ACCESS_TOKEN",
    "access": null,
    "export": true,
    "importPath": "groundwork.js/src/constants.js",
    "importStyle": "{AUTH_ACCESS_TOKEN}",
    "description": "Auth Key",
    "lineNumber": 9,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 217,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "AUTH_GWID",
    "memberof": "src/constants.js",
    "longname": "src/constants.js~AUTH_GWID",
    "access": null,
    "export": true,
    "importPath": "groundwork.js/src/constants.js",
    "importStyle": "{AUTH_GWID}",
    "description": "Auth Key",
    "lineNumber": 15,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 218,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "AUTH_TOKEN_TYPE",
    "memberof": "src/constants.js",
    "longname": "src/constants.js~AUTH_TOKEN_TYPE",
    "access": null,
    "export": true,
    "importPath": "groundwork.js/src/constants.js",
    "importStyle": "{AUTH_TOKEN_TYPE}",
    "description": "Auth Key",
    "lineNumber": 21,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 219,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "CONFIG_AUTH",
    "memberof": "src/constants.js",
    "longname": "src/constants.js~CONFIG_AUTH",
    "access": null,
    "export": true,
    "importPath": "groundwork.js/src/constants.js",
    "importStyle": "{CONFIG_AUTH}",
    "description": "Config Key",
    "lineNumber": 39,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 220,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "DEFAULT_API_URL",
    "memberof": "src/constants.js",
    "longname": "src/constants.js~DEFAULT_API_URL",
    "access": null,
    "export": true,
    "importPath": "groundwork.js/src/constants.js",
    "importStyle": "{DEFAULT_API_URL}",
    "description": null,
    "lineNumber": 54,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 221,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "FACEBOOK_APP_ID",
    "memberof": "src/constants.js",
    "longname": "src/constants.js~FACEBOOK_APP_ID",
    "access": null,
    "export": true,
    "importPath": "groundwork.js/src/constants.js",
    "importStyle": "{FACEBOOK_APP_ID}",
    "description": "Config Key",
    "lineNumber": 45,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 222,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "OAUTH_CLIENT_ID",
    "memberof": "src/constants.js",
    "longname": "src/constants.js~OAUTH_CLIENT_ID",
    "access": null,
    "export": true,
    "importPath": "groundwork.js/src/constants.js",
    "importStyle": "{OAUTH_CLIENT_ID}",
    "description": "Config Key",
    "lineNumber": 51,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 223,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "RE_API_VERSION",
    "memberof": "src/constants.js",
    "longname": "src/constants.js~RE_API_VERSION",
    "access": null,
    "export": true,
    "importPath": "groundwork.js/src/constants.js",
    "importStyle": "{RE_API_VERSION}",
    "description": null,
    "lineNumber": 57,
    "type": {
      "nullable": null,
      "types": [
        "RegExp"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 224,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/index.js",
    "memberof": null,
    "longname": "src/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/*global module */\n\nimport Groundwork from './Groundwork';\nmodule.exports = Groundwork;\n"
  },
  {
    "__docId__": 225,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/schema/donation.js",
    "memberof": null,
    "longname": "src/schema/donation.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/*eslint-disable quote-props */\n\nexport default Object.freeze({\n  '$schema': 'http://json-schema.org/draft-04/schema#',\n  'id': '/',\n  'type': 'object',\n  'properties': {\n    'gwid': {\n      'id': 'gwid',\n      'type': 'string'\n    },\n    'emailTemplate': {\n      'id': 'emailTemplate',\n      'type': 'string'\n    },\n    'raiser': {\n      'id': 'raiser',\n      'type': 'string'\n    },\n    'amount': {\n      'id': 'amount',\n      'type': 'integer'\n    },\n    'currency': {\n      'id': 'currency',\n      'type': 'string'\n    },\n    'givenName': {\n      'id': 'givenName',\n      'type': 'string'\n    },\n    'familyName': {\n      'id': 'familyName',\n      'type': 'string'\n    },\n    'address1': {\n      'id': 'address1',\n      'type': 'string'\n    },\n    'address2': {\n      'id': 'address2',\n      'type': 'string'\n    },\n    'city': {\n      'id': 'city',\n      'type': 'string'\n    },\n    'state': {\n      'id': 'state',\n      'type': 'string'\n    },\n    'zip': {\n      'id': 'zip',\n      'type': 'string'\n    },\n    'country': {\n      'id': 'country',\n      'type': 'string'\n    },\n    'passport': {\n      'id': 'passport',\n      'type': 'string'\n    },\n    'email': {\n      'id': 'email',\n      'type': 'string'\n    },\n    'phone': {\n      'id': 'phone',\n      'type': 'string'\n    },\n    'employer': {\n      'id': 'employer',\n      'type': 'string'\n    },\n    'occupation': {\n      'id': 'occupation',\n      'type': 'string'\n    },\n    'ccNum': {\n      'id': 'ccNum',\n      'type': 'string'\n    },\n    'ccExpMonth': {\n      'id': 'ccExpMonth',\n      'type': 'integer'\n    },\n    'ccExpYear': {\n      'id': 'ccExpYear',\n      'type': 'integer'\n    },\n    'ccCvc': {\n      'id': 'ccCvc',\n      'type': 'string'\n    },\n    'tags': {\n      'id': 'tags',\n      'type': 'object'\n    },\n    'agreeToTerms': {\n      'id': 'agreeToTerms',\n      'type': 'boolean'\n    },\n    'source': {\n      'id': 'source',\n      'type': 'string'\n    },\n    'submittingUrl': {\n      'id': 'submittingUrl',\n      'type': 'string'\n    },\n    'paymentMethod': {\n      'id': 'paymentMethod',\n      'type': 'string'\n    }\n  },\n  'required': [\n    'address1',\n    'agreeToTerms',\n    'amount',\n    'ccCvc',\n    'ccExpMonth',\n    'ccExpYear',\n    'ccNum',\n    'city',\n    'email',\n    'employer',\n    'familyName',\n    'givenName',\n    'occupation',\n    'phone',\n    'state',\n    'zip'\n  ]\n});\n"
  },
  {
    "__docId__": 226,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/schema/event.js",
    "memberof": null,
    "longname": "src/schema/event.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/*eslint-disable quote-props, quotes */\n\nexport default Object.freeze({\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"id\": \"/\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"address1\": {\n      \"id\": \"address1\",\n      \"type\": \"string\"\n    },\n    \"address2\": {\n      \"id\": \"address2\",\n      \"type\": \"string\"\n    },\n    \"addressCity\": {\n      \"id\": \"addressCity\",\n      \"type\": \"string\"\n    },\n    \"addressCountry\": {\n      \"id\": \"addressCountry\",\n      \"type\": \"string\"\n    },\n    \"addressCounty\": {\n      \"id\": \"addressCounty\",\n      \"type\": \"string\"\n    },\n    \"addressDistrict\": {\n      \"id\": \"addressDistrict\",\n      \"type\": \"string\"\n    },\n    \"addressPostalCode\": {\n      \"id\": \"addressPostalCode\",\n      \"type\": \"string\"\n    },\n    \"addressStateOrProvince\": {\n      \"id\": \"addressStateOrProvince\",\n      \"type\": \"string\"\n    },\n    \"description\": {\n      \"id\": \"description\",\n      \"type\": \"string\"\n    },\n    \"locationName\": {\n      \"id\": \"locationName\",\n      \"type\": \"string\"\n    },\n    \"timeEnd\": {\n      \"id\": \"timeEnd\",\n      \"type\": \"string\"\n    },\n    \"timeStart\": {\n      \"id\": \"timeStart\",\n      \"type\": \"string\"\n    },\n    \"title\": {\n      \"id\": \"title\",\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"address1\",\n    \"addressCity\",\n    \"addressCountry\",\n    \"addressPostalCode\",\n    \"description\",\n    \"timeEnd\",\n    \"timeStart\",\n    \"title\"\n  ]\n});\n"
  },
  {
    "__docId__": 227,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/schema/eventCategory.js",
    "memberof": null,
    "longname": "src/schema/eventCategory.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/*eslint-disable quote-props, quotes */\n\nexport default Object.freeze({\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"id\": \"/\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"description\": {\n      \"id\": \"description\",\n      \"type\": \"string\"\n    },\n    \"quantityTotal\": {\n      \"id\": \"quantityTotal\",\n      \"type\": \"integer\"\n    },\n    \"timeEnd\": {\n      \"id\": \"timeEnd\",\n      \"type\": \"string\"\n    },\n    \"timeStart\": {\n      \"id\": \"timeStart\",\n      \"type\": \"string\"\n    },\n    \"title\": {\n      \"id\": \"title\",\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"quantityTotal\",\n    \"timeEnd\",\n    \"timeStart\"\n  ]\n});\n"
  },
  {
    "__docId__": 228,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/schema/eventInvitation.js",
    "memberof": null,
    "longname": "src/schema/eventInvitation.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/*eslint-disable quote-props, quotes */\n\nexport default Object.freeze({\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"id\": \"/\",\n  \"type\": \"array\",\n  \"items\": {\n    \"id\": \"0\",\n    \"type\": \"object\",\n    \"properties\": {\n      \"email\": {\n        \"id\": \"email\",\n        \"type\": \"string\"\n      },\n      \"familyName\": {\n        \"id\": \"familyName\",\n        \"type\": \"string\"\n      },\n      \"givenName\": {\n        \"id\": \"givenName\",\n        \"type\": \"string\"\n      },\n      \"message\": {\n        \"id\": \"message\",\n        \"type\": \"string\"\n      },\n      \"subject\": {\n        \"id\": \"subject\",\n        \"type\": \"string\"\n      }\n    },\n    \"required\": [\n      \"email\"\n    ]\n  },\n  \"required\": [\n    \"0\"\n  ]\n});\n"
  },
  {
    "__docId__": 229,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/schema/eventMessage.js",
    "memberof": null,
    "longname": "src/schema/eventMessage.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/*eslint-disable quote-props, quotes */\n\nexport default Object.freeze({\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"message\": {\n      \"type\": \"string\",\n      \"id\": \"message\"\n    },\n    \"recipientTypes\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"id\": \"recipientTypes\"\n    },\n    \"subject\": {\n      \"type\": \"string\",\n      \"id\": \"subject\"\n    },\n    \"template\": {\n      \"type\": \"string\",\n      \"id\": \"template\"\n    },\n    \"title\": {\n      \"type\": \"string\",\n      \"id\": \"title\"\n    }\n  },\n  \"id\": \"/\",\n  \"required\": [\n    \"recipientTypes\",\n    \"template\"\n  ]\n});\n"
  },
  {
    "__docId__": 230,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/schema/eventTicket.js",
    "memberof": null,
    "longname": "src/schema/eventTicket.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/*eslint-disable quote-props, quotes */\n\nexport default Object.freeze({\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"id\": \"/\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"attendeeGwid\": {\n      \"id\": \"attendeeGwid\",\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"attendeeGwid\"\n  ]\n});\n"
  },
  {
    "__docId__": 231,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/schema/profile.js",
    "memberof": null,
    "longname": "src/schema/profile.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/*eslint-disable quote-props */\n\nexport default Object.freeze({\n  '$schema': 'http://json-schema.org/draft-04/schema#',\n  'id': '/',\n  'type': 'object',\n  'properties': {\n    'gwid': {\n      'id': 'gwid',\n      'type': 'string'\n    },\n    'email': {\n      'id': 'email',\n      'type': 'string'\n    },\n    'isStaff': {\n      'id': 'isStaff',\n      'type': 'boolean'\n    },\n    'isActive': {\n      'id': 'isActive',\n      'type': 'boolean'\n    },\n    'dateJoined': {\n      'id': 'dateJoined',\n      'type': 'string',\n      'format': 'date-time'\n    },\n    'dateModified': {\n      'id': 'dateModified',\n      'type': 'string',\n      'format': 'date-time'\n    },\n    'dateOfBirth': {\n      'id': 'dateOfBirth',\n      'type': ['string', 'null'],\n      'format': 'date-time'\n    },\n    'givenName': {\n      'id': 'givenName',\n      'type': 'string'\n    },\n    'familyName': {\n      'id': 'familyName',\n      'type': 'string'\n    },\n    'honorificPrefix': {\n      'id': 'honorificPrefix',\n      'type': 'string'\n    },\n    'honorificSuffix': {\n      'id': 'honorificSuffix',\n      'type': 'string'\n    },\n    'gender': {\n      'id': 'gender',\n      'type': ['integer', 'null'],\n      'minimum': 0,\n      'maximum': 4\n    },\n    'genderIdentity': {\n      'id': 'genderIdentity',\n      'type': 'string'\n    },\n    'partyIdentification': {\n      'id': 'partyIdentification',\n      'type': ['integer', 'null'],\n      'minimum': 0,\n      'maximum': 4\n    },\n    'password': {\n      'id': 'password',\n      'type': 'string'\n    },\n    'employer': {\n      'id': 'employer',\n      'type': 'string'\n    },\n    'occupation': {\n      'id': 'occupation',\n      'type': 'string'\n    },\n    'phoneNumber': {\n      'id': 'phoneNumber',\n      'type': 'string'\n    },\n    'address1': {\n      'id': 'address1',\n      'type': 'string'\n    },\n    'address2': {\n      'id': 'address2',\n      'type': 'string'\n    },\n    'locality': {\n      'id': 'locality',\n      'type': 'string'\n    },\n    'state': {\n      'id': 'state',\n      'type': 'string'\n    },\n    'zipCode': {\n      'id': 'zipCode',\n      'type': 'string'\n    }\n  },\n  'required': [\n    'email',\n    'familyName',\n    'givenName',\n    'password'\n  ]\n});\n"
  },
  {
    "__docId__": 232,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/schema/quickcard.js",
    "memberof": null,
    "longname": "src/schema/quickcard.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/*eslint-disable quote-props */\n\nexport default Object.freeze({\n  '$schema': 'http://json-schema.org/draft-04/schema#',\n  'id': '/',\n  'type': 'object',\n  'properties': {\n    'amount': {\n      'id': 'amount',\n      'type': 'integer'\n    },\n    'currency': {\n      'id': 'currency',\n      'type': 'string'\n    },\n    'givenName': {\n      'id': 'givenName',\n      'type': 'string'\n    },\n    'gwid': {\n      'id': 'gwid',\n      'type': 'string'\n    },\n    'familyName': {\n      'id': 'familyName',\n      'type': 'string'\n    },\n    'address1': {\n      'id': 'address1',\n      'type': 'string'\n    },\n    'city': {\n      'id': 'city',\n      'type': 'string'\n    },\n    'state': {\n      'id': 'state',\n      'type': 'string'\n    },\n    'zip': {\n      'id': 'zip',\n      'type': 'string'\n    },\n    'country': {\n      'id': 'country',\n      'type': 'string'\n    },\n    'email': {\n      'id': 'email',\n      'type': 'string'\n    },\n    'phone': {\n      'id': 'phone',\n      'type': 'string'\n    },\n    'employer': {\n      'id': 'employer',\n      'type': 'string'\n    },\n    'occupation': {\n      'id': 'occupation',\n      'type': 'string'\n    },\n    'ccNum': {\n      'id': 'ccNum',\n      'type': 'string'\n    },\n    'ccExpMonth': {\n      'id': 'ccExpMonth',\n      'type': 'integer'\n    },\n    'ccExpYear': {\n      'id': 'ccExpYear',\n      'type': 'integer'\n    },\n    'ccCvc': {\n      'id': 'ccCvc',\n      'type': 'string'\n    },\n    'agreeToTerms': {\n      'id': 'agreeToTerms',\n      'type': 'boolean'\n    }\n  },\n  'required': [\n    'address1',\n    'agreeToTerms',\n    'ccCvc',\n    'ccExpMonth',\n    'ccExpYear',\n    'ccNum',\n    'city',\n    'country',\n    'email',\n    'employer',\n    'familyName',\n    'givenName',\n    'gwid',\n    'occupation',\n    'phone',\n    'state',\n    'zip'\n  ]\n});\n"
  },
  {
    "__docId__": 233,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/schema/quickcardPay.js",
    "memberof": null,
    "longname": "src/schema/quickcardPay.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/*eslint-disable quote-props */\n\nexport default Object.freeze({\n  '$schema': 'http://json-schema.org/draft-04/schema#',\n  'id': '/',\n  'type': 'object',\n  'properties': {\n    'amount': {\n      'id': 'amount',\n      'type': 'integer'\n    },\n    'currency': {\n      'id': 'currency',\n      'type': 'string'\n    },\n    'tags': {\n      'id': 'tags',\n      'type': 'object'\n    },\n    'submittingUrl': {\n      'id': 'submittingUrl',\n      'type': 'string'\n    },\n    'emailTemplate': {\n      'id': 'emailTemplate',\n      'type': 'string'\n    },\n    'gwid': {\n      'id': 'gwid',\n      'type': 'string'\n    }\n  },\n  'required': [\n    'amount',\n    'gwid'\n  ]\n});\n"
  },
  {
    "__docId__": 234,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/schema/supporter.js",
    "memberof": null,
    "longname": "src/schema/supporter.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/*eslint-disable quote-props */\n\nexport default Object.freeze({\n  '$schema': 'http://json-schema.org/draft-04/schema#',\n  'id': '/',\n  'type': 'object',\n  'properties': {\n    'address1': {\n      'id': 'address1',\n      'type': 'string'\n    },\n    'address2': {\n      'id': 'address2',\n      'type': 'string'\n    },\n    'city': {\n      'id': 'city',\n      'type': 'string'\n    },\n    'country': {\n      'id': 'country',\n      'type': 'string'\n    },\n    'email': {\n      'id': 'email',\n      'type': 'string'\n    },\n    'externalId': {\n      'id': 'externalId',\n      'type': 'string'\n    },\n    'familyName': {\n      'id': 'familyName',\n      'type': 'string'\n    },\n    'givenName': {\n      'id': 'givenName',\n      'type': 'string'\n    },\n    'postalCode': {\n      'id': 'postalCode',\n      'type': 'string'\n    },\n    'source': {\n      'id': 'source',\n      'type': 'string'\n    },\n    'state': {\n      'id': 'state',\n      'type': 'string'\n    },\n    'tags': {\n      'id': 'tags',\n      'type': 'object',\n      'properties': {}\n    }\n  },\n  'required': []\n});\n"
  },
  {
    "__docId__": 235,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/utils.js",
    "memberof": null,
    "longname": "src/utils.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/*global __LOG__ */\nimport * as constants from './constants';\n\n/**\n * Utility Functions\n */\n\n// For speed\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Normalize URL strings (handle slashes, query params, etc)\n * @param {String} [str=''] - url string to normalize\n * @return {String}\n */\nfunction normalizeUrl(str = '') {\n  return str\n    .replace(/[\\/]+/g, '/')\n    .replace(/\\/\\?/g, '?')\n    .replace(/\\/\\#/g, '#')\n    .replace(/\\:\\//g, '://');\n}\n\n/**\n * Checks if `path` is a direct property. (Courtesy of lodash)\n *\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` is a direct property, else `false`.\n * @example\n *\n * const object = { 'a': { 'b': { 'c': 3 } } };\n *\n * _.has(object, 'a');\n * // => true\n *\n * _.has(object, 'a.b.c');\n * // => true\n *\n * _.has(object, ['a', 'b', 'c']);\n * // => true\n *\n */\nfunction has(object, path) {\n  return object != null && hasOwnProperty.call(object, path); // eslint-disable-line\n}\n\n/**\n * Join an array of strings into a URL\n * @param {...url<string>} url - fragments\n * @return {String}\n */\nfunction urlJoin(...url) {\n  const joined = [].slice.call(url, 0).join('/');\n  return normalizeUrl(joined);\n}\n\n/**\n * Check to see if an Object is Empty\n *\n * @param {Object} obj\n * @return {Boolean}\n */\nfunction isEmpty(obj) {\n  // null and undefined are \"empty\"\n  if (obj == null) return true; // eslint-disable-line\n\n  // Assume if it has a length property with a non-zero value\n  // that that property is correct.\n  if (obj.length > 0) return false;\n  if (obj.length === 0) return true;\n\n  // Otherwise, does it have any properties of its own?\n  // Note that this doesn't handle\n  // toString and valueOf enumeration bugs in IE < 9\n  for (const key in obj) {\n    if (hasOwnProperty.call(obj, key)) return false;\n  }\n\n  return true;\n}\n\n/**\n * Attempt to validate an email address with a variant on RFC5322\n * @link http://tools.ietf.org/html/rfc5322#section-3.4\n * @param {String} str\n * @return {Boolean}\n */\nfunction validEmail(str) {\n  const re = new RegExp(/[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/); // eslint-disable-line\n  return re.test(str);\n}\n\n/**\n * Return an object with only the whitelisted properties\n * @param {Array<string>} whitelist - names of properties to keep\n * @param {Object} obj - object to filter\n * @return {Object} - filtered object\n */\nfunction only(whitelist = [], obj = {}) {\n  return whitelist.reduce((ret, p) => {\n    if (has(obj, p)) { ret[p] = obj[p]; } // eslint-disable-line\n    return ret;\n  }, {});\n}\n\n/**\n * Return the current DateTime in Epoch w/o milliseconds\n *\n * @example\n * epoch(); // => 1440705061 instead of 1440705061191\n * epoch(2015, 10, 13) // => 1447390800\n *\n * @param {...time<number>} time - year, month, day for a specific epoch\n * @return {Number}\n */\nfunction epoch(...time) {\n  const [year, month, day] = time;\n  const d = (time.length > 0) ? new Date(year, month, day) : new Date();\n  return Math.floor(d.getTime() / 1000);\n}\n\n/**\n * Prevent a number from passing a threshold. NaNs are converted to 0\n *\n * @param {Number} num\n * @param {Number} [maximum] - defaults to 50\n * @return {Number}\n */\nfunction max(num, maximum = 50) {\n  const [n, m] = [Number(num), Number(maximum)];\n  let r = (n > m) ? m : n;\n  if (isNaN(n)) { r = 0; }\n  return r;\n}\n\n/**\n * Log a deprecation warning in console only in DEV mode\n *\n * @example\n * const opts = {bar: 1};\n * deprecate(opts.bar, 'opts.bar is deprecated!') // 'opts.bar is deprecated'\n *\n * const foo = 1;\n * deprecate((typeof foo === String), 'String support is deprecated, given %s', foo)\n * // 'String support is deprecated, given 1'\n *\n * @param {Boolean} pred - predicate or value should be \"truthy\" or \"falsey\"\n * @param {String} format - warning message template\n * @param {...args<any>} args - values to substitue into format\n * @return {void}\n */\nfunction deprecate(pred, format, ...args) {\n  if (__LOG__ && pred) {\n    if (format === undefined) {\n      throw new Error('deprecate requires an error message');\n    }\n\n    let warning;\n    if (args.length) {\n      warning = args.reduce((prev, next) => prev.replace(/%s/g, next), format);\n    } else {\n      warning = format;\n    }\n\n    console.warn(warning); // eslint-disable-line\n  }\n}\n\n/**\n * Mixin properties from a source Class (or sources) into a target Class\n *\n * @example\n * class Foo {}\n * class Bar { hiBar() { return 'Hi from bar!'} }\n * class Baz { hiBaz() { return 'Hi from baz!'} }\n *\n * mixin(Foo, Bar, Baz);\n *\n * const foo = new Foo();\n * foo.hiBar() // => 'Hi from bar!'\n * foo.hiBaz() // => 'Hi from baz!'\n *\n * @param  {Class} target - target to merge properties into\n * @param  {...sources<Class>} sources - sources to merge properties from\n * @return {void}\n */\nfunction mixin(target, ...sources) {\n  const tp = target.prototype;\n\n  sources.forEach((source) => {\n    const sp = source.prototype;\n\n    Object.getOwnPropertyNames(sp).forEach((name) => {\n      if (name !== 'constructor') {\n        Object.defineProperty(tp, name, Object.getOwnPropertyDescriptor(sp, name));\n      }\n    });\n  });\n}\n\n/**\n * Predicate that checks the value of a string against the API Version format\n *\n * @param {String} version - should be `YYYY-MM-DD` with an optional integer\n * @return {Boolean}\n */\nfunction isApiVersion(version = '') {\n  return Boolean(String(version).match(constants.RE_API_VERSION));\n}\n\nexport {\n  deprecate,\n  epoch,\n  has,\n  isEmpty,\n  max,\n  mixin,\n  normalizeUrl,\n  only,\n  urlJoin,\n  validEmail,\n  isApiVersion\n};\n"
  },
  {
    "__docId__": 236,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "hasOwnProperty",
    "memberof": "src/utils.js",
    "longname": "src/utils.js~hasOwnProperty",
    "access": null,
    "export": false,
    "importPath": "groundwork.js/src/utils.js",
    "importStyle": null,
    "description": "Utility Functions",
    "lineNumber": 9,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 237,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "deprecate",
    "memberof": "src/utils.js",
    "longname": "src/utils.js~deprecate",
    "access": null,
    "export": true,
    "importPath": "groundwork.js/src/utils.js",
    "importStyle": "{deprecate}",
    "description": "Log a deprecation warning in console only in DEV mode",
    "examples": [
      "const opts = {bar: 1};\ndeprecate(opts.bar, 'opts.bar is deprecated!') // 'opts.bar is deprecated'\n\nconst foo = 1;\ndeprecate((typeof foo === String), 'String support is deprecated, given %s', foo)\n// 'String support is deprecated, given 1'"
    ],
    "lineNumber": 153,
    "params": [
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "pred",
        "description": "predicate or value should be \"truthy\" or \"falsey\""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "format",
        "description": "warning message template"
      },
      {
        "nullable": null,
        "types": [
          "...args<any>"
        ],
        "spread": true,
        "optional": false,
        "name": "args",
        "description": "values to substitue into format"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 238,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "epoch",
    "memberof": "src/utils.js",
    "longname": "src/utils.js~epoch",
    "access": null,
    "export": true,
    "importPath": "groundwork.js/src/utils.js",
    "importStyle": "{epoch}",
    "description": "Return the current DateTime in Epoch w/o milliseconds",
    "examples": [
      "epoch(); // => 1440705061 instead of 1440705061191\nepoch(2015, 10, 13) // => 1447390800"
    ],
    "lineNumber": 117,
    "params": [
      {
        "nullable": null,
        "types": [
          "...time<number>"
        ],
        "spread": true,
        "optional": false,
        "name": "time",
        "description": "year, month, day for a specific epoch"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 239,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "has",
    "memberof": "src/utils.js",
    "longname": "src/utils.js~has",
    "access": null,
    "export": true,
    "importPath": "groundwork.js/src/utils.js",
    "importStyle": "{has}",
    "description": "Checks if `path` is a direct property. (Courtesy of lodash)",
    "examples": [
      "\nconst object = { 'a': { 'b': { 'c': 3 } } };\n\n_.has(object, 'a');\n// => true\n\n_.has(object, 'a.b.c');\n// => true\n\n_.has(object, ['a', 'b', 'c']);\n// => true"
    ],
    "lineNumber": 44,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} Returns `true` if `path` is a direct property, else `false`."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "object",
        "description": "The object to query."
      },
      {
        "nullable": null,
        "types": [
          "Array",
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "The path to check."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "Returns `true` if `path` is a direct property, else `false`."
    },
    "generator": false
  },
  {
    "__docId__": 240,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "isEmpty",
    "memberof": "src/utils.js",
    "longname": "src/utils.js~isEmpty",
    "access": null,
    "export": true,
    "importPath": "groundwork.js/src/utils.js",
    "importStyle": "{isEmpty}",
    "description": "Check to see if an Object is Empty",
    "lineNumber": 64,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 241,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "max",
    "memberof": "src/utils.js",
    "longname": "src/utils.js~max",
    "access": null,
    "export": true,
    "importPath": "groundwork.js/src/utils.js",
    "importStyle": "{max}",
    "description": "Prevent a number from passing a threshold. NaNs are converted to 0",
    "lineNumber": 130,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "num",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "maximum",
        "description": "defaults to 50"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 242,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "mixin",
    "memberof": "src/utils.js",
    "longname": "src/utils.js~mixin",
    "access": null,
    "export": true,
    "importPath": "groundwork.js/src/utils.js",
    "importStyle": "{mixin}",
    "description": "Mixin properties from a source Class (or sources) into a target Class",
    "examples": [
      "class Foo {}\nclass Bar { hiBar() { return 'Hi from bar!'} }\nclass Baz { hiBaz() { return 'Hi from baz!'} }\n\nmixin(Foo, Bar, Baz);\n\nconst foo = new Foo();\nfoo.hiBar() // => 'Hi from bar!'\nfoo.hiBaz() // => 'Hi from baz!'"
    ],
    "lineNumber": 188,
    "params": [
      {
        "nullable": null,
        "types": [
          "Class"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "target to merge properties into"
      },
      {
        "nullable": null,
        "types": [
          "...sources<Class>"
        ],
        "spread": true,
        "optional": false,
        "name": "sources",
        "description": "sources to merge properties from"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 243,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "normalizeUrl",
    "memberof": "src/utils.js",
    "longname": "src/utils.js~normalizeUrl",
    "access": null,
    "export": true,
    "importPath": "groundwork.js/src/utils.js",
    "importStyle": "{normalizeUrl}",
    "description": "Normalize URL strings (handle slashes, query params, etc)",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "str",
        "description": "url string to normalize"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 244,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "only",
    "memberof": "src/utils.js",
    "longname": "src/utils.js~only",
    "access": null,
    "export": true,
    "importPath": "groundwork.js/src/utils.js",
    "importStyle": "{only}",
    "description": "Return an object with only the whitelisted properties",
    "lineNumber": 100,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "whitelist",
        "description": "names of properties to keep"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "object to filter"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "filtered object"
    },
    "generator": false
  },
  {
    "__docId__": 245,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "urlJoin",
    "memberof": "src/utils.js",
    "longname": "src/utils.js~urlJoin",
    "access": null,
    "export": true,
    "importPath": "groundwork.js/src/utils.js",
    "importStyle": "{urlJoin}",
    "description": "Join an array of strings into a URL",
    "lineNumber": 53,
    "params": [
      {
        "nullable": null,
        "types": [
          "...url<string>"
        ],
        "spread": true,
        "optional": false,
        "name": "url",
        "description": "fragments"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 246,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "validEmail",
    "memberof": "src/utils.js",
    "longname": "src/utils.js~validEmail",
    "access": null,
    "export": true,
    "importPath": "groundwork.js/src/utils.js",
    "importStyle": "{validEmail}",
    "description": "Attempt to validate an email address with a variant on RFC5322",
    "lineNumber": 89,
    "unknown": [
      {
        "tagName": "@link",
        "tagValue": "http://tools.ietf.org/html/rfc5322#section-3.4"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 247,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "isApiVersion",
    "memberof": "src/utils.js",
    "longname": "src/utils.js~isApiVersion",
    "access": null,
    "export": true,
    "importPath": "groundwork.js/src/utils.js",
    "importStyle": "{isApiVersion}",
    "description": "Predicate that checks the value of a string against the API Version format",
    "lineNumber": 208,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "version",
        "description": "should be `YYYY-MM-DD` with an optional integer"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 249,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Infinity",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 250,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~NaN",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 251,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~undefined",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 252,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~null",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 253,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 254,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 255,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 256,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 257,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 258,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 259,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Symbol",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 260,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Error",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 261,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~EvalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 262,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~InternalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 263,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RangeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 264,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ReferenceError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 265,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~SyntaxError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 266,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~TypeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 267,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~URIError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 268,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 269,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 270,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Date",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 271,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~String",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 272,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~string",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 273,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RegExp",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 274,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 275,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 276,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 277,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8ClampedArray",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 278,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 279,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 280,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 281,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 282,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 283,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float64Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 284,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Map",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 285,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Set",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 286,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakMap",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 287,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakSet",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 288,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ArrayBuffer",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 289,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~DataView",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 290,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~JSON",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 291,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Promise",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 292,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Generator",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 293,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~GeneratorFunction",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 294,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Reflect",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 295,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Proxy",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 297,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "CanvasRenderingContext2D",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~CanvasRenderingContext2D",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 298,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "DocumentFragment",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~DocumentFragment",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 299,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Element",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Element",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Element",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 300,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Event",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Event",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Event",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 301,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Node",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Node",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Node",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 302,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "NodeList",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/NodeList",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~NodeList",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 303,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "XMLHttpRequest",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~XMLHttpRequest",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 304,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "AudioContext",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/AudioContext",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~AudioContext",
    "access": null,
    "description": "",
    "builtinExternal": true
  }
]